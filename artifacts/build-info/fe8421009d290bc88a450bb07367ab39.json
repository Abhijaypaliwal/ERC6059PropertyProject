{
	"id": "fe8421009d290bc88a450bb07367ab39",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"nestable.sol": {
				"content": "// SPDX-License-Identifier: CC0-1.0\n\n//Generally all interactions should propagate downstream\n\npragma solidity ^0.8.16;\n/// @title EIP-6059 Parent-Governed Nestable Non-Fungible Tokens\n/// @dev See https://eips.ethereum.org/EIPS/eip-6059\n/// @dev Note: the ERC-165 identifier for this interface is 0x42b0e56f.\n\ninterface IERC6059 /* is ERC165 */ {\n    /**\n     * @notice The core struct of ownership.\n     * @dev The `DirectOwner` struct is used to store information of the next immediate owner, be it the parent token,\n     * an `ERC721Receiver` contract or an externally owned account.\n     * @dev If the token is not owned by an NFT, the `tokenId` MUST equal `0`.\n     * @param tokenId ID of the parent token\n     * @param ownerAddress Address of the owner of the token. If the owner is another token, then the address MUST be\n     *  the one of the parent token's collection smart contract. If the owner is externally owned account, the address\n     *  MUST be the address of this account\n     */\n    struct DirectOwner {\n        uint256 tokenId;\n        address ownerAddress;\n    }\n\n    /**\n     * @notice Used to notify listeners that the token is being transferred.\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     * @param from Address of the previous immediate owner, which is a smart contract if the token was nested.\n     * @param to Address of the new immediate owner, which is a smart contract if the token is being nested.\n     * @param fromTokenId ID of the previous parent token. If the token was not nested before, the value MUST be `0`\n     * @param toTokenId ID of the new parent token. If the token is not being nested, the value MUST be `0`\n     * @param tokenId ID of the token being transferred\n     */\n    event NestTransfer(\n        address indexed from,\n        address indexed to,\n        uint256 fromTokenId,\n        uint256 toTokenId,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @notice Used to notify listeners that a new token has been added to a given token's pending children array.\n     * @dev Emitted when a child NFT is added to a token's pending array.\n     * @param tokenId ID of the token that received a new pending child token\n     * @param childIndex Index of the proposed child token in the parent token's pending children array\n     * @param childAddress Address of the proposed child token's collection smart contract\n     * @param childId ID of the child token in the child token's collection smart contract\n     */\n    event ChildProposed(\n        uint256 indexed tokenId,\n        uint256 childIndex,\n        address indexed childAddress,\n        uint256 indexed childId\n    );\n\n    /**\n     * @notice Used to notify listeners that a new child token was accepted by the parent token.\n     * @dev Emitted when a parent token accepts a token from its pending array, migrating it to the active array.\n     * @param tokenId ID of the token that accepted a new child token\n     * @param childIndex Index of the newly accepted child token in the parent token's active children array\n     * @param childAddress Address of the child token's collection smart contract\n     * @param childId ID of the child token in the child token's collection smart contract\n     */\n    event ChildAccepted(\n        uint256 indexed tokenId,\n        uint256 childIndex,\n        address indexed childAddress,\n        uint256 indexed childId\n    );\n\n    /**\n     * @notice Used to notify listeners that all pending child tokens of a given token have been rejected.\n     * @dev Emitted when a token removes all a child tokens from its pending array.\n     * @param tokenId ID of the token that rejected all of the pending children\n     */\n    event AllChildrenRejected(uint256 indexed tokenId);\n\n    /**\n     * @notice Used to notify listeners a child token has been transferred from parent token.\n     * @dev Emitted when a token transfers a child from itself, transferring ownership.\n     * @param tokenId ID of the token that transferred a child token\n     * @param childIndex Index of a child in the array from which it is being transferred\n     * @param childAddress Address of the child token's collection smart contract\n     * @param childId ID of the child token in the child token's collection smart contract\n     * @param fromPending A boolean value signifying whether the token was in the pending child tokens array (`true`) or\n     *  in the active child tokens array (`false`)\n     */\n    event ChildTransferred(\n        uint256 indexed tokenId,\n        uint256 childIndex,\n        address indexed childAddress,\n        uint256 indexed childId,\n        bool fromPending\n    );\n\n    /**\n     * @notice The core child token struct, holding the information about the child tokens.\n     * @return tokenId ID of the child token in the child token's collection smart contract\n     * @return contractAddress Address of the child token's smart contract\n     */\n    struct Child {\n        uint256 tokenId;\n        address contractAddress;\n    }\n\n    /**\n     * @notice Used to retrieve the *root* owner of a given token.\n     * @dev The *root* owner of the token is the top-level owner in the hierarchy which is not an NFT.\n     * @dev If the token is owned by another NFT, it MUST recursively look up the parent's root owner.\n     * @param tokenId ID of the token for which the *root* owner has been retrieved\n     * @return owner The *root* owner of the token\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @notice Used to retrieve the immediate owner of the given token.\n     * @dev If the immediate owner is another token, the address returned, MUST be the one of the parent token's\n     *  collection smart contract.\n     * @param tokenId ID of the token for which the direct owner is being retrieved\n     * @return address Address of the given token's owner\n     * @return uint256 The ID of the parent token. MUST be `0` if the owner is not an NFT\n     * @return bool The boolean value signifying whether the owner is an NFT or not\n     */\n    function directOwnerOf(uint256 tokenId)\n        external\n        view\n        returns (\n            address,\n            uint256,\n            bool\n        );\n\n    /**\n     * @notice Used to burn a given token.\n     * @dev When a token is burned, all of its child tokens are recursively burned as well.\n     * @dev When specifying the maximum recursive burns, the execution MUST be reverted if there are more children to be\n     *  burned.\n     * @dev Setting the `maxRecursiveBurn` value to 0 SHOULD only attempt to burn the specified token and MUST revert if\n     *  there are any child tokens present.\n     * @param tokenId ID of the token to burn\n     * @param maxRecursiveBurns Maximum number of tokens to recursively burn\n     * @return uint256 Number of recursively burned children\n     */\n    function burn(uint256 tokenId, uint256 maxRecursiveBurns)\n        external\n        returns (uint256);\n\n    /**\n     * @notice Used to add a child token to a given parent token.\n     * @dev This adds the child token into the given parent token's pending child tokens array.\n     * @dev The destination token MUST NOT be a child token of the token being transferred or one of its downstream\n     *  child tokens.\n     * @dev This method MUST NOT be called directly. It MUST only be called from an instance of `IERC6059` as part of a \n        `nestTransfer` or `transferChild` to an NFT.\n     * @dev Requirements:\n     *\n     *  - `directOwnerOf` on the child contract MUST resolve to the called contract.\n     *  - the pending array of the parent contract MUST not be full.\n     * @param parentId ID of the parent token to receive the new child token\n     * @param childId ID of the new proposed child token\n     */\n    function addChild(uint256 parentId, uint256 childId,bytes calldata data) external;\n\n    /**\n     * @notice Used to accept a pending child token for a given parent token.\n     * @dev This moves the child token from parent token's pending child tokens array into the active child tokens\n     *  array.\n     * @param parentId ID of the parent token for which the child token is being accepted\n     * @param childIndex Index of the child token to accept in the pending children array of a given token\n     * @param childAddress Address of the collection smart contract of the child token expected to be at the specified\n     *  index\n     * @param childId ID of the child token expected to be located at the specified index\n     */\n    function acceptChild(\n        uint256 parentId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId\n    ) external;\n\n    /**\n     * @notice Used to reject all pending children of a given parent token.\n     * @dev Removes the children from the pending array mapping.\n     * @dev The children's ownership structures are not updated.\n     * @dev Requirements:\n     *\n     * - `parentId` MUST exist\n     * @param parentId ID of the parent token for which to reject all of the pending tokens\n     * @param maxRejections Maximum number of expected children to reject, used to prevent from\n     *  rejecting children which arrive just before this operation.\n     */\n    function rejectAllChildren(uint256 parentId, uint256 maxRejections) external;\n\n    /**\n     * @notice Used to transfer a child token from a given parent token.\n     * @dev MUST remove the child from the parent's active or pending children.\n     * @dev When transferring a child token, the owner of the token MUST be set to `to`, or not updated in the event of `to`\n     *  being the `0x0` address.\n     * @param tokenId ID of the parent token from which the child token is being transferred\n     * @param to Address to which to transfer the token to\n     * @param destinationId ID of the token to receive this child token (MUST be 0 if the destination is not a token)\n     * @param childIndex Index of a token we are transferring, in the array it belongs to (can be either active array or\n     *  pending array)\n     * @param childAddress Address of the child token's collection smart contract\n     * @param childId ID of the child token in its own collection smart contract\n     * @param isPending A boolean value indicating whether the child token being transferred is in the pending array of the\n     *  parent token (`true`) or in the active array (`false`)\n     * @param data Additional data with no specified format, sent in call to `to`\n     */\n    function transferChild(\n        uint256 tokenId,\n        address to,\n        uint256 destinationId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId,\n        bool isPending,\n        bytes memory data\n    ) external;\n\n    /**\n     * @notice Used to retrieve the active child tokens of a given parent token.\n     * @dev Returns array of Child structs existing for parent token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which to retrieve the active child tokens\n     * @return struct[] An array of Child structs containing the parent token's active child tokens\n     */\n    function childrenOf(uint256 parentId)\n        external\n        view\n        returns (Child[] memory);\n\n    /**\n     * @notice Used to retrieve the pending child tokens of a given parent token.\n     * @dev Returns array of pending Child structs existing for given parent.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which to retrieve the pending child tokens\n     * @return struct[] An array of Child structs containing the parent token's pending child tokens\n     */\n    function pendingChildrenOf(uint256 parentId)\n        external\n        view\n        returns (Child[] memory);\n\n    /**\n     * @notice Used to retrieve a specific active child token for a given parent token.\n     * @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which the child is being retrieved\n     * @param index Index of the child token in the parent token's active child tokens array\n     * @return struct A Child struct containing data about the specified child\n     */\n    function childOf(uint256 parentId, uint256 index)\n        external\n        view\n        returns (Child memory);\n\n    /**\n     * @notice Used to retrieve a specific pending child token from a given parent token.\n     * @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which the pending child token is being retrieved\n     * @param index Index of the child token in the parent token's pending child tokens array\n     * @return struct A Child struct containing data about the specified child\n     */\n    function pendingChildOf(uint256 parentId, uint256 index)\n        external\n        view\n        returns (Child memory);\n\n    /**\n     * @notice Used to transfer the token into another token.\n     * @dev The destination token MUST NOT be a child token of the token being transferred or one of its downstream\n     *  child tokens.\n     * @param from Address of the direct owner of the token to be transferred\n     * @param to Address of the receiving token's collection smart contract\n     * @param tokenId ID of the token being transferred\n     * @param destinationId ID of the token to receive the token being transferred\n     */\n    function nestTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 destinationId,\n        bytes memory data\n\n    ) external;\n}\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nerror ChildAlreadyExists();\nerror ChildIndexOutOfRange();\nerror ERC721AddressZeroIsNotaValidOwner();\nerror ERC721ApprovalToCurrentOwner();\nerror ERC721ApproveCallerIsNotOwnerNorApprovedForAll();\nerror ERC721ApproveToCaller();\nerror ERC721InvalidTokenId();\nerror ERC721MintToTheZeroAddress();\nerror ERC721NotApprovedOrOwner();\nerror ERC721TokenAlreadyMinted();\nerror ERC721TransferFromIncorrectOwner();\nerror ERC721TransferToNonReceiverImplementer();\nerror ERC721TransferToTheZeroAddress();\nerror IdZeroForbidden();\nerror IsNotContract();\nerror MaxPendingChildrenReached();\nerror MaxRecursiveBurnsReached(address childContract, uint256 childId);\nerror MintToNonNestableImplementer();\nerror NestableTooDeep();\nerror NestableTransferToDescendant();\nerror NestableTransferToNonNestableImplementer();\nerror NestableTransferToSelf();\nerror NotApprovedOrDirectOwner();\nerror PendingChildIndexOutOfRange();\nerror UnexpectedChildId();\nerror UnexpectedNumberOfChildren();\n\n/**\n * @title NestableToken\n * @author RMRK team\n * @notice Smart contract of the Nestable module.\n * @dev This contract is hierarchy agnostic and can support an arbitrary number of nested levels up and down, as long as\n *  gas limits allow it.\n */\ncontract NestableToken is Context, IERC165, IERC721, IERC6059 {\n    using Address for address;\n\n    uint256 private constant _MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP = 100;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approver address to approved address\n    // The approver is necessary so approvals are invalidated for nested children on transfer\n    // WARNING: If a child NFT returns to a previous root owner, old permissions would be active again\n    mapping(uint256 => mapping(address => address)) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // ------------------- NESTABLE --------------\n\n    // Mapping from token ID to DirectOwner struct\n    mapping(uint256 => DirectOwner) private _directOwners;\n\n    // Mapping of tokenId to array of active children structs\n    mapping(uint256 => Child[]) private _activeChildren;\n\n    // Mapping of tokenId to array of pending children structs\n    mapping(uint256 => Child[]) private _pendingChildren;\n\n    // Mapping of child token address to child token ID to whether they are pending or active on any token\n    // We might have a first extra mapping from token ID, but since the same child cannot be nested into multiple tokens\n    //  we can strip it for size/gas savings.\n    mapping(address => mapping(uint256 => uint256)) internal _childIsInActive;\n\n    // -------------------------- MODIFIERS ----------------------------\n\n    /**\n     * @notice Used to verify that the caller is either the owner of the token or approved to manage it by its owner.\n     * @dev If the caller is not the owner of the token or approved to manage it by its owner, the execution will be\n     *  reverted.\n     * @param tokenId ID of the token to check\n     */\n    function _onlyApprovedOrOwner(uint256 tokenId) private view {\n        if (!_isApprovedOrOwner(_msgSender(), tokenId))\n            revert ERC721NotApprovedOrOwner();\n    }\n\n    /**\n     * @notice Used to verify that the caller is either the owner of the token or approved to manage it by its owner.\n     * @param tokenId ID of the token to check\n     */\n    modifier onlyApprovedOrOwner(uint256 tokenId) {\n        _onlyApprovedOrOwner(tokenId);\n        _;\n    }\n\n    /**\n     * @notice Used to verify that the caller is approved to manage the given token or it its direct owner.\n     * @dev This does not delegate to ownerOf, which returns the root owner, but rater uses an owner from DirectOwner\n     *  struct.\n     * @dev The execution is reverted if the caller is not immediate owner or approved to manage the given token.\n     * @dev Used for parent-scoped transfers.\n     * @param tokenId ID of the token to check.\n     */\n    function _onlyApprovedOrDirectOwner(uint256 tokenId) private view {\n        if (!_isApprovedOrDirectOwner(_msgSender(), tokenId))\n            revert NotApprovedOrDirectOwner();\n    }\n\n    /**\n     * @notice Used to verify that the caller is approved to manage the given token or is its direct owner.\n     * @param tokenId ID of the token to check\n     */\n    modifier onlyApprovedOrDirectOwner(uint256 tokenId) {\n        _onlyApprovedOrDirectOwner(tokenId);\n        _;\n    }\n\n    // ------------------------------- ERC721 ---------------------------------\n    /**\n     * @inheritdoc IERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual returns (bool) {\n        return\n            interfaceId == type(IERC165).interfaceId ||\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            interfaceId == type(IERC6059).interfaceId;\n    }\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) revert ERC721AddressZeroIsNotaValidOwner();\n        return _balances[owner];\n    }\n\n    ////////////////////////////////////////\n    //              TRANSFERS\n    ////////////////////////////////////////\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual onlyApprovedOrDirectOwner(tokenId) {\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual onlyApprovedOrDirectOwner(tokenId) {\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @notice Used to transfer the token into another token.\n     * @dev The destination token MUST NOT be a child token of the token being transferred or one of its downstream\n     *  child tokens.\n     * @param from Address of the direct owner of the token to be transferred\n     * @param to Address of the receiving token's collection smart contract\n     * @param tokenId ID of the token being transferred\n     * @param destinationId ID of the token to receive the token being transferred\n     */\n    function nestTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 destinationId,\n        bytes memory data\n    ) public virtual onlyApprovedOrDirectOwner(tokenId) {\n        _nestTransfer(from, to, tokenId, destinationId, data);\n    }\n\n    /**\n     * @notice Used to safely transfer the token form `from` to `to`.\n     * @dev The function checks that contract recipients are aware of the ERC721 protocol to prevent tokens from being\n     *  forever locked.\n     * @dev This internal function is equivalent to {safeTransferFrom}, and can be used to e.g. implement alternative\n     *  mechanisms to perform token transfer, such as signature-based.\n     * @dev Requirements:\n     *\n     *  - `from` cannot be the zero address.\n     *  - `to` cannot be the zero address.\n     *  - `tokenId` token must exist and be owned by `from`.\n     *  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     * @dev Emits a {Transfer} event.\n     * @param from Address of the account currently owning the given token\n     * @param to Address to transfer the token to\n     * @param tokenId ID of the token to transfer\n     * @param data Additional data with no specified format, sent in call to `to`\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        if (!_checkOnERC721Received(from, to, tokenId, data))\n            revert ERC721TransferToNonReceiverImplementer();\n    }\n\n    /**\n     * @notice Used to transfer the token from `from` to `to`.\n     * @dev As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     * @dev Requirements:\n     *\n     *  - `to` cannot be the zero address.\n     *  - `tokenId` token must be owned by `from`.\n     * @dev Emits a {Transfer} event.\n     * @param from Address of the account currently owning the given token\n     * @param to Address to transfer the token to\n     * @param tokenId ID of the token to transfer\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        (address immediateOwner, uint256 parentId, ) = directOwnerOf(tokenId);\n        if (immediateOwner != from) revert ERC721TransferFromIncorrectOwner();\n        if (to == address(0)) revert ERC721TransferToTheZeroAddress();\n\n        _beforeTokenTransfer(from, to, tokenId);\n        _beforeNestedTokenTransfer(immediateOwner, to, parentId, 0, tokenId);\n\n        _balances[from] -= 1;\n        _updateOwnerAndClearApprovals(tokenId, 0, to);\n        _balances[to] += 1;\n\n        emit Transfer(from, to, tokenId);\n        emit NestTransfer(immediateOwner, to, parentId, 0, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n        _afterNestedTokenTransfer(immediateOwner, to, parentId, 0, tokenId);\n    }\n\n    /**\n     * @notice Used to transfer a token into another token.\n     * @dev Attempting to nest a token into `0x0` address will result in reverted transaction.\n     * @dev Attempting to nest a token into itself will result in reverted transaction.\n     * @param from Address of the account currently owning the given token\n     * @param to Address of the receiving token's collection smart contract\n     * @param tokenId ID of the token to transfer\n     * @param destinationId ID of the token receiving the given token\n     * @param data Additional data with no specified format, sent in the addChild call\n     */\n    function _nestTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 destinationId,\n        bytes memory data\n    ) internal virtual {\n        (address immediateOwner, uint256 parentId, ) = directOwnerOf(tokenId);\n        if (immediateOwner != from) revert ERC721TransferFromIncorrectOwner();\n        if (to == address(0)) revert ERC721TransferToTheZeroAddress();\n        if (to == address(this) && tokenId == destinationId)\n            revert NestableTransferToSelf();\n\n        // Destination contract checks:\n        // It seems redundant, but otherwise it would revert with no error\n        if (!to.isContract()) revert IsNotContract();\n        if (!IERC165(to).supportsInterface(type(IERC6059).interfaceId))\n            revert NestableTransferToNonNestableImplementer();\n        _checkForInheritanceLoop(tokenId, to, destinationId);\n\n        _beforeTokenTransfer(from, to, tokenId);\n        _beforeNestedTokenTransfer(\n            immediateOwner,\n            to,\n            parentId,\n            destinationId,\n            tokenId\n        );\n        _balances[from] -= 1;\n        _updateOwnerAndClearApprovals(tokenId, destinationId, to);\n        _balances[to] += 1;\n\n        // Sending to NFT:\n        _sendToNFT(immediateOwner, to, parentId, destinationId, tokenId, data);\n    }\n\n    /**\n     * @notice Used to send a token to another token.\n     * @dev If the token being sent is currently owned by an externally owned account, the `parentId` should equal `0`.\n     * @dev Emits {Transfer} event.\n     * @dev Emits {NestTransfer} event.\n     * @param from Address from which the token is being sent\n     * @param to Address of the collection smart contract of the token to receive the given token\n     * @param parentId ID of the current parent token of the token being sent\n     * @param destinationId ID of the tokento receive the token being sent\n     * @param tokenId ID of the token being sent\n     * @param data Additional data with no specified format, sent in the addChild call\n     */\n    function _sendToNFT(\n        address from,\n        address to,\n        uint256 parentId,\n        uint256 destinationId,\n        uint256 tokenId,\n        bytes memory data\n    ) private {\n        IERC6059 destContract = IERC6059(to);\n        destContract.addChild(destinationId, tokenId, data);\n        _afterTokenTransfer(from, to, tokenId);\n        _afterNestedTokenTransfer(from, to, parentId, destinationId, tokenId);\n\n        emit Transfer(from, to, tokenId);\n        emit NestTransfer(from, to, parentId, destinationId, tokenId);\n    }\n\n    /**\n     * @notice Used to check if nesting a given token into a specified token would create an inheritance loop.\n     * @dev If a loop would occur, the tokens would be unmanageable, so the execution is reverted if one is detected.\n     * @dev The check for inheritance loop is bounded to guard against too much gas being consumed.\n     * @param currentId ID of the token that would be nested\n     * @param targetContract Address of the collection smart contract of the token into which the given token would be\n     *  nested\n     * @param targetId ID of the token into which the given token would be nested\n     */\n    function _checkForInheritanceLoop(\n        uint256 currentId,\n        address targetContract,\n        uint256 targetId\n    ) private view {\n        for (uint256 i; i < _MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP; ) {\n            (\n                address nextOwner,\n                uint256 nextOwnerTokenId,\n                bool isNft\n            ) = IERC6059(targetContract).directOwnerOf(targetId);\n            // If there's a final address, we're good. There's no loop.\n            if (!isNft) {\n                return;\n            }\n            // Ff the current nft is an ancestor at some point, there is an inheritance loop\n            if (nextOwner == address(this) && nextOwnerTokenId == currentId) {\n                revert NestableTransferToDescendant();\n            }\n            // We reuse the parameters to save some contract size\n            targetContract = nextOwner;\n            targetId = nextOwnerTokenId;\n            unchecked {\n                ++i;\n            }\n        }\n        revert NestableTooDeep();\n    }\n\n    ////////////////////////////////////////\n    //              MINTING\n    ////////////////////////////////////////\n\n    /**\n     * @notice Used to safely mint a token to a specified address.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must not exist.\n     *  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     * @dev Emits a {Transfer} event.\n     * @param to Address to which to safely mint the gven token\n     * @param tokenId ID of the token to mint to the specified address\n     */\n    function _safeMint(address to, uint256 tokenId) external virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @notice Used to safely mint the token to the specified address while passing the additional data to contract\n     *  recipients.\n     * @param to Address to which to mint the token\n     * @param tokenId ID of the token to mint\n     * @param data Additional data to send with the tokens\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        if (!_checkOnERC721Received(address(0), to, tokenId, data))\n            revert ERC721TransferToNonReceiverImplementer();\n    }\n\n    /**\n     * @notice Used to mint a specified token to a given address.\n     * @dev WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must not exist.\n     *  - `to` cannot be the zero address.\n     * @dev Emits a {Transfer} event.\n     * @param to Address to mint the token to\n     * @param tokenId ID of the token to mint\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        _innerMint(to, tokenId, 0);\n\n        emit Transfer(address(0), to, tokenId);\n        emit NestTransfer(address(0), to, 0, 0, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n        _afterNestedTokenTransfer(address(0), to, 0, 0, tokenId);\n    }\n\n    /**\n     * @notice Used to mint a child token to a given parent token.\n     * @param to Address of the collection smart contract of the token into which to mint the child token\n     * @param tokenId ID of the token to mint\n     * @param destinationId ID of the token into which to mint the new child token\n     * @param data Additional data with no specified format, sent in the addChild call\n     */\n    function _nestMint(\n        address to,\n        uint256 tokenId,\n        uint256 destinationId,\n        bytes memory data\n    ) external virtual {\n        // It seems redundant, but otherwise it would revert with no error\n        if (!to.isContract()) revert IsNotContract();\n        if (!IERC165(to).supportsInterface(type(IERC6059).interfaceId))\n            revert MintToNonNestableImplementer();\n\n        _innerMint(to, tokenId, destinationId);\n        _sendToNFT(address(0), to, 0, destinationId, tokenId, data);\n    }\n\n    /**\n     * @notice Used to mint a child token into a given parent token.\n     * @dev Requirements:\n     *\n     *  - `to` cannot be the zero address.\n     *  - `tokenId` must not exist.\n     *  - `tokenId` must not be `0`.\n     * @param to Address of the collection smart contract of the token into which to mint the child token\n     * @param tokenId ID of the token to mint\n     * @param destinationId ID of the token into which to mint the new token\n     */\n    function _innerMint(\n        address to,\n        uint256 tokenId,\n        uint256 destinationId\n    ) private {\n        if (to == address(0)) revert ERC721MintToTheZeroAddress();\n        if (_exists(tokenId)) revert ERC721TokenAlreadyMinted();\n        if (tokenId == 0) revert IdZeroForbidden();\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n        _beforeNestedTokenTransfer(address(0), to, 0, destinationId, tokenId);\n\n        _balances[to] += 1;\n        _directOwners[tokenId] = DirectOwner({\n            ownerAddress: to,\n            tokenId: destinationId\n        });\n    }\n\n    ////////////////////////////////////////\n    //              Ownership\n    ////////////////////////////////////////\n\n    /**\n     * @notice Used to retrieve the root owner of the given token.\n     * @dev Root owner is always the externally owned account.\n     * @dev If the given token is owned by another token, it will recursively query the parent tokens until reaching the\n     *  root owner.\n     * @param tokenId ID of the token for which the root owner is being retrieved\n     * @return address Address of the root owner of the given token\n     */\n    function ownerOf(\n        uint256 tokenId\n    ) public view virtual override(IERC6059, IERC721) returns (address) {\n        (address owner, uint256 ownerTokenId, bool isNft) = directOwnerOf(\n            tokenId\n        );\n        if (isNft) {\n            owner = IERC6059(owner).ownerOf(ownerTokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @notice Used to retrieve the immediate owner of the given token.\n     * @dev In the event the NFT is owned by an externally owned account, `tokenId` will be `0`.\n     * @param tokenId ID of the token for which the immediate owner is being retrieved\n     * @return address Address of the immediate owner. If the token is owned by an externally owned account, its address\n     *  will be returned. If the token is owned by another token, the parent token's collection smart contract address\n     *  is returned\n     * @return uint256 Token ID of the immediate owner. If the immediate owner is an externally owned account, the value\n     *  should be `0`\n     * @return bool A boolean value signifying whether the immediate owner is a token (`true`) or not (`false`)\n     */\n    function directOwnerOf(\n        uint256 tokenId\n    ) public view virtual returns (address, uint256, bool) {\n        DirectOwner memory owner = _directOwners[tokenId];\n        if (owner.ownerAddress == address(0)) revert ERC721InvalidTokenId();\n        return (owner.ownerAddress, owner.tokenId, owner.tokenId != 0);\n    }\n\n    ////////////////////////////////////////\n    //              BURNING\n    ////////////////////////////////////////\n\n    /**\n     * @notice Used to burn a given token.\n     * @param tokenId ID of the token to burn\n     */\n    function burn(uint256 tokenId) public virtual {\n        burn(tokenId, 0);\n    }\n\n    /**\n     * @notice Used to burn a token.\n     * @dev When a token is burned, its children are recursively burned as well.\n     * @dev The approvals are cleared when the token is burned.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must exist.\n     * @dev Emits a {Transfer} event.\n     * @param tokenId ID of the token to burn\n     * @param maxChildrenBurns Maximum children to recursively burn\n     * @return uint256 The number of recursive burns it took to burn all of the children\n     */\n    function burn(\n        uint256 tokenId,\n        uint256 maxChildrenBurns\n    ) public virtual onlyApprovedOrDirectOwner(tokenId) returns (uint256) {\n        return _burn(tokenId, maxChildrenBurns);\n    }\n\n    /**\n     * @notice Used to burn a token.\n     * @dev When a token is burned, its children are recursively burned as well.\n     * @dev The approvals are cleared when the token is burned.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must exist.\n     * @dev Emits a {Transfer} event.\n     * @dev Emits a {NestTransfer} event.\n     * @param tokenId ID of the token to burn\n     * @param maxChildrenBurns Maximum children to recursively burn\n     * @return uint256 The number of recursive burns it took to burn all of the children\n     */\n    function _burn(\n        uint256 tokenId,\n        uint256 maxChildrenBurns\n    ) internal virtual returns (uint256) {\n        (address immediateOwner, uint256 parentId, ) = directOwnerOf(tokenId);\n        address owner = ownerOf(tokenId);\n        _balances[immediateOwner] -= 1;\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n        _beforeNestedTokenTransfer(\n            immediateOwner,\n            address(0),\n            parentId,\n            0,\n            tokenId\n        );\n\n        _approve(address(0), tokenId);\n        _cleanApprovals(tokenId);\n\n        Child[] memory children = childrenOf(tokenId);\n\n        delete _activeChildren[tokenId];\n        delete _pendingChildren[tokenId];\n        delete _tokenApprovals[tokenId][owner];\n\n        uint256 pendingRecursiveBurns;\n        uint256 totalChildBurns;\n\n        uint256 length = children.length; //gas savings\n        for (uint256 i; i < length; ) {\n            if (totalChildBurns >= maxChildrenBurns)\n                revert MaxRecursiveBurnsReached(\n                    children[i].contractAddress,\n                    children[i].tokenId\n                );\n            delete _childIsInActive[children[i].contractAddress][\n                children[i].tokenId\n            ];\n            unchecked {\n                // At this point we know pendingRecursiveBurns must be at least 1\n                pendingRecursiveBurns = maxChildrenBurns - totalChildBurns;\n            }\n            // We substract one to the next level to count for the token being burned, then add it again on returns\n            // This is to allow the behavior of 0 recursive burns meaning only the current token is deleted.\n            totalChildBurns +=\n                IERC6059(children[i].contractAddress).burn(\n                    children[i].tokenId,\n                    pendingRecursiveBurns - 1\n                ) +\n                1;\n            unchecked {\n                ++i;\n            }\n        }\n        // Can't remove before burning child since child will call back to get root owner\n        delete _directOwners[tokenId];\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n        _afterNestedTokenTransfer(\n            immediateOwner,\n            address(0),\n            parentId,\n            0,\n            tokenId\n        );\n        emit Transfer(owner, address(0), tokenId);\n        emit NestTransfer(immediateOwner, address(0), parentId, 0, tokenId);\n\n        return totalChildBurns;\n    }\n\n    ////////////////////////////////////////\n    //              APPROVALS\n    ////////////////////////////////////////\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        address owner = ownerOf(tokenId);\n        if (to == owner) revert ERC721ApprovalToCurrentOwner();\n\n        if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender()))\n            revert ERC721ApproveCallerIsNotOwnerNorApprovedForAll();\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function getApproved(\n        uint256 tokenId\n    ) public view virtual returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId][ownerOf(tokenId)];\n    }\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        if (_msgSender() == operator) revert ERC721ApproveToCaller();\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @inheritdoc IERC721\n     */\n    function isApprovedForAll(\n        address owner,\n        address operator\n    ) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @notice Used to grant an approval to manage a given token.\n     * @dev Emits an {Approval} event.\n     * @param to Address to which the approval is being granted\n     * @param tokenId ID of the token for which the approval is being granted\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n        _tokenApprovals[tokenId][owner] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @notice Used to update the owner of the token and clear the approvals associated with the previous owner.\n     * @dev The `destinationId` should equal `0` if the new owner is an externally owned account.\n     * @param tokenId ID of the token being updated\n     * @param destinationId ID of the token to receive the given token\n     * @param to Address of account to receive the token\n     */\n    function _updateOwnerAndClearApprovals(\n        uint256 tokenId,\n        uint256 destinationId,\n        address to\n    ) internal {\n        _directOwners[tokenId] = DirectOwner({\n            ownerAddress: to,\n            tokenId: destinationId\n        });\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n        _cleanApprovals(tokenId);\n    }\n\n    /**\n     * @notice Used to remove approvals for the current owner of the given token.\n     * @param tokenId ID of the token to clear the approvals for\n     */\n    function _cleanApprovals(uint256 tokenId) internal virtual {}\n\n    ////////////////////////////////////////\n    //              UTILS\n    ////////////////////////////////////////\n\n    /**\n     * @notice Used to check whether the given account is allowed to manage the given token.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must exist.\n     * @param spender Address that is being checked for approval\n     * @param tokenId ID of the token being checked\n     * @return bool The boolean value indicating whether the `spender` is approved to manage the given token\n     */\n    function _isApprovedOrOwner(\n        address spender,\n        uint256 tokenId\n    ) internal view virtual returns (bool) {\n        address owner = ownerOf(tokenId);\n        return (spender == owner ||\n            isApprovedForAll(owner, spender) ||\n            getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @notice Used to check whether the account is approved to manage the token or its direct owner.\n     * @param spender Address that is being checked for approval or direct ownership\n     * @param tokenId ID of the token being checked\n     * @return bool The boolean value indicating whether the `spender` is approved to manage the given token or its\n     *  direct owner\n     */\n    function _isApprovedOrDirectOwner(\n        address spender,\n        uint256 tokenId\n    ) internal view virtual returns (bool) {\n        (address owner, uint256 parentId, ) = directOwnerOf(tokenId);\n        // When the parent is an NFT, only it can do operations\n        if (parentId != 0) {\n            return (spender == owner);\n        }\n        // Otherwise, the owner or approved address can\n        return (spender == owner ||\n            isApprovedForAll(owner, spender) ||\n            getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @notice Used to enforce that the given token has been minted.\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     * @dev The validation checks whether the owner of a given token is a `0x0` address and considers it not minted if\n     *  it is. This means that both tokens that haven't been minted yet as well as the ones that have already been\n     *  burned will cause the transaction to be reverted.\n     * @param tokenId ID of the token to check\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        if (!_exists(tokenId)) revert ERC721InvalidTokenId();\n    }\n\n    /**\n     * @notice Used to check whether the given token exists.\n     * @dev Tokens start existing when they are minted (`_mint`) and stop existing when they are burned (`_burn`).\n     * @param tokenId ID of the token being checked\n     * @return bool The boolean value signifying whether the token exists\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _directOwners[tokenId].ownerAddress != address(0);\n    }\n\n    /**\n     * @notice Used to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * @dev The call is not executed if the target address is not a contract.\n     * @param from Address representing the previous owner of the given token\n     * @param to Yarget address that will receive the tokens\n     * @param tokenId ID of the token to be transferred\n     * @param data Optional data to send along with the call\n     * @return bool Boolean value signifying whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    _msgSender(),\n                    from,\n                    tokenId,\n                    data\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721TransferToNonReceiverImplementer();\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    ////////////////////////////////////////\n    //      CHILD MANAGEMENT PUBLIC\n    ////////////////////////////////////////\n\n    /**\n     * @notice Used to add a child token to a given parent token.\n     * @dev This adds the iichild token into the given parent token's pending child tokens array.\n     * @dev You MUST NOT call this method directly. To add a a child to an NFT you must use either\n     *  `nestTransfer`, `nestMint` or `transferChild` to the NFT.\n     * @dev Requirements:\n     *\n     *  - `ownerOf` on the child contract must resolve to the called contract.\n     *  - The pending array of the parent contract must not be full.\n     * @param parentId ID of the parent token to receive the new child token\n     * @param childId ID of the new proposed child token\n     * @param data Additional data with no specified format\n     */\n    function addChild(\n        uint256 parentId,\n        uint256 childId,\n        bytes memory data\n    ) public virtual {\n        _requireMinted(parentId);\n\n        address childAddress = _msgSender();\n        if (!childAddress.isContract()) revert IsNotContract();\n\n        Child memory child = Child({\n            contractAddress: childAddress,\n            tokenId: childId\n        });\n\n        _beforeAddChild(parentId, childAddress, childId);\n\n        uint256 length = pendingChildrenOf(parentId).length;\n\n        if (length < 128) {\n            _pendingChildren[parentId].push(child);\n        } else {\n            revert MaxPendingChildrenReached();\n        }\n\n        // Previous length matches the index for the new child\n        emit ChildProposed(parentId, length, childAddress, childId);\n\n        _afterAddChild(parentId, childAddress, childId);\n    }\n\n    /**\n     * @notice @notice Used to accept a pending child token for a given parent token.\n     * @dev This moves the child token from parent token's pending child tokens array into the active child tokens\n     *  array.\n     * @param parentId ID of the parent token for which the child token is being accepted\n     * @param childIndex Index of a child tokem in the given parent's pending children array\n     * @param childAddress Address of the collection smart contract of the child token expected to be located at the\n     *  specified index of the given parent token's pending children array\n     * @param childId ID of the child token expected to be located at the specified index of the given parent token's\n     *  pending children array\n     */\n    function acceptChild(\n        uint256 parentId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId\n    ) public virtual onlyApprovedOrOwner(parentId) {\n        _acceptChild(parentId, childIndex, childAddress, childId);\n    }\n\n    /**\n     * @notice Used to accept a pending child token for a given parent token.\n     * @dev This moves the child token from parent token's pending child tokens array into the active child tokens\n     *  array.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must exist\n     *  - `index` must be in range of the pending children array\n     * @param parentId ID of the parent token for which the child token is being accepted\n     * @param childIndex Index of a child tokem in the given parent's pending children array\n     * @param childAddress Address of the collection smart contract of the child token expected to be located at the\n     *  specified index of the given parent token's pending children array\n     * @param childId ID of the child token expected to be located at the specified index of the given parent token's\n     *  pending children array\n     */\n    function _acceptChild(\n        uint256 parentId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId\n    ) internal virtual {\n        if (pendingChildrenOf(parentId).length <= childIndex)\n            revert PendingChildIndexOutOfRange();\n\n        Child memory child = pendingChildOf(parentId, childIndex);\n        _checkExpectedChild(child, childAddress, childId);\n        if (_childIsInActive[childAddress][childId] != 0)\n            revert ChildAlreadyExists();\n\n        _beforeAcceptChild(parentId, childIndex, childAddress, childId);\n\n        // Remove from pending:\n        _removeChildByIndex(_pendingChildren[parentId], childIndex);\n\n        // Add to active:\n        _activeChildren[parentId].push(child);\n        _childIsInActive[childAddress][childId] = 1; // We use 1 as true\n\n        emit ChildAccepted(parentId, childIndex, childAddress, childId);\n\n        _afterAcceptChild(parentId, childIndex, childAddress, childId);\n    }\n\n    /**\n     * @notice Used to reject all pending children of a given parent token.\n     * @dev Removes the children from the pending array mapping.\n     * @dev This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the\n     *  rootOwner of the previous parent.\n     * @param tokenId ID of the parent token for which to reject all of the pending tokens\n     */\n    function rejectAllChildren(uint256 tokenId, uint256 maxRejections) public virtual onlyApprovedOrOwner(tokenId) {\n        _rejectAllChildren(tokenId, maxRejections);\n    }\n\n    /**\n     * @notice Used to reject all pending children of a given parent token.\n     * @dev Removes the children from the pending array mapping.\n     * @dev This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the\n     *  rootOwner of the previous parent.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must exist\n     * @param tokenId ID of the parent token for which to reject all of the pending tokens.\n     * @param maxRejections Maximum number of expected children to reject, used to prevent from\n     *  rejecting children which arrive just before this operation.\n     */\n    function _rejectAllChildren(uint256 tokenId, uint256 maxRejections)\n        internal\n        virtual\n    {\n        if (_pendingChildren[tokenId].length > maxRejections)\n            revert UnexpectedNumberOfChildren();\n\n        _beforeRejectAllChildren(tokenId);\n        delete _pendingChildren[tokenId];\n        emit AllChildrenRejected(tokenId);\n        _afterRejectAllChildren(tokenId);\n    }\n\n    /**\n     * @notice Used to transfer a child token from a given parent token.\n     * @param tokenId ID of the parent token from which the child token is being transferred\n     * @param to Address to which to transfer the token to\n     * @param destinationId ID of the token to receive this child token (MUST be 0 if the destination is not a token)\n     * @param childIndex Index of a token we are transferring, in the array it belongs to (can be either active array or\n     *  pending array)\n     * @param childAddress Address of the child token's collection smart contract.\n     * @param childId ID of the child token in its own collection smart contract.\n     * @param isPending A boolean value indicating whether the child token being transferred is in the pending array of the\n     *  parent token (`true`) or in the active array (`false`)\n     * @param data Additional data with no specified format, sent in call to `_to`\n     */\n    function transferChild(\n        uint256 tokenId,\n        address to,\n        uint256 destinationId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId,\n        bool isPending,\n        bytes memory data\n    ) public virtual onlyApprovedOrOwner(tokenId) {\n        _transferChild(\n            tokenId,\n            to,\n            destinationId,\n            childIndex,\n            childAddress,\n            childId,\n            isPending,\n            data\n        );\n    }\n\n    /**\n     * @notice Used to transfer a child token from a given parent token.\n     * @dev When transferring a child token, the owner of the token is set to `to`, or is not updated in the event of `to`\n     *  being the `0x0` address.\n     * @dev Requirements:\n     *\n     *  - `tokenId` must exist.\n     * @dev Emits {ChildTransferred} event.\n     * @param tokenId ID of the parent token from which the child token is being transferred\n     * @param to Address to which to transfer the token to\n     * @param destinationId ID of the token to receive this child token (MUST be 0 if the destination is not a token)\n     * @param childIndex Index of a token we are transferring, in the array it belongs to (can be either active array or\n     *  pending array)\n     * @param childAddress Address of the child token's collection smart contract.\n     * @param childId ID of the child token in its own collection smart contract.\n     * @param isPending A boolean value indicating whether the child token being transferred is in the pending array of the\n     *  parent token (`true`) or in the active array (`false`)\n     * @param data Additional data with no specified format, sent in call to `_to`\n     */\n    function _transferChild(\n        uint256 tokenId,\n        address to,\n        uint256 destinationId, // newParentId\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId,\n        bool isPending,\n        bytes memory data\n    ) internal virtual {\n        Child memory child;\n        if (isPending) {\n            child = pendingChildOf(tokenId, childIndex);\n        } else {\n            child = childOf(tokenId, childIndex);\n        }\n        _checkExpectedChild(child, childAddress, childId);\n\n        _beforeTransferChild(\n            tokenId,\n            childIndex,\n            childAddress,\n            childId,\n            isPending\n        );\n\n        if (isPending) {\n            _removeChildByIndex(_pendingChildren[tokenId], childIndex);\n        } else {\n            delete _childIsInActive[childAddress][childId];\n            _removeChildByIndex(_activeChildren[tokenId], childIndex);\n        }\n\n        if (to != address(0)) {\n            if (destinationId == 0) {\n                IERC721(childAddress).safeTransferFrom(\n                    address(this),\n                    to,\n                    childId,\n                    data\n                );\n            } else {\n                // Destination is an NFT\n                IERC6059(child.contractAddress).nestTransferFrom(\n                    address(this),\n                    to,\n                    child.tokenId,\n                    destinationId,\n                    data\n                );\n            }\n        }\n\n        emit ChildTransferred(\n            tokenId,\n            childIndex,\n            childAddress,\n            childId,\n            isPending\n        );\n        _afterTransferChild(\n            tokenId,\n            childIndex,\n            childAddress,\n            childId,\n            isPending\n        );\n    }\n\n    function _checkExpectedChild(\n        Child memory child,\n        address expectedAddress,\n        uint256 expectedId\n    ) private pure {\n        if (\n            expectedAddress != child.contractAddress ||\n            expectedId != child.tokenId\n        ) revert UnexpectedChildId();\n    }\n\n    ////////////////////////////////////////\n    //      CHILD MANAGEMENT GETTERS\n    ////////////////////////////////////////\n\n    /**\n     * @notice Used to retrieve the active child tokens of a given parent token.\n     * @dev Returns array of Child structs existing for parent token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which to retrieve the active child tokens\n     * @return struct[] An array of Child structs containing the parent token's active child tokens\n     */\n\n    function childrenOf(\n        uint256 parentId\n    ) public view virtual returns (Child[] memory) {\n        Child[] memory children = _activeChildren[parentId];\n        return children;\n    }\n\n    /**\n     * @notice Used to retrieve the pending child tokens of a given parent token.\n     * @dev Returns array of pending Child structs existing for given parent.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which to retrieve the pending child tokens\n     * @return struct[] An array of Child structs containing the parent token's pending child tokens\n     */\n\n    function pendingChildrenOf(\n        uint256 parentId\n    ) public view virtual returns (Child[] memory) {\n        Child[] memory pendingChildren = _pendingChildren[parentId];\n        return pendingChildren;\n    }\n\n    /**\n     * @notice Used to retrieve a specific active child token for a given parent token.\n     * @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which the child is being retrieved\n     * @param index Index of the child token in the parent token's active child tokens array\n     * @return struct A Child struct containing data about the specified child\n     */\n    function childOf(\n        uint256 parentId,\n        uint256 index\n    ) public view virtual returns (Child memory) {\n        if (childrenOf(parentId).length <= index) revert ChildIndexOutOfRange();\n        Child memory child = _activeChildren[parentId][index];\n        return child;\n    }\n\n    /**\n     * @notice Used to retrieve a specific pending child token from a given parent token.\n     * @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param parentId ID of the parent token for which the pending child token is being retrieved\n     * @param index Index of the child token in the parent token's pending child tokens array\n     * @return struct A Child struct containting data about the specified child\n     */\n    function pendingChildOf(\n        uint256 parentId,\n        uint256 index\n    ) public view virtual returns (Child memory) {\n        if (pendingChildrenOf(parentId).length <= index)\n            revert PendingChildIndexOutOfRange();\n        Child memory child = _pendingChildren[parentId][index];\n        return child;\n    }\n\n    /**\n     * @notice Used to verify that the given child tokwn is included in an active array of a token.\n     * @param childAddress Address of the given token's collection smart contract\n     * @param childId ID of the child token being checked\n     * @return bool A boolean value signifying whether the given child token is included in an active child tokens array\n     *  of a token (`true`) or not (`false`)\n     */\n    function childIsInActive(\n        address childAddress,\n        uint256 childId\n    ) public view virtual returns (bool) {\n        return _childIsInActive[childAddress][childId] != 0;\n    }\n\n    // HOOKS\n\n    /**\n     * @notice Hook that is called before any token transfer. This includes minting and burning.\n     * @dev Calling conditions:\n     *\n     *  - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be transferred to `to`.\n     *  - When `from` is zero, `tokenId` will be minted to `to`.\n     *  - When `to` is zero, ``from``'s `tokenId` will be burned.\n     *  - `from` and `to` are never zero at the same time.\n     *\n     *  To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param from Address from which the token is being transferred\n     * @param to Address to which the token is being transferred\n     * @param tokenId ID of the token being transferred\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called after any transfer of tokens. This includes minting and burning.\n     * @dev Calling conditions:\n     *\n     *  - When `from` and `to` are both non-zero.\n     *  - `from` and `to` are never zero at the same time.\n     *\n     *  To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param from Address from which the token has been transferred\n     * @param to Address to which the token has been transferred\n     * @param tokenId ID of the token that has been transferred\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called before nested token transfer.\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param from Address from which the token is being transferred\n     * @param to Address to which the token is being transferred\n     * @param fromTokenId ID of the token from which the given token is being transferred\n     * @param toTokenId ID of the token to which the given token is being transferred\n     * @param tokenId ID of the token being transferred\n     */\n    function _beforeNestedTokenTransfer(\n        address from,\n        address to,\n        uint256 fromTokenId,\n        uint256 toTokenId,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called after nested token transfer.\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param from Address from which the token was transferred\n     * @param to Address to which the token was transferred\n     * @param fromTokenId ID of the token from which the given token was transferred\n     * @param toTokenId ID of the token to which the given token was transferred\n     * @param tokenId ID of the token that was transferred\n     */\n    function _afterNestedTokenTransfer(\n        address from,\n        address to,\n        uint256 fromTokenId,\n        uint256 toTokenId,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called before a child is added to the pending tokens array of a given token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param tokenId ID of the token that will receive a new pending child token\n     * @param childAddress Address of the collection smart contract of the child token expected to be located at the\n     *  specified index of the given parent token's pending children array\n     * @param childId ID of the child token expected to be located at the specified index of the given parent token's\n     *  pending children array\n     */\n    function _beforeAddChild(\n        uint256 tokenId,\n        address childAddress,\n        uint256 childId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called after a child is added to the pending tokens array of a given token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param tokenId ID of the token that has received a new pending child token\n     * @param childAddress Address of the collection smart contract of the child token expected to be located at the\n     *  specified index of the given parent token's pending children array\n     * @param childId ID of the child token expected to be located at the specified index of the given parent token's\n     *  pending children array\n     */\n    function _afterAddChild(\n        uint256 tokenId,\n        address childAddress,\n        uint256 childId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called before a child is accepted to the active tokens array of a given token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param parentId ID of the token that will accept a pending child token\n     * @param childIndex Index of the child token to accept in the given parent token's pending children array\n     * @param childAddress Address of the collection smart contract of the child token expected to be located at the\n     *  specified index of the given parent token's pending children array\n     * @param childId ID of the child token expected to be located at the specified index of the given parent token's\n     *  pending children array\n     */\n    function _beforeAcceptChild(\n        uint256 parentId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called after a child is accepted to the active tokens array of a given token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param parentId ID of the token that has accepted a pending child token\n     * @param childIndex Index of the child token that was accpeted in the given parent token's pending children array\n     * @param childAddress Address of the collection smart contract of the child token that was expected to be located\n     *  at the specified index of the given parent token's pending children array\n     * @param childId ID of the child token that was expected to be located at the specified index of the given parent\n     *  token's pending children array\n     */\n    function _afterAcceptChild(\n        uint256 parentId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called before a child is transferred from a given child token array of a given token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param tokenId ID of the token that will transfer a child token\n     * @param childIndex Index of the child token that will be transferred from the given parent token's children array\n     * @param childAddress Address of the collection smart contract of the child token that is expected to be located\n     *  at the specified index of the given parent token's children array\n     * @param childId ID of the child token that is expected to be located at the specified index of the given parent\n     *  token's children array\n     * @param isPending A boolean value signifying whether the child token is being transferred from the pending child\n     *  tokens array (`true`) or from the active child tokens array (`false`)\n     */\n    function _beforeTransferChild(\n        uint256 tokenId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId,\n        bool isPending\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called after a child is transferred from a given child token array of a given token.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param tokenId ID of the token that has transferred a child token\n     * @param childIndex Index of the child token that was transferred from the given parent token's children array\n     * @param childAddress Address of the collection smart contract of the child token that was expected to be located\n     *  at the specified index of the given parent token's children array\n     * @param childId ID of the child token that was expected to be located at the specified index of the given parent\n     *  token's children array\n     * @param isPending A boolean value signifying whether the child token was transferred from the pending child tokens\n     *  array (`true`) or from the active child tokens array (`false`)\n     */\n    function _afterTransferChild(\n        uint256 tokenId,\n        uint256 childIndex,\n        address childAddress,\n        uint256 childId,\n        bool isPending\n    ) internal virtual {}\n\n    /**\n     * @notice Hook that is called before a pending child tokens array of a given token is cleared.\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param tokenId ID of the token that will reject all of the pending child tokens\n     */\n    function _beforeRejectAllChildren(uint256 tokenId) internal virtual {}\n\n    /**\n     * @notice Hook that is called after a pending child tokens array of a given token is cleared.\n     * @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     * @param tokenId ID of the token that has rejected all of the pending child tokens\n     */\n    function _afterRejectAllChildren(uint256 tokenId) internal virtual {}\n\n    // HELPERS\n\n    /**\n     * @notice Used to remove a specified child token form an array using its index within said array.\n     * @dev The caller must ensure that the length of the array is valid compared to the index passed.\n     * @dev The Child struct consists of the following values:\n     *  [\n     *      tokenId,\n     *      contractAddress\n     *  ]\n     * @param array An array od Child struct containing info about the child tokens in a given child tokens array\n     * @param index An index of the child token to remove in the accompanying array\n     */\n    function _removeChildByIndex(Child[] storage array, uint256 index) private {\n        array[index] = array[array.length - 1];\n        array.pop();\n    }\n}"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c723f440f114bf5746e2873c6db571c9a5ec727950eaf547473923aa9ec4c91d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c723f440f114bf5746e2873c6db571c9a5ec727950eaf547473923aa9ec4c91d64736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x23 DELEGATECALL BLOCKHASH CALL EQ 0xBF JUMPI CHAINID 0xE2 DUP8 EXTCODECOPY PUSH14 0xB571C9A5EC727950EAF547473923 0xAA SWAP15 0xC4 0xC9 SAR PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c723f440f114bf5746e2873c6db571c9a5ec727950eaf547473923aa9ec4c91d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x23 DELEGATECALL BLOCKHASH CALL EQ 0xBF JUMPI CHAINID 0xE2 DUP8 EXTCODECOPY PUSH14 0xB571C9A5EC727950EAF547473923 0xAA SWAP15 0xC4 0xC9 SAR PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c723f440f114bf5746e2873c6db571c9a5ec727950eaf547473923aa9ec4c91d64736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"nestable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nestable.sol": {
				"IERC6059": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "AllChildrenRejected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "ChildAccepted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "ChildProposed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "fromPending",
									"type": "bool"
								}
							],
							"name": "ChildTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NestTransfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "acceptChild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "addChild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxRecursiveBurns",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "childOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								}
							],
							"name": "childrenOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "directOwnerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "destinationId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "nestTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "pendingChildOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								}
							],
							"name": "pendingChildrenOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxRejections",
									"type": "uint256"
								}
							],
							"name": "rejectAllChildren",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "destinationId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isPending",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferChild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-6059Note: the ERC-165 identifier for this interface is 0x42b0e56f.",
						"events": {
							"AllChildrenRejected(uint256)": {
								"details": "Emitted when a token removes all a child tokens from its pending array.",
								"params": {
									"tokenId": "ID of the token that rejected all of the pending children"
								}
							},
							"ChildAccepted(uint256,uint256,address,uint256)": {
								"details": "Emitted when a parent token accepts a token from its pending array, migrating it to the active array.",
								"params": {
									"childAddress": "Address of the child token's collection smart contract",
									"childId": "ID of the child token in the child token's collection smart contract",
									"childIndex": "Index of the newly accepted child token in the parent token's active children array",
									"tokenId": "ID of the token that accepted a new child token"
								}
							},
							"ChildProposed(uint256,uint256,address,uint256)": {
								"details": "Emitted when a child NFT is added to a token's pending array.",
								"params": {
									"childAddress": "Address of the proposed child token's collection smart contract",
									"childId": "ID of the child token in the child token's collection smart contract",
									"childIndex": "Index of the proposed child token in the parent token's pending children array",
									"tokenId": "ID of the token that received a new pending child token"
								}
							},
							"ChildTransferred(uint256,uint256,address,uint256,bool)": {
								"details": "Emitted when a token transfers a child from itself, transferring ownership.",
								"params": {
									"childAddress": "Address of the child token's collection smart contract",
									"childId": "ID of the child token in the child token's collection smart contract",
									"childIndex": "Index of a child in the array from which it is being transferred",
									"fromPending": "A boolean value signifying whether the token was in the pending child tokens array (`true`) or  in the active child tokens array (`false`)",
									"tokenId": "ID of the token that transferred a child token"
								}
							},
							"NestTransfer(address,address,uint256,uint256,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`.",
								"params": {
									"from": "Address of the previous immediate owner, which is a smart contract if the token was nested.",
									"fromTokenId": "ID of the previous parent token. If the token was not nested before, the value MUST be `0`",
									"to": "Address of the new immediate owner, which is a smart contract if the token is being nested.",
									"toTokenId": "ID of the new parent token. If the token is not being nested, the value MUST be `0`",
									"tokenId": "ID of the token being transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"acceptChild(uint256,uint256,address,uint256)": {
								"details": "This moves the child token from parent token's pending child tokens array into the active child tokens  array.",
								"params": {
									"childAddress": "Address of the collection smart contract of the child token expected to be at the specified  index",
									"childId": "ID of the child token expected to be located at the specified index",
									"childIndex": "Index of the child token to accept in the pending children array of a given token",
									"parentId": "ID of the parent token for which the child token is being accepted"
								}
							},
							"addChild(uint256,uint256,bytes)": {
								"details": "This adds the child token into the given parent token's pending child tokens array.The destination token MUST NOT be a child token of the token being transferred or one of its downstream  child tokens.This method MUST NOT be called directly. It MUST only be called from an instance of `IERC6059` as part of a  `nestTransfer` or `transferChild` to an NFT.Requirements:  - `directOwnerOf` on the child contract MUST resolve to the called contract.  - the pending array of the parent contract MUST not be full.",
								"params": {
									"childId": "ID of the new proposed child token",
									"parentId": "ID of the parent token to receive the new child token"
								}
							},
							"burn(uint256,uint256)": {
								"details": "When a token is burned, all of its child tokens are recursively burned as well.When specifying the maximum recursive burns, the execution MUST be reverted if there are more children to be  burned.Setting the `maxRecursiveBurn` value to 0 SHOULD only attempt to burn the specified token and MUST revert if  there are any child tokens present.",
								"params": {
									"maxRecursiveBurns": "Maximum number of tokens to recursively burn",
									"tokenId": "ID of the token to burn"
								},
								"returns": {
									"_0": "uint256 Number of recursively burned children"
								}
							},
							"childOf(uint256,uint256)": {
								"details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"index": "Index of the child token in the parent token's active child tokens array",
									"parentId": "ID of the parent token for which the child is being retrieved"
								},
								"returns": {
									"_0": "struct A Child struct containing data about the specified child"
								}
							},
							"childrenOf(uint256)": {
								"details": "Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"parentId": "ID of the parent token for which to retrieve the active child tokens"
								},
								"returns": {
									"_0": "struct[] An array of Child structs containing the parent token's active child tokens"
								}
							},
							"directOwnerOf(uint256)": {
								"details": "If the immediate owner is another token, the address returned, MUST be the one of the parent token's  collection smart contract.",
								"params": {
									"tokenId": "ID of the token for which the direct owner is being retrieved"
								},
								"returns": {
									"_0": "address Address of the given token's owner",
									"_1": "uint256 The ID of the parent token. MUST be `0` if the owner is not an NFT",
									"_2": "bool The boolean value signifying whether the owner is an NFT or not"
								}
							},
							"nestTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "The destination token MUST NOT be a child token of the token being transferred or one of its downstream  child tokens.",
								"params": {
									"destinationId": "ID of the token to receive the token being transferred",
									"from": "Address of the direct owner of the token to be transferred",
									"to": "Address of the receiving token's collection smart contract",
									"tokenId": "ID of the token being transferred"
								}
							},
							"ownerOf(uint256)": {
								"details": "The *root* owner of the token is the top-level owner in the hierarchy which is not an NFT.If the token is owned by another NFT, it MUST recursively look up the parent's root owner.",
								"params": {
									"tokenId": "ID of the token for which the *root* owner has been retrieved"
								},
								"returns": {
									"owner": "The *root* owner of the token"
								}
							},
							"pendingChildOf(uint256,uint256)": {
								"details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"index": "Index of the child token in the parent token's pending child tokens array",
									"parentId": "ID of the parent token for which the pending child token is being retrieved"
								},
								"returns": {
									"_0": "struct A Child struct containing data about the specified child"
								}
							},
							"pendingChildrenOf(uint256)": {
								"details": "Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"parentId": "ID of the parent token for which to retrieve the pending child tokens"
								},
								"returns": {
									"_0": "struct[] An array of Child structs containing the parent token's pending child tokens"
								}
							},
							"rejectAllChildren(uint256,uint256)": {
								"details": "Removes the children from the pending array mapping.The children's ownership structures are not updated.Requirements: - `parentId` MUST exist",
								"params": {
									"maxRejections": "Maximum number of expected children to reject, used to prevent from  rejecting children which arrive just before this operation.",
									"parentId": "ID of the parent token for which to reject all of the pending tokens"
								}
							},
							"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
								"details": "MUST remove the child from the parent's active or pending children.When transferring a child token, the owner of the token MUST be set to `to`, or not updated in the event of `to`  being the `0x0` address.",
								"params": {
									"childAddress": "Address of the child token's collection smart contract",
									"childId": "ID of the child token in its own collection smart contract",
									"childIndex": "Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)",
									"data": "Additional data with no specified format, sent in call to `to`",
									"destinationId": "ID of the token to receive this child token (MUST be 0 if the destination is not a token)",
									"isPending": "A boolean value indicating whether the child token being transferred is in the pending array of the  parent token (`true`) or in the active array (`false`)",
									"to": "Address to which to transfer the token to",
									"tokenId": "ID of the parent token from which the child token is being transferred"
								}
							}
						},
						"title": "EIP-6059 Parent-Governed Nestable Non-Fungible Tokens",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptChild(uint256,uint256,address,uint256)": "e97ceaa8",
							"addChild(uint256,uint256,bytes)": "635490cc",
							"burn(uint256,uint256)": "b390c0ab",
							"childOf(uint256,uint256)": "2f32f937",
							"childrenOf(uint256)": "6f19951c",
							"directOwnerOf(uint256)": "fb25fb7a",
							"nestTransferFrom(address,address,uint256,uint256,bytes)": "064c0a3a",
							"ownerOf(uint256)": "6352211e",
							"pendingChildOf(uint256,uint256)": "a898e364",
							"pendingChildrenOf(uint256)": "44ec9344",
							"rejectAllChildren(uint256,uint256)": "97961336",
							"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": "defa80c3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllChildrenRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fromPending\",\"type\":\"bool\"}],\"name\":\"ChildTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NestTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"acceptChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"addChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRecursiveBurns\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"childOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"childrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"directOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"nestTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pendingChildOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"pendingChildrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRejections\",\"type\":\"uint256\"}],\"name\":\"rejectAllChildren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-6059Note: the ERC-165 identifier for this interface is 0x42b0e56f.\",\"events\":{\"AllChildrenRejected(uint256)\":{\"details\":\"Emitted when a token removes all a child tokens from its pending array.\",\"params\":{\"tokenId\":\"ID of the token that rejected all of the pending children\"}},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a parent token accepts a token from its pending array, migrating it to the active array.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the newly accepted child token in the parent token's active children array\",\"tokenId\":\"ID of the token that accepted a new child token\"}},\"ChildProposed(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a child NFT is added to a token's pending array.\",\"params\":{\"childAddress\":\"Address of the proposed child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the proposed child token in the parent token's pending children array\",\"tokenId\":\"ID of the token that received a new pending child token\"}},\"ChildTransferred(uint256,uint256,address,uint256,bool)\":{\"details\":\"Emitted when a token transfers a child from itself, transferring ownership.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of a child in the array from which it is being transferred\",\"fromPending\":\"A boolean value signifying whether the token was in the pending child tokens array (`true`) or  in the active child tokens array (`false`)\",\"tokenId\":\"ID of the token that transferred a child token\"}},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\",\"params\":{\"from\":\"Address of the previous immediate owner, which is a smart contract if the token was nested.\",\"fromTokenId\":\"ID of the previous parent token. If the token was not nested before, the value MUST be `0`\",\"to\":\"Address of the new immediate owner, which is a smart contract if the token is being nested.\",\"toTokenId\":\"ID of the new parent token. If the token is not being nested, the value MUST be `0`\",\"tokenId\":\"ID of the token being transferred\"}}},\"kind\":\"dev\",\"methods\":{\"acceptChild(uint256,uint256,address,uint256)\":{\"details\":\"This moves the child token from parent token's pending child tokens array into the active child tokens  array.\",\"params\":{\"childAddress\":\"Address of the collection smart contract of the child token expected to be at the specified  index\",\"childId\":\"ID of the child token expected to be located at the specified index\",\"childIndex\":\"Index of the child token to accept in the pending children array of a given token\",\"parentId\":\"ID of the parent token for which the child token is being accepted\"}},\"addChild(uint256,uint256,bytes)\":{\"details\":\"This adds the child token into the given parent token's pending child tokens array.The destination token MUST NOT be a child token of the token being transferred or one of its downstream  child tokens.This method MUST NOT be called directly. It MUST only be called from an instance of `IERC6059` as part of a  `nestTransfer` or `transferChild` to an NFT.Requirements:  - `directOwnerOf` on the child contract MUST resolve to the called contract.  - the pending array of the parent contract MUST not be full.\",\"params\":{\"childId\":\"ID of the new proposed child token\",\"parentId\":\"ID of the parent token to receive the new child token\"}},\"burn(uint256,uint256)\":{\"details\":\"When a token is burned, all of its child tokens are recursively burned as well.When specifying the maximum recursive burns, the execution MUST be reverted if there are more children to be  burned.Setting the `maxRecursiveBurn` value to 0 SHOULD only attempt to burn the specified token and MUST revert if  there are any child tokens present.\",\"params\":{\"maxRecursiveBurns\":\"Maximum number of tokens to recursively burn\",\"tokenId\":\"ID of the token to burn\"},\"returns\":{\"_0\":\"uint256 Number of recursively burned children\"}},\"childOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's active child tokens array\",\"parentId\":\"ID of the parent token for which the child is being retrieved\"},\"returns\":{\"_0\":\"struct A Child struct containing data about the specified child\"}},\"childrenOf(uint256)\":{\"details\":\"Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the active child tokens\"},\"returns\":{\"_0\":\"struct[] An array of Child structs containing the parent token's active child tokens\"}},\"directOwnerOf(uint256)\":{\"details\":\"If the immediate owner is another token, the address returned, MUST be the one of the parent token's  collection smart contract.\",\"params\":{\"tokenId\":\"ID of the token for which the direct owner is being retrieved\"},\"returns\":{\"_0\":\"address Address of the given token's owner\",\"_1\":\"uint256 The ID of the parent token. MUST be `0` if the owner is not an NFT\",\"_2\":\"bool The boolean value signifying whether the owner is an NFT or not\"}},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"The destination token MUST NOT be a child token of the token being transferred or one of its downstream  child tokens.\",\"params\":{\"destinationId\":\"ID of the token to receive the token being transferred\",\"from\":\"Address of the direct owner of the token to be transferred\",\"to\":\"Address of the receiving token's collection smart contract\",\"tokenId\":\"ID of the token being transferred\"}},\"ownerOf(uint256)\":{\"details\":\"The *root* owner of the token is the top-level owner in the hierarchy which is not an NFT.If the token is owned by another NFT, it MUST recursively look up the parent's root owner.\",\"params\":{\"tokenId\":\"ID of the token for which the *root* owner has been retrieved\"},\"returns\":{\"owner\":\"The *root* owner of the token\"}},\"pendingChildOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's pending child tokens array\",\"parentId\":\"ID of the parent token for which the pending child token is being retrieved\"},\"returns\":{\"_0\":\"struct A Child struct containing data about the specified child\"}},\"pendingChildrenOf(uint256)\":{\"details\":\"Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the pending child tokens\"},\"returns\":{\"_0\":\"struct[] An array of Child structs containing the parent token's pending child tokens\"}},\"rejectAllChildren(uint256,uint256)\":{\"details\":\"Removes the children from the pending array mapping.The children's ownership structures are not updated.Requirements: - `parentId` MUST exist\",\"params\":{\"maxRejections\":\"Maximum number of expected children to reject, used to prevent from  rejecting children which arrive just before this operation.\",\"parentId\":\"ID of the parent token for which to reject all of the pending tokens\"}},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"details\":\"MUST remove the child from the parent's active or pending children.When transferring a child token, the owner of the token MUST be set to `to`, or not updated in the event of `to`  being the `0x0` address.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in its own collection smart contract\",\"childIndex\":\"Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)\",\"data\":\"Additional data with no specified format, sent in call to `to`\",\"destinationId\":\"ID of the token to receive this child token (MUST be 0 if the destination is not a token)\",\"isPending\":\"A boolean value indicating whether the child token being transferred is in the pending array of the  parent token (`true`) or in the active array (`false`)\",\"to\":\"Address to which to transfer the token to\",\"tokenId\":\"ID of the parent token from which the child token is being transferred\"}}},\"title\":\"EIP-6059 Parent-Governed Nestable Non-Fungible Tokens\",\"version\":1},\"userdoc\":{\"events\":{\"AllChildrenRejected(uint256)\":{\"notice\":\"Used to notify listeners that all pending child tokens of a given token have been rejected.\"},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new child token was accepted by the parent token.\"},\"ChildProposed(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new token has been added to a given token's pending children array.\"},\"ChildTransferred(uint256,uint256,address,uint256,bool)\":{\"notice\":\"Used to notify listeners a child token has been transferred from parent token.\"},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used to notify listeners that the token is being transferred.\"}},\"kind\":\"user\",\"methods\":{\"acceptChild(uint256,uint256,address,uint256)\":{\"notice\":\"Used to accept a pending child token for a given parent token.\"},\"addChild(uint256,uint256,bytes)\":{\"notice\":\"Used to add a child token to a given parent token.\"},\"burn(uint256,uint256)\":{\"notice\":\"Used to burn a given token.\"},\"childOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific active child token for a given parent token.\"},\"childrenOf(uint256)\":{\"notice\":\"Used to retrieve the active child tokens of a given parent token.\"},\"directOwnerOf(uint256)\":{\"notice\":\"Used to retrieve the immediate owner of the given token.\"},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Used to transfer the token into another token.\"},\"ownerOf(uint256)\":{\"notice\":\"Used to retrieve the *root* owner of a given token.\"},\"pendingChildOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific pending child token from a given parent token.\"},\"pendingChildrenOf(uint256)\":{\"notice\":\"Used to retrieve the pending child tokens of a given parent token.\"},\"rejectAllChildren(uint256,uint256)\":{\"notice\":\"Used to reject all pending children of a given parent token.\"},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Used to transfer a child token from a given parent token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nestable.sol\":\"IERC6059\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"nestable.sol\":{\"keccak256\":\"0xc1109db501dde8f7aa5e3c15e592419a3ea254cca8fe0e353cdadc843d542f6d\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://3734ea4e89f3dfaa7500b665068c5fd7c2d83a563b472087a03d15558c481e18\",\"dweb:/ipfs/QmdSDNsHTT8ogYQxeFsVR5v6Krpdm1mJmbsoDKBCzWhxzV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AllChildrenRejected(uint256)": {
								"notice": "Used to notify listeners that all pending child tokens of a given token have been rejected."
							},
							"ChildAccepted(uint256,uint256,address,uint256)": {
								"notice": "Used to notify listeners that a new child token was accepted by the parent token."
							},
							"ChildProposed(uint256,uint256,address,uint256)": {
								"notice": "Used to notify listeners that a new token has been added to a given token's pending children array."
							},
							"ChildTransferred(uint256,uint256,address,uint256,bool)": {
								"notice": "Used to notify listeners a child token has been transferred from parent token."
							},
							"NestTransfer(address,address,uint256,uint256,uint256)": {
								"notice": "Used to notify listeners that the token is being transferred."
							}
						},
						"kind": "user",
						"methods": {
							"acceptChild(uint256,uint256,address,uint256)": {
								"notice": "Used to accept a pending child token for a given parent token."
							},
							"addChild(uint256,uint256,bytes)": {
								"notice": "Used to add a child token to a given parent token."
							},
							"burn(uint256,uint256)": {
								"notice": "Used to burn a given token."
							},
							"childOf(uint256,uint256)": {
								"notice": "Used to retrieve a specific active child token for a given parent token."
							},
							"childrenOf(uint256)": {
								"notice": "Used to retrieve the active child tokens of a given parent token."
							},
							"directOwnerOf(uint256)": {
								"notice": "Used to retrieve the immediate owner of the given token."
							},
							"nestTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Used to transfer the token into another token."
							},
							"ownerOf(uint256)": {
								"notice": "Used to retrieve the *root* owner of a given token."
							},
							"pendingChildOf(uint256,uint256)": {
								"notice": "Used to retrieve a specific pending child token from a given parent token."
							},
							"pendingChildrenOf(uint256)": {
								"notice": "Used to retrieve the pending child tokens of a given parent token."
							},
							"rejectAllChildren(uint256,uint256)": {
								"notice": "Used to reject all pending children of a given parent token."
							},
							"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
								"notice": "Used to transfer a child token from a given parent token."
							}
						},
						"version": 1
					}
				},
				"NestableToken": {
					"abi": [
						{
							"inputs": [],
							"name": "ChildAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ChildIndexOutOfRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721AddressZeroIsNotaValidOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721ApproveCallerIsNotOwnerNorApprovedForAll",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721InvalidTokenId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721MintToTheZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721NotApprovedOrOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721TokenAlreadyMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721TransferToNonReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721TransferToTheZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IdZeroForbidden",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IsNotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaxPendingChildrenReached",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "childContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "MaxRecursiveBurnsReached",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToNonNestableImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NestableTooDeep",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NestableTransferToDescendant",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NestableTransferToNonNestableImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NestableTransferToSelf",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotApprovedOrDirectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingChildIndexOutOfRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnexpectedChildId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnexpectedNumberOfChildren",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "AllChildrenRejected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "ChildAccepted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "ChildProposed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "fromPending",
									"type": "bool"
								}
							],
							"name": "ChildTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NestTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "destinationId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "_nestMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "acceptChild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "addChild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxChildrenBurns",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								}
							],
							"name": "childIsInActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "childOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								}
							],
							"name": "childrenOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "directOwnerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "destinationId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "nestTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "pendingChildOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "parentId",
									"type": "uint256"
								}
							],
							"name": "pendingChildrenOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										}
									],
									"internalType": "struct IERC6059.Child[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxRejections",
									"type": "uint256"
								}
							],
							"name": "rejectAllChildren",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "destinationId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "childIndex",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "childAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "childId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isPending",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferChild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "RMRK team",
						"details": "This contract is hierarchy agnostic and can support an arbitrary number of nested levels up and down, as long as  gas limits allow it.",
						"events": {
							"AllChildrenRejected(uint256)": {
								"details": "Emitted when a token removes all a child tokens from its pending array.",
								"params": {
									"tokenId": "ID of the token that rejected all of the pending children"
								}
							},
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ChildAccepted(uint256,uint256,address,uint256)": {
								"details": "Emitted when a parent token accepts a token from its pending array, migrating it to the active array.",
								"params": {
									"childAddress": "Address of the child token's collection smart contract",
									"childId": "ID of the child token in the child token's collection smart contract",
									"childIndex": "Index of the newly accepted child token in the parent token's active children array",
									"tokenId": "ID of the token that accepted a new child token"
								}
							},
							"ChildProposed(uint256,uint256,address,uint256)": {
								"details": "Emitted when a child NFT is added to a token's pending array.",
								"params": {
									"childAddress": "Address of the proposed child token's collection smart contract",
									"childId": "ID of the child token in the child token's collection smart contract",
									"childIndex": "Index of the proposed child token in the parent token's pending children array",
									"tokenId": "ID of the token that received a new pending child token"
								}
							},
							"ChildTransferred(uint256,uint256,address,uint256,bool)": {
								"details": "Emitted when a token transfers a child from itself, transferring ownership.",
								"params": {
									"childAddress": "Address of the child token's collection smart contract",
									"childId": "ID of the child token in the child token's collection smart contract",
									"childIndex": "Index of a child in the array from which it is being transferred",
									"fromPending": "A boolean value signifying whether the token was in the pending child tokens array (`true`) or  in the active child tokens array (`false`)",
									"tokenId": "ID of the token that transferred a child token"
								}
							},
							"NestTransfer(address,address,uint256,uint256,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`.",
								"params": {
									"from": "Address of the previous immediate owner, which is a smart contract if the token was nested.",
									"fromTokenId": "ID of the previous parent token. If the token was not nested before, the value MUST be `0`",
									"to": "Address of the new immediate owner, which is a smart contract if the token is being nested.",
									"toTokenId": "ID of the new parent token. If the token is not being nested, the value MUST be `0`",
									"tokenId": "ID of the token being transferred"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"_nestMint(address,uint256,uint256,bytes)": {
								"params": {
									"data": "Additional data with no specified format, sent in the addChild call",
									"destinationId": "ID of the token into which to mint the new child token",
									"to": "Address of the collection smart contract of the token into which to mint the child token",
									"tokenId": "ID of the token to mint"
								}
							},
							"_safeMint(address,uint256)": {
								"details": "Requirements:  - `tokenId` must not exist.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.",
								"params": {
									"to": "Address to which to safely mint the gven token",
									"tokenId": "ID of the token to mint to the specified address"
								}
							},
							"acceptChild(uint256,uint256,address,uint256)": {
								"details": "This moves the child token from parent token's pending child tokens array into the active child tokens  array.",
								"params": {
									"childAddress": "Address of the collection smart contract of the child token expected to be located at the  specified index of the given parent token's pending children array",
									"childId": "ID of the child token expected to be located at the specified index of the given parent token's  pending children array",
									"childIndex": "Index of a child tokem in the given parent's pending children array",
									"parentId": "ID of the parent token for which the child token is being accepted"
								}
							},
							"addChild(uint256,uint256,bytes)": {
								"details": "This adds the iichild token into the given parent token's pending child tokens array.You MUST NOT call this method directly. To add a a child to an NFT you must use either  `nestTransfer`, `nestMint` or `transferChild` to the NFT.Requirements:  - `ownerOf` on the child contract must resolve to the called contract.  - The pending array of the parent contract must not be full.",
								"params": {
									"childId": "ID of the new proposed child token",
									"data": "Additional data with no specified format",
									"parentId": "ID of the parent token to receive the new child token"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "ID of the token to burn"
								}
							},
							"burn(uint256,uint256)": {
								"details": "When a token is burned, its children are recursively burned as well.The approvals are cleared when the token is burned.Requirements:  - `tokenId` must exist.Emits a {Transfer} event.",
								"params": {
									"maxChildrenBurns": "Maximum children to recursively burn",
									"tokenId": "ID of the token to burn"
								},
								"returns": {
									"_0": "uint256 The number of recursive burns it took to burn all of the children"
								}
							},
							"childIsInActive(address,uint256)": {
								"params": {
									"childAddress": "Address of the given token's collection smart contract",
									"childId": "ID of the child token being checked"
								},
								"returns": {
									"_0": "bool A boolean value signifying whether the given child token is included in an active child tokens array  of a token (`true`) or not (`false`)"
								}
							},
							"childOf(uint256,uint256)": {
								"details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"index": "Index of the child token in the parent token's active child tokens array",
									"parentId": "ID of the parent token for which the child is being retrieved"
								},
								"returns": {
									"_0": "struct A Child struct containing data about the specified child"
								}
							},
							"childrenOf(uint256)": {
								"details": "Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"parentId": "ID of the parent token for which to retrieve the active child tokens"
								},
								"returns": {
									"_0": "struct[] An array of Child structs containing the parent token's active child tokens"
								}
							},
							"directOwnerOf(uint256)": {
								"details": "In the event the NFT is owned by an externally owned account, `tokenId` will be `0`.",
								"params": {
									"tokenId": "ID of the token for which the immediate owner is being retrieved"
								},
								"returns": {
									"_0": "address Address of the immediate owner. If the token is owned by an externally owned account, its address  will be returned. If the token is owned by another token, the parent token's collection smart contract address  is returned",
									"_1": "uint256 Token ID of the immediate owner. If the immediate owner is an externally owned account, the value  should be `0`",
									"_2": "bool A boolean value signifying whether the immediate owner is a token (`true`) or not (`false`)"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"nestTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "The destination token MUST NOT be a child token of the token being transferred or one of its downstream  child tokens.",
								"params": {
									"destinationId": "ID of the token to receive the token being transferred",
									"from": "Address of the direct owner of the token to be transferred",
									"to": "Address of the receiving token's collection smart contract",
									"tokenId": "ID of the token being transferred"
								}
							},
							"ownerOf(uint256)": {
								"details": "Root owner is always the externally owned account.If the given token is owned by another token, it will recursively query the parent tokens until reaching the  root owner.",
								"params": {
									"tokenId": "ID of the token for which the root owner is being retrieved"
								},
								"returns": {
									"_0": "address Address of the root owner of the given token"
								}
							},
							"pendingChildOf(uint256,uint256)": {
								"details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"index": "Index of the child token in the parent token's pending child tokens array",
									"parentId": "ID of the parent token for which the pending child token is being retrieved"
								},
								"returns": {
									"_0": "struct A Child struct containting data about the specified child"
								}
							},
							"pendingChildrenOf(uint256)": {
								"details": "Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
								"params": {
									"parentId": "ID of the parent token for which to retrieve the pending child tokens"
								},
								"returns": {
									"_0": "struct[] An array of Child structs containing the parent token's pending child tokens"
								}
							},
							"rejectAllChildren(uint256,uint256)": {
								"details": "Removes the children from the pending array mapping.This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the  rootOwner of the previous parent.",
								"params": {
									"tokenId": "ID of the parent token for which to reject all of the pending tokens"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
								"params": {
									"childAddress": "Address of the child token's collection smart contract.",
									"childId": "ID of the child token in its own collection smart contract.",
									"childIndex": "Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)",
									"data": "Additional data with no specified format, sent in call to `_to`",
									"destinationId": "ID of the token to receive this child token (MUST be 0 if the destination is not a token)",
									"isPending": "A boolean value indicating whether the child token being transferred is in the pending array of the  parent token (`true`) or in the active array (`false`)",
									"to": "Address to which to transfer the token to",
									"tokenId": "ID of the parent token from which the child token is being transferred"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "NestableToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nestable.sol\":15661:72222  contract NestableToken is Context, IERC165, IERC721, IERC6059 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nestable.sol\":15661:72222  contract NestableToken is Context, IERC165, IERC721, IERC6059 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6f19951c\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb3e1c718\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe97ceaa8\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe97ceaa8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xeb043606\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfb25fb7a\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xb3e1c718\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdefa80c3\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x6f19951c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x97961336\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa898e364\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb390c0ab\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x4182e4a3\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x4182e4a3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x44ec9344\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x635490cc\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x064c0a3a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f32f937\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"nestable.sol\":19090:19439  function supportsInterface(... */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":21051:21328  function nestTransferFrom(... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"nestable.sol\":39543:39733  function getApproved(... */\n    tag_5:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":39141:39494  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"nestable.sol\":19847:20037  function transferFrom(... */\n    tag_7:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"nestable.sol\":59253:59541  function childOf(... */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":60915:61104  function childIsInActive(... */\n    tag_9:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":20086:20256  function safeTransferFrom(... */\n    tag_10:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"nestable.sol\":35160:35239  function burn(uint256 tokenId) public virtual {... */\n    tag_11:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"nestable.sol\":58435:58647  function pendingChildrenOf(... */\n    tag_12:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":33476:33815  function ownerOf(... */\n    tag_13:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":46974:47832  function addChild(... */\n    tag_14:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"nestable.sol\":57736:57926  function childrenOf(... */\n    tag_15:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":19488:19677  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":51118:51288  function rejectAllChildren(uint256 tokenId, uint256 maxRejections) public virtual onlyApprovedOrOwner(tokenId) {... */\n    tag_17:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"nestable.sol\":39782:40060  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_18:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      stop\n        /* \"nestable.sol\":60165:60487  function pendingChildOf(... */\n    tag_19:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":35749:35952  function burn(... */\n    tag_20:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":29465:29573  function _safeMint(address to, uint256 tokenId) external virtual {... */\n    tag_21:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"nestable.sol\":20305:20536  function safeTransferFrom(... */\n    tag_22:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"nestable.sol\":53272:53772  function transferChild(... */\n    tag_23:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n    tag_117:\n      stop\n        /* \"nestable.sol\":48594:48849  function acceptChild(... */\n    tag_24:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      stop\n        /* \"nestable.sol\":40109:40284  function isApprovedForAll(... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":31332:31854  function _nestMint(... */\n    tag_26:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n    tag_130:\n      stop\n        /* \"nestable.sol\":34608:34930  function directOwnerOf(... */\n    tag_27:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nestable.sol\":19090:19439  function supportsInterface(... */\n    tag_35:\n        /* \"nestable.sol\":19180:19184  bool */\n      0x00\n        /* \"nestable.sol\":19230:19255  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"nestable.sol\":19215:19255  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nestable.sol\":19215:19226  interfaceId */\n      dup3\n        /* \"nestable.sol\":19215:19255  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nestable.sol\":19215:19311  interfaceId == type(IERC165).interfaceId ||... */\n      dup1\n      tag_140\n      jumpi\n      pop\n        /* \"nestable.sol\":19286:19311  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"nestable.sol\":19271:19311  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nestable.sol\":19271:19282  interfaceId */\n      dup3\n        /* \"nestable.sol\":19271:19311  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nestable.sol\":19215:19311  interfaceId == type(IERC165).interfaceId ||... */\n    tag_140:\n        /* \"nestable.sol\":19215:19375  interfaceId == type(IERC165).interfaceId ||... */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"nestable.sol\":19342:19375  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"nestable.sol\":19327:19375  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nestable.sol\":19327:19338  interfaceId */\n      dup3\n        /* \"nestable.sol\":19327:19375  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nestable.sol\":19215:19375  interfaceId == type(IERC165).interfaceId ||... */\n    tag_141:\n        /* \"nestable.sol\":19215:19432  interfaceId == type(IERC165).interfaceId ||... */\n      dup1\n      tag_142\n      jumpi\n      pop\n        /* \"nestable.sol\":19406:19432  type(IERC6059).interfaceId */\n      0x42b0e56f00000000000000000000000000000000000000000000000000000000\n        /* \"nestable.sol\":19391:19432  interfaceId == type(IERC6059).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nestable.sol\":19391:19402  interfaceId */\n      dup3\n        /* \"nestable.sol\":19391:19432  interfaceId == type(IERC6059).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nestable.sol\":19215:19432  interfaceId == type(IERC165).interfaceId ||... */\n    tag_142:\n        /* \"nestable.sol\":19196:19432  return... */\n      swap1\n      pop\n        /* \"nestable.sol\":19090:19439  function supportsInterface(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":21051:21328  function nestTransferFrom(... */\n    tag_41:\n        /* \"nestable.sol\":21249:21256  tokenId */\n      dup3\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      tag_144\n        /* \"nestable.sol\":18935:18942  tokenId */\n      dup2\n        /* \"nestable.sol\":18908:18934  _onlyApprovedOrDirectOwner */\n      tag_145\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"nestable.sol\":21268:21321  _nestTransfer(from, to, tokenId, destinationId, data) */\n      tag_147\n        /* \"nestable.sol\":21282:21286  from */\n      dup7\n        /* \"nestable.sol\":21288:21290  to */\n      dup7\n        /* \"nestable.sol\":21292:21299  tokenId */\n      dup7\n        /* \"nestable.sol\":21301:21314  destinationId */\n      dup7\n        /* \"nestable.sol\":21316:21320  data */\n      dup7\n        /* \"nestable.sol\":21268:21281  _nestTransfer */\n      tag_148\n        /* \"nestable.sol\":21268:21321  _nestTransfer(from, to, tokenId, destinationId, data) */\n      jump\t// in\n    tag_147:\n        /* \"nestable.sol\":21051:21328  function nestTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":39543:39733  function getApproved(... */\n    tag_45:\n        /* \"nestable.sol\":39624:39631  address */\n      0x00\n        /* \"nestable.sol\":39643:39666  _requireMinted(tokenId) */\n      tag_150\n        /* \"nestable.sol\":39658:39665  tokenId */\n      dup3\n        /* \"nestable.sol\":39643:39657  _requireMinted */\n      tag_151\n        /* \"nestable.sol\":39643:39666  _requireMinted(tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"nestable.sol\":39684:39699  _tokenApprovals */\n      0x01\n        /* \"nestable.sol\":39684:39708  _tokenApprovals[tokenId] */\n      0x00\n        /* \"nestable.sol\":39700:39707  tokenId */\n      dup4\n        /* \"nestable.sol\":39684:39708  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":39684:39726  _tokenApprovals[tokenId][ownerOf(tokenId)] */\n      0x00\n        /* \"nestable.sol\":39709:39725  ownerOf(tokenId) */\n      tag_152\n        /* \"nestable.sol\":39717:39724  tokenId */\n      dup5\n        /* \"nestable.sol\":39709:39716  ownerOf */\n      tag_79\n        /* \"nestable.sol\":39709:39725  ownerOf(tokenId) */\n      jump\t// in\n    tag_152:\n        /* \"nestable.sol\":39684:39726  _tokenApprovals[tokenId][ownerOf(tokenId)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":39677:39726  return _tokenApprovals[tokenId][ownerOf(tokenId)] */\n      swap1\n      pop\n        /* \"nestable.sol\":39543:39733  function getApproved(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":39141:39494  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"nestable.sol\":39212:39225  address owner */\n      0x00\n        /* \"nestable.sol\":39228:39244  ownerOf(tokenId) */\n      tag_154\n        /* \"nestable.sol\":39236:39243  tokenId */\n      dup3\n        /* \"nestable.sol\":39228:39235  ownerOf */\n      tag_79\n        /* \"nestable.sol\":39228:39244  ownerOf(tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"nestable.sol\":39212:39244  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nestable.sol\":39264:39269  owner */\n      dup1\n        /* \"nestable.sol\":39258:39269  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":39258:39260  to */\n      dup4\n        /* \"nestable.sol\":39258:39269  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nestable.sol\":39254:39308  if (to == owner) revert ERC721ApprovalToCurrentOwner() */\n      tag_155\n      jumpi\n        /* \"nestable.sol\":39278:39308  ERC721ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x0591db6d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":39254:39308  if (to == owner) revert ERC721ApprovalToCurrentOwner() */\n    tag_155:\n        /* \"nestable.sol\":39339:39344  owner */\n      dup1\n        /* \"nestable.sol\":39323:39344  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":39323:39335  _msgSender() */\n      tag_156\n        /* \"nestable.sol\":39323:39333  _msgSender */\n      tag_157\n        /* \"nestable.sol\":39323:39335  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"nestable.sol\":39323:39344  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nestable.sol\":39323:39386  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n      dup1\n      iszero\n      tag_158\n      jumpi\n      pop\n        /* \"nestable.sol\":39349:39386  isApprovedForAll(owner, _msgSender()) */\n      tag_159\n        /* \"nestable.sol\":39366:39371  owner */\n      dup2\n        /* \"nestable.sol\":39373:39385  _msgSender() */\n      tag_160\n        /* \"nestable.sol\":39373:39383  _msgSender */\n      tag_157\n        /* \"nestable.sol\":39373:39385  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"nestable.sol\":39349:39365  isApprovedForAll */\n      tag_128\n        /* \"nestable.sol\":39349:39386  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_159:\n        /* \"nestable.sol\":39348:39386  !isApprovedForAll(owner, _msgSender()) */\n      iszero\n        /* \"nestable.sol\":39323:39386  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n    tag_158:\n        /* \"nestable.sol\":39319:39455  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender()))... */\n      iszero\n      tag_161\n      jumpi\n        /* \"nestable.sol\":39407:39455  ERC721ApproveCallerIsNotOwnerNorApprovedForAll() */\n      mload(0x40)\n      0x982462b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":39319:39455  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender()))... */\n    tag_161:\n        /* \"nestable.sol\":39466:39487  _approve(to, tokenId) */\n      tag_162\n        /* \"nestable.sol\":39475:39477  to */\n      dup4\n        /* \"nestable.sol\":39479:39486  tokenId */\n      dup4\n        /* \"nestable.sol\":39466:39474  _approve */\n      tag_163\n        /* \"nestable.sol\":39466:39487  _approve(to, tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"nestable.sol\":39202:39494  {... */\n      pop\n        /* \"nestable.sol\":39141:39494  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":19847:20037  function transferFrom(... */\n    tag_55:\n        /* \"nestable.sol\":19983:19990  tokenId */\n      dup1\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      tag_165\n        /* \"nestable.sol\":18935:18942  tokenId */\n      dup2\n        /* \"nestable.sol\":18908:18934  _onlyApprovedOrDirectOwner */\n      tag_145\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      jump\t// in\n    tag_165:\n        /* \"nestable.sol\":20002:20030  _transfer(from, to, tokenId) */\n      tag_167\n        /* \"nestable.sol\":20012:20016  from */\n      dup5\n        /* \"nestable.sol\":20018:20020  to */\n      dup5\n        /* \"nestable.sol\":20022:20029  tokenId */\n      dup5\n        /* \"nestable.sol\":20002:20011  _transfer */\n      tag_168\n        /* \"nestable.sol\":20002:20030  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_167:\n        /* \"nestable.sol\":19847:20037  function transferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":59253:59541  function childOf(... */\n    tag_59:\n        /* \"nestable.sol\":59354:59366  Child memory */\n      tag_169\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"nestable.sol\":59413:59418  index */\n      dup2\n        /* \"nestable.sol\":59382:59402  childrenOf(parentId) */\n      tag_172\n        /* \"nestable.sol\":59393:59401  parentId */\n      dup5\n        /* \"nestable.sol\":59382:59392  childrenOf */\n      tag_87\n        /* \"nestable.sol\":59382:59402  childrenOf(parentId) */\n      jump\t// in\n    tag_172:\n        /* \"nestable.sol\":59382:59409  childrenOf(parentId).length */\n      mload\n        /* \"nestable.sol\":59382:59418  childrenOf(parentId).length <= index */\n      gt\n        /* \"nestable.sol\":59378:59449  if (childrenOf(parentId).length <= index) revert ChildIndexOutOfRange() */\n      tag_173\n      jumpi\n        /* \"nestable.sol\":59427:59449  ChildIndexOutOfRange() */\n      mload(0x40)\n      0xca755cc000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":59378:59449  if (childrenOf(parentId).length <= index) revert ChildIndexOutOfRange() */\n    tag_173:\n        /* \"nestable.sol\":59459:59477  Child memory child */\n      0x00\n        /* \"nestable.sol\":59480:59495  _activeChildren */\n      0x04\n        /* \"nestable.sol\":59480:59505  _activeChildren[parentId] */\n      0x00\n        /* \"nestable.sol\":59496:59504  parentId */\n      dup6\n        /* \"nestable.sol\":59480:59505  _activeChildren[parentId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":59506:59511  index */\n      dup4\n        /* \"nestable.sol\":59480:59512  _activeChildren[parentId][index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n    tag_174:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nestable.sol\":59459:59512  Child memory child = _activeChildren[parentId][index] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"nestable.sol\":59529:59534  child */\n      dup1\n        /* \"nestable.sol\":59522:59534  return child */\n      swap2\n      pop\n      pop\n        /* \"nestable.sol\":59253:59541  function childOf(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":60915:61104  function childIsInActive(... */\n    tag_64:\n        /* \"nestable.sol\":61030:61034  bool */\n      0x00\n        /* \"nestable.sol\":61096:61097  0 */\n      dup1\n        /* \"nestable.sol\":61053:61069  _childIsInActive */\n      0x06\n        /* \"nestable.sol\":61053:61083  _childIsInActive[childAddress] */\n      0x00\n        /* \"nestable.sol\":61070:61082  childAddress */\n      dup6\n        /* \"nestable.sol\":61053:61083  _childIsInActive[childAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":61053:61092  _childIsInActive[childAddress][childId] */\n      0x00\n        /* \"nestable.sol\":61084:61091  childId */\n      dup5\n        /* \"nestable.sol\":61053:61092  _childIsInActive[childAddress][childId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nestable.sol\":61053:61097  _childIsInActive[childAddress][childId] != 0 */\n      eq\n      iszero\n        /* \"nestable.sol\":61046:61097  return _childIsInActive[childAddress][childId] != 0 */\n      swap1\n      pop\n        /* \"nestable.sol\":60915:61104  function childIsInActive(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":20086:20256  function safeTransferFrom(... */\n    tag_68:\n        /* \"nestable.sol\":20210:20249  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_180\n        /* \"nestable.sol\":20227:20231  from */\n      dup4\n        /* \"nestable.sol\":20233:20235  to */\n      dup4\n        /* \"nestable.sol\":20237:20244  tokenId */\n      dup4\n        /* \"nestable.sol\":20210:20249  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nestable.sol\":20210:20226  safeTransferFrom */\n      tag_116\n        /* \"nestable.sol\":20210:20249  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_180:\n        /* \"nestable.sol\":20086:20256  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":35160:35239  function burn(uint256 tokenId) public virtual {... */\n    tag_71:\n        /* \"nestable.sol\":35216:35232  burn(tokenId, 0) */\n      tag_182\n        /* \"nestable.sol\":35221:35228  tokenId */\n      dup2\n        /* \"nestable.sol\":35230:35231  0 */\n      0x00\n        /* \"nestable.sol\":35216:35220  burn */\n      tag_108\n        /* \"nestable.sol\":35216:35232  burn(tokenId, 0) */\n      jump\t// in\n    tag_182:\n      pop\n        /* \"nestable.sol\":35160:35239  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"nestable.sol\":58435:58647  function pendingChildrenOf(... */\n    tag_74:\n        /* \"nestable.sol\":58523:58537  Child[] memory */\n      0x60\n        /* \"nestable.sol\":58549:58579  Child[] memory pendingChildren */\n      0x00\n        /* \"nestable.sol\":58582:58598  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":58582:58608  _pendingChildren[parentId] */\n      0x00\n        /* \"nestable.sol\":58599:58607  parentId */\n      dup5\n        /* \"nestable.sol\":58582:58608  _pendingChildren[parentId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":58549:58608  Child[] memory pendingChildren = _pendingChildren[parentId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_184:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_185\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_184)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"nestable.sol\":58625:58640  pendingChildren */\n      dup1\n        /* \"nestable.sol\":58618:58640  return pendingChildren */\n      swap2\n      pop\n      pop\n        /* \"nestable.sol\":58435:58647  function pendingChildrenOf(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":33476:33815  function ownerOf(... */\n    tag_79:\n        /* \"nestable.sol\":33581:33588  address */\n      0x00\n        /* \"nestable.sol\":33601:33614  address owner */\n      dup1\n        /* \"nestable.sol\":33616:33636  uint256 ownerTokenId */\n      0x00\n        /* \"nestable.sol\":33638:33648  bool isNft */\n      dup1\n        /* \"nestable.sol\":33652:33696  directOwnerOf(... */\n      tag_188\n        /* \"nestable.sol\":33679:33686  tokenId */\n      dup6\n        /* \"nestable.sol\":33652:33665  directOwnerOf */\n      tag_136\n        /* \"nestable.sol\":33652:33696  directOwnerOf(... */\n      jump\t// in\n    tag_188:\n        /* \"nestable.sol\":33600:33696  (address owner, uint256 ownerTokenId, bool isNft) = directOwnerOf(... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"nestable.sol\":33710:33715  isNft */\n      dup1\n        /* \"nestable.sol\":33706:33787  if (isNft) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"nestable.sol\":33748:33753  owner */\n      dup3\n        /* \"nestable.sol\":33739:33762  IERC6059(owner).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"nestable.sol\":33763:33775  ownerTokenId */\n      dup4\n        /* \"nestable.sol\":33739:33776  IERC6059(owner).ownerOf(ownerTokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"nestable.sol\":33731:33776  owner = IERC6059(owner).ownerOf(ownerTokenId) */\n      swap3\n      pop\n        /* \"nestable.sol\":33706:33787  if (isNft) {... */\n    tag_189:\n        /* \"nestable.sol\":33803:33808  owner */\n      dup3\n        /* \"nestable.sol\":33796:33808  return owner */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":33476:33815  function ownerOf(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":46974:47832  function addChild(... */\n    tag_84:\n        /* \"nestable.sol\":47101:47125  _requireMinted(parentId) */\n      tag_196\n        /* \"nestable.sol\":47116:47124  parentId */\n      dup4\n        /* \"nestable.sol\":47101:47115  _requireMinted */\n      tag_151\n        /* \"nestable.sol\":47101:47125  _requireMinted(parentId) */\n      jump\t// in\n    tag_196:\n        /* \"nestable.sol\":47136:47156  address childAddress */\n      0x00\n        /* \"nestable.sol\":47159:47171  _msgSender() */\n      tag_197\n        /* \"nestable.sol\":47159:47169  _msgSender */\n      tag_157\n        /* \"nestable.sol\":47159:47171  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"nestable.sol\":47136:47171  address childAddress = _msgSender() */\n      swap1\n      pop\n        /* \"nestable.sol\":47186:47211  childAddress.isContract() */\n      tag_198\n        /* \"nestable.sol\":47186:47198  childAddress */\n      dup2\n        /* \"nestable.sol\":47186:47209  childAddress.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n        /* \"nestable.sol\":47186:47211  childAddress.isContract() */\n      jump\t// in\n    tag_198:\n        /* \"nestable.sol\":47181:47235  if (!childAddress.isContract()) revert IsNotContract() */\n      tag_200\n      jumpi\n        /* \"nestable.sol\":47220:47235  IsNotContract() */\n      mload(0x40)\n      0x80275d3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":47181:47235  if (!childAddress.isContract()) revert IsNotContract() */\n    tag_200:\n        /* \"nestable.sol\":47246:47264  Child memory child */\n      0x00\n        /* \"nestable.sol\":47267:47357  Child({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"nestable.sol\":47339:47346  childId */\n      dup6\n        /* \"nestable.sol\":47267:47357  Child({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nestable.sol\":47304:47316  childAddress */\n      dup4\n        /* \"nestable.sol\":47267:47357  Child({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"nestable.sol\":47246:47357  Child memory child = Child({... */\n      swap1\n      pop\n        /* \"nestable.sol\":47368:47416  _beforeAddChild(parentId, childAddress, childId) */\n      tag_201\n        /* \"nestable.sol\":47384:47392  parentId */\n      dup6\n        /* \"nestable.sol\":47394:47406  childAddress */\n      dup4\n        /* \"nestable.sol\":47408:47415  childId */\n      dup7\n        /* \"nestable.sol\":47368:47383  _beforeAddChild */\n      tag_202\n        /* \"nestable.sol\":47368:47416  _beforeAddChild(parentId, childAddress, childId) */\n      jump\t// in\n    tag_201:\n        /* \"nestable.sol\":47427:47441  uint256 length */\n      0x00\n        /* \"nestable.sol\":47444:47471  pendingChildrenOf(parentId) */\n      tag_203\n        /* \"nestable.sol\":47462:47470  parentId */\n      dup7\n        /* \"nestable.sol\":47444:47461  pendingChildrenOf */\n      tag_74\n        /* \"nestable.sol\":47444:47471  pendingChildrenOf(parentId) */\n      jump\t// in\n    tag_203:\n        /* \"nestable.sol\":47444:47478  pendingChildrenOf(parentId).length */\n      mload\n        /* \"nestable.sol\":47427:47478  uint256 length = pendingChildrenOf(parentId).length */\n      swap1\n      pop\n        /* \"nestable.sol\":47502:47505  128 */\n      0x80\n        /* \"nestable.sol\":47493:47499  length */\n      dup2\n        /* \"nestable.sol\":47493:47505  length < 128 */\n      lt\n        /* \"nestable.sol\":47489:47635  if (length < 128) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"nestable.sol\":47521:47537  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":47521:47547  _pendingChildren[parentId] */\n      0x00\n        /* \"nestable.sol\":47538:47546  parentId */\n      dup8\n        /* \"nestable.sol\":47521:47547  _pendingChildren[parentId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":47553:47558  child */\n      dup3\n        /* \"nestable.sol\":47521:47559  _pendingChildren[parentId].push(child) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":47489:47635  if (length < 128) {... */\n      jump(tag_206)\n    tag_204:\n        /* \"nestable.sol\":47597:47624  MaxPendingChildrenReached() */\n      mload(0x40)\n      0x98674b3500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":47489:47635  if (length < 128) {... */\n    tag_206:\n        /* \"nestable.sol\":47759:47766  childId */\n      dup5\n        /* \"nestable.sol\":47745:47757  childAddress */\n      dup4\n        /* \"nestable.sol\":47713:47767  ChildProposed(parentId, length, childAddress, childId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":47727:47735  parentId */\n      dup8\n        /* \"nestable.sol\":47713:47767  ChildProposed(parentId, length, childAddress, childId) */\n      0xe65085e689b77b126ba0bac3b079aa8288f19f4d5445af11c76003f8ab3075dd\n        /* \"nestable.sol\":47737:47743  length */\n      dup5\n        /* \"nestable.sol\":47713:47767  ChildProposed(parentId, length, childAddress, childId) */\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":47778:47825  _afterAddChild(parentId, childAddress, childId) */\n      tag_208\n        /* \"nestable.sol\":47793:47801  parentId */\n      dup7\n        /* \"nestable.sol\":47803:47815  childAddress */\n      dup5\n        /* \"nestable.sol\":47817:47824  childId */\n      dup8\n        /* \"nestable.sol\":47778:47792  _afterAddChild */\n      tag_209\n        /* \"nestable.sol\":47778:47825  _afterAddChild(parentId, childAddress, childId) */\n      jump\t// in\n    tag_208:\n        /* \"nestable.sol\":47091:47832  {... */\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":46974:47832  function addChild(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":57736:57926  function childrenOf(... */\n    tag_87:\n        /* \"nestable.sol\":57817:57831  Child[] memory */\n      0x60\n        /* \"nestable.sol\":57843:57866  Child[] memory children */\n      0x00\n        /* \"nestable.sol\":57869:57884  _activeChildren */\n      0x04\n        /* \"nestable.sol\":57869:57894  _activeChildren[parentId] */\n      0x00\n        /* \"nestable.sol\":57885:57893  parentId */\n      dup5\n        /* \"nestable.sol\":57869:57894  _activeChildren[parentId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":57843:57894  Child[] memory children = _activeChildren[parentId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_211:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_212\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_211)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"nestable.sol\":57911:57919  children */\n      dup1\n        /* \"nestable.sol\":57904:57919  return children */\n      swap2\n      pop\n      pop\n        /* \"nestable.sol\":57736:57926  function childrenOf(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":19488:19677  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_92:\n        /* \"nestable.sol\":19551:19558  uint256 */\n      0x00\n        /* \"nestable.sol\":19591:19592  0 */\n      dup1\n        /* \"nestable.sol\":19574:19593  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":19574:19579  owner */\n      dup3\n        /* \"nestable.sol\":19574:19593  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nestable.sol\":19570:19637  if (owner == address(0)) revert ERC721AddressZeroIsNotaValidOwner() */\n      tag_215\n      jumpi\n        /* \"nestable.sol\":19602:19637  ERC721AddressZeroIsNotaValidOwner() */\n      mload(0x40)\n      0x7772286600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":19570:19637  if (owner == address(0)) revert ERC721AddressZeroIsNotaValidOwner() */\n    tag_215:\n        /* \"nestable.sol\":19654:19663  _balances */\n      0x00\n        /* \"nestable.sol\":19654:19670  _balances[owner] */\n      dup1\n        /* \"nestable.sol\":19664:19669  owner */\n      dup4\n        /* \"nestable.sol\":19654:19670  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nestable.sol\":19647:19670  return _balances[owner] */\n      swap1\n      pop\n        /* \"nestable.sol\":19488:19677  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":51118:51288  function rejectAllChildren(uint256 tokenId, uint256 maxRejections) public virtual onlyApprovedOrOwner(tokenId) {... */\n    tag_97:\n        /* \"nestable.sol\":51220:51227  tokenId */\n      dup2\n        /* \"nestable.sol\":17968:17997  _onlyApprovedOrOwner(tokenId) */\n      tag_217\n        /* \"nestable.sol\":17989:17996  tokenId */\n      dup2\n        /* \"nestable.sol\":17968:17988  _onlyApprovedOrOwner */\n      tag_218\n        /* \"nestable.sol\":17968:17997  _onlyApprovedOrOwner(tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"nestable.sol\":51239:51281  _rejectAllChildren(tokenId, maxRejections) */\n      tag_220\n        /* \"nestable.sol\":51258:51265  tokenId */\n      dup4\n        /* \"nestable.sol\":51267:51280  maxRejections */\n      dup4\n        /* \"nestable.sol\":51239:51257  _rejectAllChildren */\n      tag_221\n        /* \"nestable.sol\":51239:51281  _rejectAllChildren(tokenId, maxRejections) */\n      jump\t// in\n    tag_220:\n        /* \"nestable.sol\":51118:51288  function rejectAllChildren(uint256 tokenId, uint256 maxRejections) public virtual onlyApprovedOrOwner(tokenId) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":39782:40060  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_101:\n        /* \"nestable.sol\":39887:39895  operator */\n      dup2\n        /* \"nestable.sol\":39871:39895  _msgSender() == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":39871:39883  _msgSender() */\n      tag_223\n        /* \"nestable.sol\":39871:39881  _msgSender */\n      tag_157\n        /* \"nestable.sol\":39871:39883  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"nestable.sol\":39871:39895  _msgSender() == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nestable.sol\":39867:39927  if (_msgSender() == operator) revert ERC721ApproveToCaller() */\n      tag_224\n      jumpi\n        /* \"nestable.sol\":39904:39927  ERC721ApproveToCaller() */\n      mload(0x40)\n      0x2dee66e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":39867:39927  if (_msgSender() == operator) revert ERC721ApproveToCaller() */\n    tag_224:\n        /* \"nestable.sol\":39982:39990  approved */\n      dup1\n        /* \"nestable.sol\":39937:39955  _operatorApprovals */\n      0x02\n        /* \"nestable.sol\":39937:39969  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"nestable.sol\":39956:39968  _msgSender() */\n      tag_225\n        /* \"nestable.sol\":39956:39966  _msgSender */\n      tag_157\n        /* \"nestable.sol\":39956:39968  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"nestable.sol\":39937:39969  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":39937:39979  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"nestable.sol\":39970:39978  operator */\n      dup5\n        /* \"nestable.sol\":39937:39979  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":39937:39990  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":40034:40042  operator */\n      dup2\n        /* \"nestable.sol\":40005:40053  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":40020:40032  _msgSender() */\n      tag_226\n        /* \"nestable.sol\":40020:40030  _msgSender */\n      tag_157\n        /* \"nestable.sol\":40020:40032  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"nestable.sol\":40005:40053  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"nestable.sol\":40044:40052  approved */\n      dup4\n        /* \"nestable.sol\":40005:40053  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"nestable.sol\":39782:40060  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":60165:60487  function pendingChildOf(... */\n    tag_104:\n        /* \"nestable.sol\":60273:60285  Child memory */\n      tag_228\n      tag_170\n      jump\t// in\n    tag_228:\n        /* \"nestable.sol\":60339:60344  index */\n      dup2\n        /* \"nestable.sol\":60301:60328  pendingChildrenOf(parentId) */\n      tag_230\n        /* \"nestable.sol\":60319:60327  parentId */\n      dup5\n        /* \"nestable.sol\":60301:60318  pendingChildrenOf */\n      tag_74\n        /* \"nestable.sol\":60301:60328  pendingChildrenOf(parentId) */\n      jump\t// in\n    tag_230:\n        /* \"nestable.sol\":60301:60335  pendingChildrenOf(parentId).length */\n      mload\n        /* \"nestable.sol\":60301:60344  pendingChildrenOf(parentId).length <= index */\n      gt\n        /* \"nestable.sol\":60297:60394  if (pendingChildrenOf(parentId).length <= index)... */\n      tag_231\n      jumpi\n        /* \"nestable.sol\":60365:60394  PendingChildIndexOutOfRange() */\n      mload(0x40)\n      0x9136d24f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":60297:60394  if (pendingChildrenOf(parentId).length <= index)... */\n    tag_231:\n        /* \"nestable.sol\":60404:60422  Child memory child */\n      0x00\n        /* \"nestable.sol\":60425:60441  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":60425:60451  _pendingChildren[parentId] */\n      0x00\n        /* \"nestable.sol\":60442:60450  parentId */\n      dup6\n        /* \"nestable.sol\":60425:60451  _pendingChildren[parentId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":60452:60457  index */\n      dup4\n        /* \"nestable.sol\":60425:60458  _pendingChildren[parentId][index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_232\n      jumpi\n      tag_233\n      tag_176\n      jump\t// in\n    tag_233:\n    tag_232:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nestable.sol\":60404:60458  Child memory child = _pendingChildren[parentId][index] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"nestable.sol\":60475:60480  child */\n      dup1\n        /* \"nestable.sol\":60468:60480  return child */\n      swap2\n      pop\n      pop\n        /* \"nestable.sol\":60165:60487  function pendingChildOf(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":35749:35952  function burn(... */\n    tag_108:\n        /* \"nestable.sol\":35887:35894  uint256 */\n      0x00\n        /* \"nestable.sol\":35869:35876  tokenId */\n      dup3\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      tag_236\n        /* \"nestable.sol\":18935:18942  tokenId */\n      dup2\n        /* \"nestable.sol\":18908:18934  _onlyApprovedOrDirectOwner */\n      tag_145\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      jump\t// in\n    tag_236:\n        /* \"nestable.sol\":35913:35945  _burn(tokenId, maxChildrenBurns) */\n      tag_238\n        /* \"nestable.sol\":35919:35926  tokenId */\n      dup5\n        /* \"nestable.sol\":35928:35944  maxChildrenBurns */\n      dup5\n        /* \"nestable.sol\":35913:35918  _burn */\n      tag_239\n        /* \"nestable.sol\":35913:35945  _burn(tokenId, maxChildrenBurns) */\n      jump\t// in\n    tag_238:\n        /* \"nestable.sol\":35906:35945  return _burn(tokenId, maxChildrenBurns) */\n      swap2\n      pop\n        /* \"nestable.sol\":35749:35952  function burn(... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":29465:29573  function _safeMint(address to, uint256 tokenId) external virtual {... */\n    tag_112:\n        /* \"nestable.sol\":29540:29566  _safeMint(to, tokenId, \"\") */\n      tag_241\n        /* \"nestable.sol\":29550:29552  to */\n      dup3\n        /* \"nestable.sol\":29554:29561  tokenId */\n      dup3\n        /* \"nestable.sol\":29540:29566  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nestable.sol\":29540:29549  _safeMint */\n      tag_242\n        /* \"nestable.sol\":29540:29566  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_241:\n        /* \"nestable.sol\":29465:29573  function _safeMint(address to, uint256 tokenId) external virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":20305:20536  function safeTransferFrom(... */\n    tag_116:\n        /* \"nestable.sol\":20472:20479  tokenId */\n      dup2\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      tag_244\n        /* \"nestable.sol\":18935:18942  tokenId */\n      dup2\n        /* \"nestable.sol\":18908:18934  _onlyApprovedOrDirectOwner */\n      tag_145\n        /* \"nestable.sol\":18908:18943  _onlyApprovedOrDirectOwner(tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"nestable.sol\":20491:20529  _safeTransfer(from, to, tokenId, data) */\n      tag_246\n        /* \"nestable.sol\":20505:20509  from */\n      dup6\n        /* \"nestable.sol\":20511:20513  to */\n      dup6\n        /* \"nestable.sol\":20515:20522  tokenId */\n      dup6\n        /* \"nestable.sol\":20524:20528  data */\n      dup6\n        /* \"nestable.sol\":20491:20504  _safeTransfer */\n      tag_247\n        /* \"nestable.sol\":20491:20529  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_246:\n        /* \"nestable.sol\":20305:20536  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":53272:53772  function transferChild(... */\n    tag_120:\n        /* \"nestable.sol\":53546:53553  tokenId */\n      dup8\n        /* \"nestable.sol\":17968:17997  _onlyApprovedOrOwner(tokenId) */\n      tag_249\n        /* \"nestable.sol\":17989:17996  tokenId */\n      dup2\n        /* \"nestable.sol\":17968:17988  _onlyApprovedOrOwner */\n      tag_218\n        /* \"nestable.sol\":17968:17997  _onlyApprovedOrOwner(tokenId) */\n      jump\t// in\n    tag_249:\n        /* \"nestable.sol\":53565:53765  _transferChild(... */\n      tag_251\n        /* \"nestable.sol\":53593:53600  tokenId */\n      dup10\n        /* \"nestable.sol\":53614:53616  to */\n      dup10\n        /* \"nestable.sol\":53630:53643  destinationId */\n      dup10\n        /* \"nestable.sol\":53657:53667  childIndex */\n      dup10\n        /* \"nestable.sol\":53681:53693  childAddress */\n      dup10\n        /* \"nestable.sol\":53707:53714  childId */\n      dup10\n        /* \"nestable.sol\":53728:53737  isPending */\n      dup10\n        /* \"nestable.sol\":53751:53755  data */\n      dup10\n        /* \"nestable.sol\":53565:53579  _transferChild */\n      tag_252\n        /* \"nestable.sol\":53565:53765  _transferChild(... */\n      jump\t// in\n    tag_251:\n        /* \"nestable.sol\":53272:53772  function transferChild(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":48594:48849  function acceptChild(... */\n    tag_124:\n        /* \"nestable.sol\":48765:48773  parentId */\n      dup4\n        /* \"nestable.sol\":17968:17997  _onlyApprovedOrOwner(tokenId) */\n      tag_254\n        /* \"nestable.sol\":17989:17996  tokenId */\n      dup2\n        /* \"nestable.sol\":17968:17988  _onlyApprovedOrOwner */\n      tag_218\n        /* \"nestable.sol\":17968:17997  _onlyApprovedOrOwner(tokenId) */\n      jump\t// in\n    tag_254:\n        /* \"nestable.sol\":48785:48842  _acceptChild(parentId, childIndex, childAddress, childId) */\n      tag_256\n        /* \"nestable.sol\":48798:48806  parentId */\n      dup6\n        /* \"nestable.sol\":48808:48818  childIndex */\n      dup6\n        /* \"nestable.sol\":48820:48832  childAddress */\n      dup6\n        /* \"nestable.sol\":48834:48841  childId */\n      dup6\n        /* \"nestable.sol\":48785:48797  _acceptChild */\n      tag_257\n        /* \"nestable.sol\":48785:48842  _acceptChild(parentId, childIndex, childAddress, childId) */\n      jump\t// in\n    tag_256:\n        /* \"nestable.sol\":48594:48849  function acceptChild(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":40109:40284  function isApprovedForAll(... */\n    tag_128:\n        /* \"nestable.sol\":40219:40223  bool */\n      0x00\n        /* \"nestable.sol\":40242:40260  _operatorApprovals */\n      0x02\n        /* \"nestable.sol\":40242:40267  _operatorApprovals[owner] */\n      0x00\n        /* \"nestable.sol\":40261:40266  owner */\n      dup5\n        /* \"nestable.sol\":40242:40267  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":40242:40277  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"nestable.sol\":40268:40276  operator */\n      dup4\n        /* \"nestable.sol\":40242:40277  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nestable.sol\":40235:40277  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"nestable.sol\":40109:40284  function isApprovedForAll(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":31332:31854  function _nestMint(... */\n    tag_133:\n        /* \"nestable.sol\":31567:31582  to.isContract() */\n      tag_260\n        /* \"nestable.sol\":31567:31569  to */\n      dup5\n        /* \"nestable.sol\":31567:31580  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n        /* \"nestable.sol\":31567:31582  to.isContract() */\n      jump\t// in\n    tag_260:\n        /* \"nestable.sol\":31562:31606  if (!to.isContract()) revert IsNotContract() */\n      tag_261\n      jumpi\n        /* \"nestable.sol\":31591:31606  IsNotContract() */\n      mload(0x40)\n      0x80275d3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":31562:31606  if (!to.isContract()) revert IsNotContract() */\n    tag_261:\n        /* \"nestable.sol\":31629:31631  to */\n      dup4\n        /* \"nestable.sol\":31621:31650  IERC165(to).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"nestable.sol\":31651:31677  type(IERC6059).interfaceId */\n      0x42b0e56f00000000000000000000000000000000000000000000000000000000\n        /* \"nestable.sol\":31621:31678  IERC165(to).supportsInterface(type(IERC6059).interfaceId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"nestable.sol\":31616:31729  if (!IERC165(to).supportsInterface(type(IERC6059).interfaceId))... */\n      tag_268\n      jumpi\n        /* \"nestable.sol\":31699:31729  MintToNonNestableImplementer() */\n      mload(0x40)\n      0x850cccef00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":31616:31729  if (!IERC165(to).supportsInterface(type(IERC6059).interfaceId))... */\n    tag_268:\n        /* \"nestable.sol\":31740:31778  _innerMint(to, tokenId, destinationId) */\n      tag_269\n        /* \"nestable.sol\":31751:31753  to */\n      dup5\n        /* \"nestable.sol\":31755:31762  tokenId */\n      dup5\n        /* \"nestable.sol\":31764:31777  destinationId */\n      dup5\n        /* \"nestable.sol\":31740:31750  _innerMint */\n      tag_270\n        /* \"nestable.sol\":31740:31778  _innerMint(to, tokenId, destinationId) */\n      jump\t// in\n    tag_269:\n        /* \"nestable.sol\":31788:31847  _sendToNFT(address(0), to, 0, destinationId, tokenId, data) */\n      tag_271\n        /* \"nestable.sol\":31807:31808  0 */\n      0x00\n        /* \"nestable.sol\":31811:31813  to */\n      dup6\n        /* \"nestable.sol\":31815:31816  0 */\n      0x00\n        /* \"nestable.sol\":31818:31831  destinationId */\n      dup6\n        /* \"nestable.sol\":31833:31840  tokenId */\n      dup8\n        /* \"nestable.sol\":31842:31846  data */\n      dup7\n        /* \"nestable.sol\":31788:31798  _sendToNFT */\n      tag_272\n        /* \"nestable.sol\":31788:31847  _sendToNFT(address(0), to, 0, destinationId, tokenId, data) */\n      jump\t// in\n    tag_271:\n        /* \"nestable.sol\":31332:31854  function _nestMint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":34608:34930  function directOwnerOf(... */\n    tag_136:\n        /* \"nestable.sol\":34691:34698  address */\n      0x00\n        /* \"nestable.sol\":34700:34707  uint256 */\n      dup1\n        /* \"nestable.sol\":34709:34713  bool */\n      0x00\n        /* \"nestable.sol\":34725:34749  DirectOwner memory owner */\n      dup1\n        /* \"nestable.sol\":34752:34765  _directOwners */\n      0x03\n        /* \"nestable.sol\":34752:34774  _directOwners[tokenId] */\n      0x00\n        /* \"nestable.sol\":34766:34773  tokenId */\n      dup7\n        /* \"nestable.sol\":34752:34774  _directOwners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":34725:34774  DirectOwner memory owner = _directOwners[tokenId] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"nestable.sol\":34818:34819  0 */\n      0x00\n        /* \"nestable.sol\":34788:34820  owner.ownerAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":34788:34793  owner */\n      dup2\n        /* \"nestable.sol\":34788:34806  owner.ownerAddress */\n      0x20\n      add\n      mload\n        /* \"nestable.sol\":34788:34820  owner.ownerAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nestable.sol\":34784:34851  if (owner.ownerAddress == address(0)) revert ERC721InvalidTokenId() */\n      tag_274\n      jumpi\n        /* \"nestable.sol\":34829:34851  ERC721InvalidTokenId() */\n      mload(0x40)\n      0x89ba7e1000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":34784:34851  if (owner.ownerAddress == address(0)) revert ERC721InvalidTokenId() */\n    tag_274:\n        /* \"nestable.sol\":34869:34874  owner */\n      dup1\n        /* \"nestable.sol\":34869:34887  owner.ownerAddress */\n      0x20\n      add\n      mload\n        /* \"nestable.sol\":34889:34894  owner */\n      dup2\n        /* \"nestable.sol\":34889:34902  owner.tokenId */\n      0x00\n      add\n      mload\n        /* \"nestable.sol\":34921:34922  0 */\n      0x00\n        /* \"nestable.sol\":34904:34909  owner */\n      dup4\n        /* \"nestable.sol\":34904:34917  owner.tokenId */\n      0x00\n      add\n      mload\n        /* \"nestable.sol\":34904:34922  owner.tokenId != 0 */\n      eq\n      iszero\n        /* \"nestable.sol\":34861:34923  return (owner.ownerAddress, owner.tokenId, owner.tokenId != 0) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"nestable.sol\":34608:34930  function directOwnerOf(... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"nestable.sol\":18487:18669  function _onlyApprovedOrDirectOwner(uint256 tokenId) private view {... */\n    tag_145:\n        /* \"nestable.sol\":18568:18615  _isApprovedOrDirectOwner(_msgSender(), tokenId) */\n      tag_276\n        /* \"nestable.sol\":18593:18605  _msgSender() */\n      tag_277\n        /* \"nestable.sol\":18593:18603  _msgSender */\n      tag_157\n        /* \"nestable.sol\":18593:18605  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"nestable.sol\":18607:18614  tokenId */\n      dup3\n        /* \"nestable.sol\":18568:18592  _isApprovedOrDirectOwner */\n      tag_278\n        /* \"nestable.sol\":18568:18615  _isApprovedOrDirectOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"nestable.sol\":18563:18662  if (!_isApprovedOrDirectOwner(_msgSender(), tokenId))... */\n      tag_279\n      jumpi\n        /* \"nestable.sol\":18636:18662  NotApprovedOrDirectOwner() */\n      mload(0x40)\n      0x35d12e3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":18563:18662  if (!_isApprovedOrDirectOwner(_msgSender(), tokenId))... */\n    tag_279:\n        /* \"nestable.sol\":18487:18669  function _onlyApprovedOrDirectOwner(uint256 tokenId) private view {... */\n      pop\n      jump\t// out\n        /* \"nestable.sol\":24634:25957  function _nestTransfer(... */\n    tag_148:\n        /* \"nestable.sol\":24816:24838  address immediateOwner */\n      0x00\n        /* \"nestable.sol\":24840:24856  uint256 parentId */\n      dup1\n        /* \"nestable.sol\":24862:24884  directOwnerOf(tokenId) */\n      tag_281\n        /* \"nestable.sol\":24876:24883  tokenId */\n      dup6\n        /* \"nestable.sol\":24862:24875  directOwnerOf */\n      tag_136\n        /* \"nestable.sol\":24862:24884  directOwnerOf(tokenId) */\n      jump\t// in\n    tag_281:\n        /* \"nestable.sol\":24815:24884  (address immediateOwner, uint256 parentId, ) = directOwnerOf(tokenId) */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"nestable.sol\":24916:24920  from */\n      dup7\n        /* \"nestable.sol\":24898:24920  immediateOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":24898:24912  immediateOwner */\n      dup3\n        /* \"nestable.sol\":24898:24920  immediateOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":24894:24963  if (immediateOwner != from) revert ERC721TransferFromIncorrectOwner() */\n      tag_282\n      jumpi\n        /* \"nestable.sol\":24929:24963  ERC721TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xe146af6f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":24894:24963  if (immediateOwner != from) revert ERC721TransferFromIncorrectOwner() */\n    tag_282:\n        /* \"nestable.sol\":24991:24992  0 */\n      0x00\n        /* \"nestable.sol\":24977:24993  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":24977:24979  to */\n      dup7\n        /* \"nestable.sol\":24977:24993  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nestable.sol\":24973:25034  if (to == address(0)) revert ERC721TransferToTheZeroAddress() */\n      tag_283\n      jumpi\n        /* \"nestable.sol\":25002:25034  ERC721TransferToTheZeroAddress() */\n      mload(0x40)\n      0xe3d91bfc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":24973:25034  if (to == address(0)) revert ERC721TransferToTheZeroAddress() */\n    tag_283:\n        /* \"nestable.sol\":25062:25066  this */\n      address\n        /* \"nestable.sol\":25048:25067  to == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":25048:25050  to */\n      dup7\n        /* \"nestable.sol\":25048:25067  to == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":25048:25095  to == address(this) && tokenId == destinationId */\n      dup1\n      iszero\n      tag_284\n      jumpi\n      pop\n        /* \"nestable.sol\":25082:25095  destinationId */\n      dup4\n        /* \"nestable.sol\":25071:25078  tokenId */\n      dup6\n        /* \"nestable.sol\":25071:25095  tokenId == destinationId */\n      eq\n        /* \"nestable.sol\":25048:25095  to == address(this) && tokenId == destinationId */\n    tag_284:\n        /* \"nestable.sol\":25044:25140  if (to == address(this) && tokenId == destinationId)... */\n      iszero\n      tag_285\n      jumpi\n        /* \"nestable.sol\":25116:25140  NestableTransferToSelf() */\n      mload(0x40)\n      0x5eeb0df000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":25044:25140  if (to == address(this) && tokenId == destinationId)... */\n    tag_285:\n        /* \"nestable.sol\":25271:25286  to.isContract() */\n      tag_286\n        /* \"nestable.sol\":25271:25273  to */\n      dup7\n        /* \"nestable.sol\":25271:25284  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n        /* \"nestable.sol\":25271:25286  to.isContract() */\n      jump\t// in\n    tag_286:\n        /* \"nestable.sol\":25266:25310  if (!to.isContract()) revert IsNotContract() */\n      tag_287\n      jumpi\n        /* \"nestable.sol\":25295:25310  IsNotContract() */\n      mload(0x40)\n      0x80275d3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":25266:25310  if (!to.isContract()) revert IsNotContract() */\n    tag_287:\n        /* \"nestable.sol\":25333:25335  to */\n      dup6\n        /* \"nestable.sol\":25325:25354  IERC165(to).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"nestable.sol\":25355:25381  type(IERC6059).interfaceId */\n      0x42b0e56f00000000000000000000000000000000000000000000000000000000\n        /* \"nestable.sol\":25325:25382  IERC165(to).supportsInterface(type(IERC6059).interfaceId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_288:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_291\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_291:\n        /* \"nestable.sol\":25320:25445  if (!IERC165(to).supportsInterface(type(IERC6059).interfaceId))... */\n      tag_292\n      jumpi\n        /* \"nestable.sol\":25403:25445  NestableTransferToNonNestableImplementer() */\n      mload(0x40)\n      0xf413cf9900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":25320:25445  if (!IERC165(to).supportsInterface(type(IERC6059).interfaceId))... */\n    tag_292:\n        /* \"nestable.sol\":25455:25507  _checkForInheritanceLoop(tokenId, to, destinationId) */\n      tag_293\n        /* \"nestable.sol\":25480:25487  tokenId */\n      dup6\n        /* \"nestable.sol\":25489:25491  to */\n      dup8\n        /* \"nestable.sol\":25493:25506  destinationId */\n      dup7\n        /* \"nestable.sol\":25455:25479  _checkForInheritanceLoop */\n      tag_294\n        /* \"nestable.sol\":25455:25507  _checkForInheritanceLoop(tokenId, to, destinationId) */\n      jump\t// in\n    tag_293:\n        /* \"nestable.sol\":25518:25557  _beforeTokenTransfer(from, to, tokenId) */\n      tag_295\n        /* \"nestable.sol\":25539:25543  from */\n      dup8\n        /* \"nestable.sol\":25545:25547  to */\n      dup8\n        /* \"nestable.sol\":25549:25556  tokenId */\n      dup8\n        /* \"nestable.sol\":25518:25538  _beforeTokenTransfer */\n      tag_296\n        /* \"nestable.sol\":25518:25557  _beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_295:\n        /* \"nestable.sol\":25567:25717  _beforeNestedTokenTransfer(... */\n      tag_297\n        /* \"nestable.sol\":25607:25621  immediateOwner */\n      dup3\n        /* \"nestable.sol\":25635:25637  to */\n      dup8\n        /* \"nestable.sol\":25651:25659  parentId */\n      dup4\n        /* \"nestable.sol\":25673:25686  destinationId */\n      dup8\n        /* \"nestable.sol\":25700:25707  tokenId */\n      dup10\n        /* \"nestable.sol\":25567:25593  _beforeNestedTokenTransfer */\n      tag_298\n        /* \"nestable.sol\":25567:25717  _beforeNestedTokenTransfer(... */\n      jump\t// in\n    tag_297:\n        /* \"nestable.sol\":25746:25747  1 */\n      0x01\n        /* \"nestable.sol\":25727:25736  _balances */\n      0x00\n        /* \"nestable.sol\":25727:25742  _balances[from] */\n      dup1\n        /* \"nestable.sol\":25737:25741  from */\n      dup10\n        /* \"nestable.sol\":25727:25742  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":25727:25747  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":25757:25814  _updateOwnerAndClearApprovals(tokenId, destinationId, to) */\n      tag_301\n        /* \"nestable.sol\":25787:25794  tokenId */\n      dup6\n        /* \"nestable.sol\":25796:25809  destinationId */\n      dup6\n        /* \"nestable.sol\":25811:25813  to */\n      dup9\n        /* \"nestable.sol\":25757:25786  _updateOwnerAndClearApprovals */\n      tag_302\n        /* \"nestable.sol\":25757:25814  _updateOwnerAndClearApprovals(tokenId, destinationId, to) */\n      jump\t// in\n    tag_301:\n        /* \"nestable.sol\":25841:25842  1 */\n      0x01\n        /* \"nestable.sol\":25824:25833  _balances */\n      0x00\n        /* \"nestable.sol\":25824:25837  _balances[to] */\n      dup1\n        /* \"nestable.sol\":25834:25836  to */\n      dup9\n        /* \"nestable.sol\":25824:25837  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":25824:25842  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":25880:25950  _sendToNFT(immediateOwner, to, parentId, destinationId, tokenId, data) */\n      tag_305\n        /* \"nestable.sol\":25891:25905  immediateOwner */\n      dup3\n        /* \"nestable.sol\":25907:25909  to */\n      dup8\n        /* \"nestable.sol\":25911:25919  parentId */\n      dup4\n        /* \"nestable.sol\":25921:25934  destinationId */\n      dup8\n        /* \"nestable.sol\":25936:25943  tokenId */\n      dup10\n        /* \"nestable.sol\":25945:25949  data */\n      dup9\n        /* \"nestable.sol\":25880:25890  _sendToNFT */\n      tag_272\n        /* \"nestable.sol\":25880:25950  _sendToNFT(immediateOwner, to, parentId, destinationId, tokenId, data) */\n      jump\t// in\n    tag_305:\n        /* \"nestable.sol\":24805:25957  {... */\n      pop\n      pop\n        /* \"nestable.sol\":24634:25957  function _nestTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":44029:44161  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_151:\n        /* \"nestable.sol\":44107:44123  _exists(tokenId) */\n      tag_307\n        /* \"nestable.sol\":44115:44122  tokenId */\n      dup2\n        /* \"nestable.sol\":44107:44114  _exists */\n      tag_308\n        /* \"nestable.sol\":44107:44123  _exists(tokenId) */\n      jump\t// in\n    tag_307:\n        /* \"nestable.sol\":44102:44154  if (!_exists(tokenId)) revert ERC721InvalidTokenId() */\n      tag_309\n      jumpi\n        /* \"nestable.sol\":44132:44154  ERC721InvalidTokenId() */\n      mload(0x40)\n      0x89ba7e1000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":44102:44154  if (!_exists(tokenId)) revert ERC721InvalidTokenId() */\n    tag_309:\n        /* \"nestable.sol\":44029:44161  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"nestable.sol\":40553:40755  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_163:\n        /* \"nestable.sol\":40627:40640  address owner */\n      0x00\n        /* \"nestable.sol\":40643:40659  ownerOf(tokenId) */\n      tag_312\n        /* \"nestable.sol\":40651:40658  tokenId */\n      dup3\n        /* \"nestable.sol\":40643:40650  ownerOf */\n      tag_79\n        /* \"nestable.sol\":40643:40659  ownerOf(tokenId) */\n      jump\t// in\n    tag_312:\n        /* \"nestable.sol\":40627:40659  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nestable.sol\":40703:40705  to */\n      dup3\n        /* \"nestable.sol\":40669:40684  _tokenApprovals */\n      0x01\n        /* \"nestable.sol\":40669:40693  _tokenApprovals[tokenId] */\n      0x00\n        /* \"nestable.sol\":40685:40692  tokenId */\n      dup5\n        /* \"nestable.sol\":40669:40693  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":40669:40700  _tokenApprovals[tokenId][owner] */\n      0x00\n        /* \"nestable.sol\":40694:40699  owner */\n      dup4\n        /* \"nestable.sol\":40669:40700  _tokenApprovals[tokenId][owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":40669:40705  _tokenApprovals[tokenId][owner] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":40740:40747  tokenId */\n      dup2\n        /* \"nestable.sol\":40736:40738  to */\n      dup4\n        /* \"nestable.sol\":40720:40748  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":40729:40734  owner */\n      dup3\n        /* \"nestable.sol\":40720:40748  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":40617:40755  {... */\n      pop\n        /* \"nestable.sol\":40553:40755  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":23186:24011  function _transfer(... */\n    tag_168:\n        /* \"nestable.sol\":23306:23328  address immediateOwner */\n      0x00\n        /* \"nestable.sol\":23330:23346  uint256 parentId */\n      dup1\n        /* \"nestable.sol\":23352:23374  directOwnerOf(tokenId) */\n      tag_314\n        /* \"nestable.sol\":23366:23373  tokenId */\n      dup4\n        /* \"nestable.sol\":23352:23365  directOwnerOf */\n      tag_136\n        /* \"nestable.sol\":23352:23374  directOwnerOf(tokenId) */\n      jump\t// in\n    tag_314:\n        /* \"nestable.sol\":23305:23374  (address immediateOwner, uint256 parentId, ) = directOwnerOf(tokenId) */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"nestable.sol\":23406:23410  from */\n      dup5\n        /* \"nestable.sol\":23388:23410  immediateOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":23388:23402  immediateOwner */\n      dup3\n        /* \"nestable.sol\":23388:23410  immediateOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":23384:23453  if (immediateOwner != from) revert ERC721TransferFromIncorrectOwner() */\n      tag_315\n      jumpi\n        /* \"nestable.sol\":23419:23453  ERC721TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xe146af6f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":23384:23453  if (immediateOwner != from) revert ERC721TransferFromIncorrectOwner() */\n    tag_315:\n        /* \"nestable.sol\":23481:23482  0 */\n      0x00\n        /* \"nestable.sol\":23467:23483  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":23467:23469  to */\n      dup5\n        /* \"nestable.sol\":23467:23483  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nestable.sol\":23463:23524  if (to == address(0)) revert ERC721TransferToTheZeroAddress() */\n      tag_316\n      jumpi\n        /* \"nestable.sol\":23492:23524  ERC721TransferToTheZeroAddress() */\n      mload(0x40)\n      0xe3d91bfc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":23463:23524  if (to == address(0)) revert ERC721TransferToTheZeroAddress() */\n    tag_316:\n        /* \"nestable.sol\":23535:23574  _beforeTokenTransfer(from, to, tokenId) */\n      tag_317\n        /* \"nestable.sol\":23556:23560  from */\n      dup6\n        /* \"nestable.sol\":23562:23564  to */\n      dup6\n        /* \"nestable.sol\":23566:23573  tokenId */\n      dup6\n        /* \"nestable.sol\":23535:23555  _beforeTokenTransfer */\n      tag_296\n        /* \"nestable.sol\":23535:23574  _beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_317:\n        /* \"nestable.sol\":23584:23652  _beforeNestedTokenTransfer(immediateOwner, to, parentId, 0, tokenId) */\n      tag_318\n        /* \"nestable.sol\":23611:23625  immediateOwner */\n      dup3\n        /* \"nestable.sol\":23627:23629  to */\n      dup6\n        /* \"nestable.sol\":23631:23639  parentId */\n      dup4\n        /* \"nestable.sol\":23641:23642  0 */\n      0x00\n        /* \"nestable.sol\":23644:23651  tokenId */\n      dup8\n        /* \"nestable.sol\":23584:23610  _beforeNestedTokenTransfer */\n      tag_298\n        /* \"nestable.sol\":23584:23652  _beforeNestedTokenTransfer(immediateOwner, to, parentId, 0, tokenId) */\n      jump\t// in\n    tag_318:\n        /* \"nestable.sol\":23682:23683  1 */\n      0x01\n        /* \"nestable.sol\":23663:23672  _balances */\n      0x00\n        /* \"nestable.sol\":23663:23678  _balances[from] */\n      dup1\n        /* \"nestable.sol\":23673:23677  from */\n      dup8\n        /* \"nestable.sol\":23663:23678  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":23663:23683  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_319\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_319:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":23693:23738  _updateOwnerAndClearApprovals(tokenId, 0, to) */\n      tag_320\n        /* \"nestable.sol\":23723:23730  tokenId */\n      dup4\n        /* \"nestable.sol\":23732:23733  0 */\n      0x00\n        /* \"nestable.sol\":23735:23737  to */\n      dup7\n        /* \"nestable.sol\":23693:23722  _updateOwnerAndClearApprovals */\n      tag_302\n        /* \"nestable.sol\":23693:23738  _updateOwnerAndClearApprovals(tokenId, 0, to) */\n      jump\t// in\n    tag_320:\n        /* \"nestable.sol\":23765:23766  1 */\n      0x01\n        /* \"nestable.sol\":23748:23757  _balances */\n      0x00\n        /* \"nestable.sol\":23748:23761  _balances[to] */\n      dup1\n        /* \"nestable.sol\":23758:23760  to */\n      dup7\n        /* \"nestable.sol\":23748:23761  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":23748:23766  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_321\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_321:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":23801:23808  tokenId */\n      dup3\n        /* \"nestable.sol\":23797:23799  to */\n      dup5\n        /* \"nestable.sol\":23782:23809  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":23791:23795  from */\n      dup7\n        /* \"nestable.sol\":23782:23809  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":23870:23877  tokenId */\n      dup3\n        /* \"nestable.sol\":23853:23855  to */\n      dup5\n        /* \"nestable.sol\":23824:23878  NestTransfer(immediateOwner, to, parentId, 0, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":23837:23851  immediateOwner */\n      dup4\n        /* \"nestable.sol\":23824:23878  NestTransfer(immediateOwner, to, parentId, 0, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d\n        /* \"nestable.sol\":23857:23865  parentId */\n      dup5\n        /* \"nestable.sol\":23867:23868  0 */\n      0x00\n        /* \"nestable.sol\":23824:23878  NestTransfer(immediateOwner, to, parentId, 0, tokenId) */\n      mload(0x40)\n      tag_322\n      swap3\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":23889:23927  _afterTokenTransfer(from, to, tokenId) */\n      tag_324\n        /* \"nestable.sol\":23909:23913  from */\n      dup6\n        /* \"nestable.sol\":23915:23917  to */\n      dup6\n        /* \"nestable.sol\":23919:23926  tokenId */\n      dup6\n        /* \"nestable.sol\":23889:23908  _afterTokenTransfer */\n      tag_325\n        /* \"nestable.sol\":23889:23927  _afterTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_324:\n        /* \"nestable.sol\":23937:24004  _afterNestedTokenTransfer(immediateOwner, to, parentId, 0, tokenId) */\n      tag_326\n        /* \"nestable.sol\":23963:23977  immediateOwner */\n      dup3\n        /* \"nestable.sol\":23979:23981  to */\n      dup6\n        /* \"nestable.sol\":23983:23991  parentId */\n      dup4\n        /* \"nestable.sol\":23993:23994  0 */\n      0x00\n        /* \"nestable.sol\":23996:24003  tokenId */\n      dup8\n        /* \"nestable.sol\":23937:23962  _afterNestedTokenTransfer */\n      tag_327\n        /* \"nestable.sol\":23937:24004  _afterNestedTokenTransfer(immediateOwner, to, parentId, 0, tokenId) */\n      jump\t// in\n    tag_326:\n        /* \"nestable.sol\":23295:24011  {... */\n      pop\n      pop\n        /* \"nestable.sol\":23186:24011  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":64950:65080  function _beforeAddChild(... */\n    tag_202:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":65869:65998  function _afterAddChild(... */\n    tag_209:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":17555:17725  function _onlyApprovedOrOwner(uint256 tokenId) private view {... */\n    tag_218:\n        /* \"nestable.sol\":17630:17671  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_332\n        /* \"nestable.sol\":17649:17661  _msgSender() */\n      tag_333\n        /* \"nestable.sol\":17649:17659  _msgSender */\n      tag_157\n        /* \"nestable.sol\":17649:17661  _msgSender() */\n      jump\t// in\n    tag_333:\n        /* \"nestable.sol\":17663:17670  tokenId */\n      dup3\n        /* \"nestable.sol\":17630:17648  _isApprovedOrOwner */\n      tag_334\n        /* \"nestable.sol\":17630:17671  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_332:\n        /* \"nestable.sol\":17625:17718  if (!_isApprovedOrOwner(_msgSender(), tokenId))... */\n      tag_335\n      jumpi\n        /* \"nestable.sol\":17692:17718  ERC721NotApprovedOrOwner() */\n      mload(0x40)\n      0x2728a9d000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":17625:17718  if (!_isApprovedOrOwner(_msgSender(), tokenId))... */\n    tag_335:\n        /* \"nestable.sol\":17555:17725  function _onlyApprovedOrOwner(uint256 tokenId) private view {... */\n      pop\n      jump\t// out\n        /* \"nestable.sol\":51934:52328  function _rejectAllChildren(uint256 tokenId, uint256 maxRejections)... */\n    tag_221:\n        /* \"nestable.sol\":52088:52101  maxRejections */\n      dup1\n        /* \"nestable.sol\":52053:52069  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":52053:52078  _pendingChildren[tokenId] */\n      0x00\n        /* \"nestable.sol\":52070:52077  tokenId */\n      dup5\n        /* \"nestable.sol\":52053:52078  _pendingChildren[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":52053:52085  _pendingChildren[tokenId].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nestable.sol\":52053:52101  _pendingChildren[tokenId].length > maxRejections */\n      gt\n        /* \"nestable.sol\":52049:52150  if (_pendingChildren[tokenId].length > maxRejections)... */\n      iszero\n      tag_337\n      jumpi\n        /* \"nestable.sol\":52122:52150  UnexpectedNumberOfChildren() */\n      mload(0x40)\n      0x8ac3cb1400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":52049:52150  if (_pendingChildren[tokenId].length > maxRejections)... */\n    tag_337:\n        /* \"nestable.sol\":52161:52194  _beforeRejectAllChildren(tokenId) */\n      tag_338\n        /* \"nestable.sol\":52186:52193  tokenId */\n      dup3\n        /* \"nestable.sol\":52161:52185  _beforeRejectAllChildren */\n      tag_339\n        /* \"nestable.sol\":52161:52194  _beforeRejectAllChildren(tokenId) */\n      jump\t// in\n    tag_338:\n        /* \"nestable.sol\":52211:52227  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":52211:52236  _pendingChildren[tokenId] */\n      0x00\n        /* \"nestable.sol\":52228:52235  tokenId */\n      dup4\n        /* \"nestable.sol\":52211:52236  _pendingChildren[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":52204:52236  delete _pendingChildren[tokenId] */\n      tag_340\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"nestable.sol\":52271:52278  tokenId */\n      dup2\n        /* \"nestable.sol\":52251:52279  AllChildrenRejected(tokenId) */\n      0x8ac4a0d65950c3e40448afb2260e2e0ec36ea15644d9b39e37e85472e5f94451\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"nestable.sol\":52289:52321  _afterRejectAllChildren(tokenId) */\n      tag_342\n        /* \"nestable.sol\":52313:52320  tokenId */\n      dup3\n        /* \"nestable.sol\":52289:52312  _afterRejectAllChildren */\n      tag_343\n        /* \"nestable.sol\":52289:52321  _afterRejectAllChildren(tokenId) */\n      jump\t// in\n    tag_342:\n        /* \"nestable.sol\":51934:52328  function _rejectAllChildren(uint256 tokenId, uint256 maxRejections)... */\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":36504:38971  function _burn(... */\n    tag_239:\n        /* \"nestable.sol\":36610:36617  uint256 */\n      0x00\n        /* \"nestable.sol\":36630:36652  address immediateOwner */\n      dup1\n        /* \"nestable.sol\":36654:36670  uint256 parentId */\n      0x00\n        /* \"nestable.sol\":36676:36698  directOwnerOf(tokenId) */\n      tag_345\n        /* \"nestable.sol\":36690:36697  tokenId */\n      dup6\n        /* \"nestable.sol\":36676:36689  directOwnerOf */\n      tag_136\n        /* \"nestable.sol\":36676:36698  directOwnerOf(tokenId) */\n      jump\t// in\n    tag_345:\n        /* \"nestable.sol\":36629:36698  (address immediateOwner, uint256 parentId, ) = directOwnerOf(tokenId) */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"nestable.sol\":36708:36721  address owner */\n      0x00\n        /* \"nestable.sol\":36724:36740  ownerOf(tokenId) */\n      tag_346\n        /* \"nestable.sol\":36732:36739  tokenId */\n      dup7\n        /* \"nestable.sol\":36724:36731  ownerOf */\n      tag_79\n        /* \"nestable.sol\":36724:36740  ownerOf(tokenId) */\n      jump\t// in\n    tag_346:\n        /* \"nestable.sol\":36708:36740  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nestable.sol\":36779:36780  1 */\n      0x01\n        /* \"nestable.sol\":36750:36759  _balances */\n      0x00\n        /* \"nestable.sol\":36750:36775  _balances[immediateOwner] */\n      dup1\n        /* \"nestable.sol\":36760:36774  immediateOwner */\n      dup6\n        /* \"nestable.sol\":36750:36775  _balances[immediateOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":36750:36780  _balances[immediateOwner] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_347\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_347:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":36791:36839  _beforeTokenTransfer(owner, address(0), tokenId) */\n      tag_348\n        /* \"nestable.sol\":36812:36817  owner */\n      dup2\n        /* \"nestable.sol\":36827:36828  0 */\n      0x00\n        /* \"nestable.sol\":36831:36838  tokenId */\n      dup9\n        /* \"nestable.sol\":36791:36811  _beforeTokenTransfer */\n      tag_296\n        /* \"nestable.sol\":36791:36839  _beforeTokenTransfer(owner, address(0), tokenId) */\n      jump\t// in\n    tag_348:\n        /* \"nestable.sol\":36849:36995  _beforeNestedTokenTransfer(... */\n      tag_349\n        /* \"nestable.sol\":36889:36903  immediateOwner */\n      dup4\n        /* \"nestable.sol\":36925:36926  0 */\n      0x00\n        /* \"nestable.sol\":36941:36949  parentId */\n      dup5\n        /* \"nestable.sol\":36963:36964  0 */\n      0x00\n        /* \"nestable.sol\":36978:36985  tokenId */\n      dup11\n        /* \"nestable.sol\":36849:36875  _beforeNestedTokenTransfer */\n      tag_298\n        /* \"nestable.sol\":36849:36995  _beforeNestedTokenTransfer(... */\n      jump\t// in\n    tag_349:\n        /* \"nestable.sol\":37006:37035  _approve(address(0), tokenId) */\n      tag_350\n        /* \"nestable.sol\":37023:37024  0 */\n      0x00\n        /* \"nestable.sol\":37027:37034  tokenId */\n      dup8\n        /* \"nestable.sol\":37006:37014  _approve */\n      tag_163\n        /* \"nestable.sol\":37006:37035  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_350:\n        /* \"nestable.sol\":37045:37069  _cleanApprovals(tokenId) */\n      tag_351\n        /* \"nestable.sol\":37061:37068  tokenId */\n      dup7\n        /* \"nestable.sol\":37045:37060  _cleanApprovals */\n      tag_352\n        /* \"nestable.sol\":37045:37069  _cleanApprovals(tokenId) */\n      jump\t// in\n    tag_351:\n        /* \"nestable.sol\":37080:37103  Child[] memory children */\n      0x00\n        /* \"nestable.sol\":37106:37125  childrenOf(tokenId) */\n      tag_353\n        /* \"nestable.sol\":37117:37124  tokenId */\n      dup8\n        /* \"nestable.sol\":37106:37116  childrenOf */\n      tag_87\n        /* \"nestable.sol\":37106:37125  childrenOf(tokenId) */\n      jump\t// in\n    tag_353:\n        /* \"nestable.sol\":37080:37125  Child[] memory children = childrenOf(tokenId) */\n      swap1\n      pop\n        /* \"nestable.sol\":37143:37158  _activeChildren */\n      0x04\n        /* \"nestable.sol\":37143:37167  _activeChildren[tokenId] */\n      0x00\n        /* \"nestable.sol\":37159:37166  tokenId */\n      dup9\n        /* \"nestable.sol\":37143:37167  _activeChildren[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":37136:37167  delete _activeChildren[tokenId] */\n      tag_354\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_354:\n        /* \"nestable.sol\":37184:37200  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":37184:37209  _pendingChildren[tokenId] */\n      0x00\n        /* \"nestable.sol\":37201:37208  tokenId */\n      dup9\n        /* \"nestable.sol\":37184:37209  _pendingChildren[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":37177:37209  delete _pendingChildren[tokenId] */\n      tag_355\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_355:\n        /* \"nestable.sol\":37226:37241  _tokenApprovals */\n      0x01\n        /* \"nestable.sol\":37226:37250  _tokenApprovals[tokenId] */\n      0x00\n        /* \"nestable.sol\":37242:37249  tokenId */\n      dup9\n        /* \"nestable.sol\":37226:37250  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":37226:37257  _tokenApprovals[tokenId][owner] */\n      0x00\n        /* \"nestable.sol\":37251:37256  owner */\n      dup4\n        /* \"nestable.sol\":37226:37257  _tokenApprovals[tokenId][owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":37219:37257  delete _tokenApprovals[tokenId][owner] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"nestable.sol\":37268:37297  uint256 pendingRecursiveBurns */\n      0x00\n        /* \"nestable.sol\":37307:37330  uint256 totalChildBurns */\n      dup1\n        /* \"nestable.sol\":37341:37355  uint256 length */\n      0x00\n        /* \"nestable.sol\":37358:37366  children */\n      dup4\n        /* \"nestable.sol\":37358:37373  children.length */\n      mload\n        /* \"nestable.sol\":37341:37373  uint256 length = children.length */\n      swap1\n      pop\n        /* \"nestable.sol\":37402:37411  uint256 i */\n      0x00\n        /* \"nestable.sol\":37397:38462  for (uint256 i; i < length; ) {... */\n    tag_356:\n        /* \"nestable.sol\":37417:37423  length */\n      dup2\n        /* \"nestable.sol\":37413:37414  i */\n      dup2\n        /* \"nestable.sol\":37413:37423  i < length */\n      lt\n        /* \"nestable.sol\":37397:38462  for (uint256 i; i < length; ) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"nestable.sol\":37464:37480  maxChildrenBurns */\n      dup10\n        /* \"nestable.sol\":37445:37460  totalChildBurns */\n      dup4\n        /* \"nestable.sol\":37445:37480  totalChildBurns >= maxChildrenBurns */\n      lt\n        /* \"nestable.sol\":37441:37637  if (totalChildBurns >= maxChildrenBurns)... */\n      tag_359\n      jumpi\n        /* \"nestable.sol\":37551:37559  children */\n      dup5\n        /* \"nestable.sol\":37560:37561  i */\n      dup2\n        /* \"nestable.sol\":37551:37562  children[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_360\n      jumpi\n      tag_361\n      tag_176\n      jump\t// in\n    tag_361:\n    tag_360:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"nestable.sol\":37551:37578  children[i].contractAddress */\n      0x20\n      add\n      mload\n        /* \"nestable.sol\":37600:37608  children */\n      dup6\n        /* \"nestable.sol\":37609:37610  i */\n      dup3\n        /* \"nestable.sol\":37600:37611  children[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_362\n      jumpi\n      tag_363\n      tag_176\n      jump\t// in\n    tag_363:\n    tag_362:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"nestable.sol\":37600:37619  children[i].tokenId */\n      0x00\n      add\n      mload\n        /* \"nestable.sol\":37505:37637  MaxRecursiveBurnsReached(... */\n      mload(0x40)\n      0x4cb93ad900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap3\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":37441:37637  if (totalChildBurns >= maxChildrenBurns)... */\n    tag_359:\n        /* \"nestable.sol\":37658:37674  _childIsInActive */\n      0x06\n        /* \"nestable.sol\":37658:37703  _childIsInActive[children[i].contractAddress] */\n      0x00\n        /* \"nestable.sol\":37675:37683  children */\n      dup7\n        /* \"nestable.sol\":37684:37685  i */\n      dup4\n        /* \"nestable.sol\":37675:37686  children[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_366\n      jumpi\n      tag_367\n      tag_176\n      jump\t// in\n    tag_367:\n    tag_366:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"nestable.sol\":37675:37702  children[i].contractAddress */\n      0x20\n      add\n      mload\n        /* \"nestable.sol\":37658:37703  _childIsInActive[children[i].contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":37658:37754  _childIsInActive[children[i].contractAddress][... */\n      0x00\n        /* \"nestable.sol\":37721:37729  children */\n      dup7\n        /* \"nestable.sol\":37730:37731  i */\n      dup4\n        /* \"nestable.sol\":37721:37732  children[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_368\n      jumpi\n      tag_369\n      tag_176\n      jump\t// in\n    tag_369:\n    tag_368:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"nestable.sol\":37721:37740  children[i].tokenId */\n      0x00\n      add\n      mload\n        /* \"nestable.sol\":37658:37754  _childIsInActive[children[i].contractAddress][... */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":37651:37754  delete _childIsInActive[children[i].contractAddress][... */\n      0x00\n      swap1\n      sstore\n        /* \"nestable.sol\":37921:37936  totalChildBurns */\n      dup3\n        /* \"nestable.sol\":37902:37918  maxChildrenBurns */\n      dup11\n        /* \"nestable.sol\":37902:37936  maxChildrenBurns - totalChildBurns */\n      sub\n        /* \"nestable.sol\":37878:37936  pendingRecursiveBurns = maxChildrenBurns - totalChildBurns */\n      swap4\n      pop\n        /* \"nestable.sol\":38391:38392  1 */\n      0x01\n        /* \"nestable.sol\":38233:38241  children */\n      dup6\n        /* \"nestable.sol\":38242:38243  i */\n      dup3\n        /* \"nestable.sol\":38233:38244  children[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_370\n      jumpi\n      tag_371\n      tag_176\n      jump\t// in\n    tag_371:\n    tag_370:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"nestable.sol\":38233:38260  children[i].contractAddress */\n      0x20\n      add\n      mload\n        /* \"nestable.sol\":38224:38266  IERC6059(children[i].contractAddress).burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb390c0ab\n        /* \"nestable.sol\":38288:38296  children */\n      dup8\n        /* \"nestable.sol\":38297:38298  i */\n      dup5\n        /* \"nestable.sol\":38288:38299  children[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_372\n      jumpi\n      tag_373\n      tag_176\n      jump\t// in\n    tag_373:\n    tag_372:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"nestable.sol\":38288:38307  children[i].tokenId */\n      0x00\n      add\n      mload\n        /* \"nestable.sol\":38353:38354  1 */\n      0x01\n        /* \"nestable.sol\":38329:38350  pendingRecursiveBurns */\n      dup9\n        /* \"nestable.sol\":38329:38354  pendingRecursiveBurns - 1 */\n      tag_374\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_374:\n        /* \"nestable.sol\":38224:38372  IERC6059(children[i].contractAddress).burn(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_375\n      swap3\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_378\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_378:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_379\n      swap2\n      swap1\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"nestable.sol\":38224:38392  IERC6059(children[i].contractAddress).burn(... */\n      tag_381\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_381:\n        /* \"nestable.sol\":38189:38392  totalChildBurns +=... */\n      dup4\n      tag_382\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_382:\n      swap3\n      pop\n        /* \"nestable.sol\":38434:38437  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"nestable.sol\":37397:38462  for (uint256 i; i < length; ) {... */\n      jump(tag_356)\n    tag_357:\n      pop\n        /* \"nestable.sol\":38568:38581  _directOwners */\n      0x03\n        /* \"nestable.sol\":38568:38590  _directOwners[tokenId] */\n      0x00\n        /* \"nestable.sol\":38582:38589  tokenId */\n      dup12\n        /* \"nestable.sol\":38568:38590  _directOwners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":38561:38590  delete _directOwners[tokenId] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"nestable.sol\":38601:38648  _afterTokenTransfer(owner, address(0), tokenId) */\n      tag_383\n        /* \"nestable.sol\":38621:38626  owner */\n      dup6\n        /* \"nestable.sol\":38636:38637  0 */\n      0x00\n        /* \"nestable.sol\":38640:38647  tokenId */\n      dup13\n        /* \"nestable.sol\":38601:38620  _afterTokenTransfer */\n      tag_325\n        /* \"nestable.sol\":38601:38648  _afterTokenTransfer(owner, address(0), tokenId) */\n      jump\t// in\n    tag_383:\n        /* \"nestable.sol\":38658:38803  _afterNestedTokenTransfer(... */\n      tag_384\n        /* \"nestable.sol\":38697:38711  immediateOwner */\n      dup8\n        /* \"nestable.sol\":38733:38734  0 */\n      0x00\n        /* \"nestable.sol\":38749:38757  parentId */\n      dup9\n        /* \"nestable.sol\":38771:38772  0 */\n      0x00\n        /* \"nestable.sol\":38786:38793  tokenId */\n      dup15\n        /* \"nestable.sol\":38658:38683  _afterNestedTokenTransfer */\n      tag_327\n        /* \"nestable.sol\":38658:38803  _afterNestedTokenTransfer(... */\n      jump\t// in\n    tag_384:\n        /* \"nestable.sol\":38846:38853  tokenId */\n      dup10\n        /* \"nestable.sol\":38842:38843  0 */\n      0x00\n        /* \"nestable.sol\":38818:38854  Transfer(owner, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":38827:38832  owner */\n      dup7\n        /* \"nestable.sol\":38818:38854  Transfer(owner, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":38923:38930  tokenId */\n      dup10\n        /* \"nestable.sol\":38906:38907  0 */\n      0x00\n        /* \"nestable.sol\":38869:38931  NestTransfer(immediateOwner, address(0), parentId, 0, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":38882:38896  immediateOwner */\n      dup9\n        /* \"nestable.sol\":38869:38931  NestTransfer(immediateOwner, address(0), parentId, 0, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d\n        /* \"nestable.sol\":38910:38918  parentId */\n      dup10\n        /* \"nestable.sol\":38920:38921  0 */\n      0x00\n        /* \"nestable.sol\":38869:38931  NestTransfer(immediateOwner, address(0), parentId, 0, tokenId) */\n      mload(0x40)\n      tag_385\n      swap3\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":38949:38964  totalChildBurns */\n      dup2\n        /* \"nestable.sol\":38942:38964  return totalChildBurns */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":36504:38971  function _burn(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":29888:30166  function _safeMint(... */\n    tag_242:\n        /* \"nestable.sol\":30012:30030  _mint(to, tokenId) */\n      tag_387\n        /* \"nestable.sol\":30018:30020  to */\n      dup4\n        /* \"nestable.sol\":30022:30029  tokenId */\n      dup4\n        /* \"nestable.sol\":30012:30017  _mint */\n      tag_388\n        /* \"nestable.sol\":30012:30030  _mint(to, tokenId) */\n      jump\t// in\n    tag_387:\n        /* \"nestable.sol\":30045:30098  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_389\n        /* \"nestable.sol\":30076:30077  0 */\n      0x00\n        /* \"nestable.sol\":30080:30082  to */\n      dup5\n        /* \"nestable.sol\":30084:30091  tokenId */\n      dup5\n        /* \"nestable.sol\":30093:30097  data */\n      dup5\n        /* \"nestable.sol\":30045:30067  _checkOnERC721Received */\n      tag_390\n        /* \"nestable.sol\":30045:30098  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_389:\n        /* \"nestable.sol\":30040:30159  if (!_checkOnERC721Received(address(0), to, tokenId, data))... */\n      tag_391\n      jumpi\n        /* \"nestable.sol\":30119:30159  ERC721TransferToNonReceiverImplementer() */\n      mload(0x40)\n      0xbcb5663700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":30040:30159  if (!_checkOnERC721Received(address(0), to, tokenId, data))... */\n    tag_391:\n        /* \"nestable.sol\":29888:30166  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":22367:22675  function _safeTransfer(... */\n    tag_247:\n        /* \"nestable.sol\":22517:22545  _transfer(from, to, tokenId) */\n      tag_393\n        /* \"nestable.sol\":22527:22531  from */\n      dup5\n        /* \"nestable.sol\":22533:22535  to */\n      dup5\n        /* \"nestable.sol\":22537:22544  tokenId */\n      dup5\n        /* \"nestable.sol\":22517:22526  _transfer */\n      tag_168\n        /* \"nestable.sol\":22517:22545  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_393:\n        /* \"nestable.sol\":22560:22607  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_394\n        /* \"nestable.sol\":22583:22587  from */\n      dup5\n        /* \"nestable.sol\":22589:22591  to */\n      dup5\n        /* \"nestable.sol\":22593:22600  tokenId */\n      dup5\n        /* \"nestable.sol\":22602:22606  data */\n      dup5\n        /* \"nestable.sol\":22560:22582  _checkOnERC721Received */\n      tag_390\n        /* \"nestable.sol\":22560:22607  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_394:\n        /* \"nestable.sol\":22555:22668  if (!_checkOnERC721Received(from, to, tokenId, data))... */\n      tag_395\n      jumpi\n        /* \"nestable.sol\":22628:22668  ERC721TransferToNonReceiverImplementer() */\n      mload(0x40)\n      0xbcb5663700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":22555:22668  if (!_checkOnERC721Received(from, to, tokenId, data))... */\n    tag_395:\n        /* \"nestable.sol\":22367:22675  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":54981:56813  function _transferChild(... */\n    tag_252:\n        /* \"nestable.sol\":55263:55281  Child memory child */\n      tag_397\n      tag_170\n      jump\t// in\n    tag_397:\n        /* \"nestable.sol\":55295:55304  isPending */\n      dup3\n        /* \"nestable.sol\":55291:55441  if (isPending) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"nestable.sol\":55328:55363  pendingChildOf(tokenId, childIndex) */\n      tag_399\n        /* \"nestable.sol\":55343:55350  tokenId */\n      dup10\n        /* \"nestable.sol\":55352:55362  childIndex */\n      dup8\n        /* \"nestable.sol\":55328:55342  pendingChildOf */\n      tag_104\n        /* \"nestable.sol\":55328:55363  pendingChildOf(tokenId, childIndex) */\n      jump\t// in\n    tag_399:\n        /* \"nestable.sol\":55320:55363  child = pendingChildOf(tokenId, childIndex) */\n      swap1\n      pop\n        /* \"nestable.sol\":55291:55441  if (isPending) {... */\n      jump(tag_400)\n    tag_398:\n        /* \"nestable.sol\":55402:55430  childOf(tokenId, childIndex) */\n      tag_401\n        /* \"nestable.sol\":55410:55417  tokenId */\n      dup10\n        /* \"nestable.sol\":55419:55429  childIndex */\n      dup8\n        /* \"nestable.sol\":55402:55409  childOf */\n      tag_59\n        /* \"nestable.sol\":55402:55430  childOf(tokenId, childIndex) */\n      jump\t// in\n    tag_401:\n        /* \"nestable.sol\":55394:55430  child = childOf(tokenId, childIndex) */\n      swap1\n      pop\n        /* \"nestable.sol\":55291:55441  if (isPending) {... */\n    tag_400:\n        /* \"nestable.sol\":55450:55499  _checkExpectedChild(child, childAddress, childId) */\n      tag_402\n        /* \"nestable.sol\":55470:55475  child */\n      dup2\n        /* \"nestable.sol\":55477:55489  childAddress */\n      dup7\n        /* \"nestable.sol\":55491:55498  childId */\n      dup7\n        /* \"nestable.sol\":55450:55469  _checkExpectedChild */\n      tag_403\n        /* \"nestable.sol\":55450:55499  _checkExpectedChild(child, childAddress, childId) */\n      jump\t// in\n    tag_402:\n        /* \"nestable.sol\":55510:55655  _beforeTransferChild(... */\n      tag_404\n        /* \"nestable.sol\":55544:55551  tokenId */\n      dup10\n        /* \"nestable.sol\":55565:55575  childIndex */\n      dup8\n        /* \"nestable.sol\":55589:55601  childAddress */\n      dup8\n        /* \"nestable.sol\":55615:55622  childId */\n      dup8\n        /* \"nestable.sol\":55636:55645  isPending */\n      dup8\n        /* \"nestable.sol\":55510:55530  _beforeTransferChild */\n      tag_405\n        /* \"nestable.sol\":55510:55655  _beforeTransferChild(... */\n      jump\t// in\n    tag_404:\n        /* \"nestable.sol\":55670:55679  isPending */\n      dup3\n        /* \"nestable.sol\":55666:55912  if (isPending) {... */\n      iszero\n      tag_406\n      jumpi\n        /* \"nestable.sol\":55695:55753  _removeChildByIndex(_pendingChildren[tokenId], childIndex) */\n      tag_407\n        /* \"nestable.sol\":55715:55731  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":55715:55740  _pendingChildren[tokenId] */\n      0x00\n        /* \"nestable.sol\":55732:55739  tokenId */\n      dup12\n        /* \"nestable.sol\":55715:55740  _pendingChildren[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":55742:55752  childIndex */\n      dup8\n        /* \"nestable.sol\":55695:55714  _removeChildByIndex */\n      tag_408\n        /* \"nestable.sol\":55695:55753  _removeChildByIndex(_pendingChildren[tokenId], childIndex) */\n      jump\t// in\n    tag_407:\n        /* \"nestable.sol\":55666:55912  if (isPending) {... */\n      jump(tag_409)\n    tag_406:\n        /* \"nestable.sol\":55791:55807  _childIsInActive */\n      0x06\n        /* \"nestable.sol\":55791:55821  _childIsInActive[childAddress] */\n      0x00\n        /* \"nestable.sol\":55808:55820  childAddress */\n      dup7\n        /* \"nestable.sol\":55791:55821  _childIsInActive[childAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":55791:55830  _childIsInActive[childAddress][childId] */\n      0x00\n        /* \"nestable.sol\":55822:55829  childId */\n      dup6\n        /* \"nestable.sol\":55791:55830  _childIsInActive[childAddress][childId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":55784:55830  delete _childIsInActive[childAddress][childId] */\n      0x00\n      swap1\n      sstore\n        /* \"nestable.sol\":55844:55901  _removeChildByIndex(_activeChildren[tokenId], childIndex) */\n      tag_410\n        /* \"nestable.sol\":55864:55879  _activeChildren */\n      0x04\n        /* \"nestable.sol\":55864:55888  _activeChildren[tokenId] */\n      0x00\n        /* \"nestable.sol\":55880:55887  tokenId */\n      dup12\n        /* \"nestable.sol\":55864:55888  _activeChildren[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":55890:55900  childIndex */\n      dup8\n        /* \"nestable.sol\":55844:55863  _removeChildByIndex */\n      tag_408\n        /* \"nestable.sol\":55844:55901  _removeChildByIndex(_activeChildren[tokenId], childIndex) */\n      jump\t// in\n    tag_410:\n        /* \"nestable.sol\":55666:55912  if (isPending) {... */\n    tag_409:\n        /* \"nestable.sol\":55940:55941  0 */\n      0x00\n        /* \"nestable.sol\":55926:55942  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":55926:55928  to */\n      dup9\n        /* \"nestable.sol\":55926:55942  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":55922:56496  if (to != address(0)) {... */\n      tag_411\n      jumpi\n        /* \"nestable.sol\":55979:55980  0 */\n      0x00\n        /* \"nestable.sol\":55962:55975  destinationId */\n      dup8\n        /* \"nestable.sol\":55962:55980  destinationId == 0 */\n      sub\n        /* \"nestable.sol\":55958:56486  if (destinationId == 0) {... */\n      tag_412\n      jumpi\n        /* \"nestable.sol\":56008:56020  childAddress */\n      dup5\n        /* \"nestable.sol\":56000:56038  IERC721(childAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"nestable.sol\":56068:56072  this */\n      address\n        /* \"nestable.sol\":56095:56097  to */\n      dup11\n        /* \"nestable.sol\":56119:56126  childId */\n      dup8\n        /* \"nestable.sol\":56148:56152  data */\n      dup7\n        /* \"nestable.sol\":56000:56170  IERC721(childAddress).safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_415\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_415:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_417\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_417:\n      pop\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":55958:56486  if (destinationId == 0) {... */\n      jump(tag_418)\n    tag_412:\n        /* \"nestable.sol\":56259:56264  child */\n      dup1\n        /* \"nestable.sol\":56259:56280  child.contractAddress */\n      0x20\n      add\n      mload\n        /* \"nestable.sol\":56250:56298  IERC6059(child.contractAddress).nestTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x064c0a3a\n        /* \"nestable.sol\":56328:56332  this */\n      address\n        /* \"nestable.sol\":56355:56357  to */\n      dup11\n        /* \"nestable.sol\":56379:56384  child */\n      dup5\n        /* \"nestable.sol\":56379:56392  child.tokenId */\n      0x00\n      add\n      mload\n        /* \"nestable.sol\":56414:56427  destinationId */\n      dup12\n        /* \"nestable.sol\":56449:56453  data */\n      dup8\n        /* \"nestable.sol\":56250:56471  IERC6059(child.contractAddress).nestTransferFrom(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_419\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_420\n      jump\t// in\n    tag_419:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_421\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_421:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_423\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_423:\n      pop\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":55958:56486  if (destinationId == 0) {... */\n    tag_418:\n        /* \"nestable.sol\":55922:56496  if (to != address(0)) {... */\n    tag_411:\n        /* \"nestable.sol\":56612:56619  childId */\n      dup4\n        /* \"nestable.sol\":56586:56598  childAddress */\n      dup6\n        /* \"nestable.sol\":56511:56652  ChildTransferred(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":56541:56548  tokenId */\n      dup11\n        /* \"nestable.sol\":56511:56652  ChildTransferred(... */\n      0x2bedee38cdb22411c14554191243c0e117c0088ddae3459876acd46a0fd53815\n        /* \"nestable.sol\":56562:56572  childIndex */\n      dup10\n        /* \"nestable.sol\":56633:56642  isPending */\n      dup8\n        /* \"nestable.sol\":56511:56652  ChildTransferred(... */\n      mload(0x40)\n      tag_424\n      swap3\n      swap2\n      swap1\n      tag_425\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":56662:56806  _afterTransferChild(... */\n      tag_426\n        /* \"nestable.sol\":56695:56702  tokenId */\n      dup10\n        /* \"nestable.sol\":56716:56726  childIndex */\n      dup8\n        /* \"nestable.sol\":56740:56752  childAddress */\n      dup8\n        /* \"nestable.sol\":56766:56773  childId */\n      dup8\n        /* \"nestable.sol\":56787:56796  isPending */\n      dup8\n        /* \"nestable.sol\":56662:56681  _afterTransferChild */\n      tag_427\n        /* \"nestable.sol\":56662:56806  _afterTransferChild(... */\n      jump\t// in\n    tag_426:\n        /* \"nestable.sol\":55253:56813  {... */\n      pop\n        /* \"nestable.sol\":54981:56813  function _transferChild(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":49732:50701  function _acceptChild(... */\n    tag_257:\n        /* \"nestable.sol\":49938:49948  childIndex */\n      dup3\n        /* \"nestable.sol\":49900:49927  pendingChildrenOf(parentId) */\n      tag_429\n        /* \"nestable.sol\":49918:49926  parentId */\n      dup6\n        /* \"nestable.sol\":49900:49917  pendingChildrenOf */\n      tag_74\n        /* \"nestable.sol\":49900:49927  pendingChildrenOf(parentId) */\n      jump\t// in\n    tag_429:\n        /* \"nestable.sol\":49900:49934  pendingChildrenOf(parentId).length */\n      mload\n        /* \"nestable.sol\":49900:49948  pendingChildrenOf(parentId).length <= childIndex */\n      gt\n        /* \"nestable.sol\":49896:49998  if (pendingChildrenOf(parentId).length <= childIndex)... */\n      tag_430\n      jumpi\n        /* \"nestable.sol\":49969:49998  PendingChildIndexOutOfRange() */\n      mload(0x40)\n      0x9136d24f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":49896:49998  if (pendingChildrenOf(parentId).length <= childIndex)... */\n    tag_430:\n        /* \"nestable.sol\":50009:50027  Child memory child */\n      0x00\n        /* \"nestable.sol\":50030:50066  pendingChildOf(parentId, childIndex) */\n      tag_431\n        /* \"nestable.sol\":50045:50053  parentId */\n      dup6\n        /* \"nestable.sol\":50055:50065  childIndex */\n      dup6\n        /* \"nestable.sol\":50030:50044  pendingChildOf */\n      tag_104\n        /* \"nestable.sol\":50030:50066  pendingChildOf(parentId, childIndex) */\n      jump\t// in\n    tag_431:\n        /* \"nestable.sol\":50009:50066  Child memory child = pendingChildOf(parentId, childIndex) */\n      swap1\n      pop\n        /* \"nestable.sol\":50076:50125  _checkExpectedChild(child, childAddress, childId) */\n      tag_432\n        /* \"nestable.sol\":50096:50101  child */\n      dup2\n        /* \"nestable.sol\":50103:50115  childAddress */\n      dup5\n        /* \"nestable.sol\":50117:50124  childId */\n      dup5\n        /* \"nestable.sol\":50076:50095  _checkExpectedChild */\n      tag_403\n        /* \"nestable.sol\":50076:50125  _checkExpectedChild(child, childAddress, childId) */\n      jump\t// in\n    tag_432:\n        /* \"nestable.sol\":50182:50183  0 */\n      0x00\n        /* \"nestable.sol\":50139:50155  _childIsInActive */\n      0x06\n        /* \"nestable.sol\":50139:50169  _childIsInActive[childAddress] */\n      0x00\n        /* \"nestable.sol\":50156:50168  childAddress */\n      dup6\n        /* \"nestable.sol\":50139:50169  _childIsInActive[childAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":50139:50178  _childIsInActive[childAddress][childId] */\n      0x00\n        /* \"nestable.sol\":50170:50177  childId */\n      dup5\n        /* \"nestable.sol\":50139:50178  _childIsInActive[childAddress][childId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nestable.sol\":50139:50183  _childIsInActive[childAddress][childId] != 0 */\n      eq\n        /* \"nestable.sol\":50135:50224  if (_childIsInActive[childAddress][childId] != 0)... */\n      tag_433\n      jumpi\n        /* \"nestable.sol\":50204:50224  ChildAlreadyExists() */\n      mload(0x40)\n      0xff33650c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":50135:50224  if (_childIsInActive[childAddress][childId] != 0)... */\n    tag_433:\n        /* \"nestable.sol\":50235:50298  _beforeAcceptChild(parentId, childIndex, childAddress, childId) */\n      tag_434\n        /* \"nestable.sol\":50254:50262  parentId */\n      dup6\n        /* \"nestable.sol\":50264:50274  childIndex */\n      dup6\n        /* \"nestable.sol\":50276:50288  childAddress */\n      dup6\n        /* \"nestable.sol\":50290:50297  childId */\n      dup6\n        /* \"nestable.sol\":50235:50253  _beforeAcceptChild */\n      tag_435\n        /* \"nestable.sol\":50235:50298  _beforeAcceptChild(parentId, childIndex, childAddress, childId) */\n      jump\t// in\n    tag_434:\n        /* \"nestable.sol\":50341:50400  _removeChildByIndex(_pendingChildren[parentId], childIndex) */\n      tag_436\n        /* \"nestable.sol\":50361:50377  _pendingChildren */\n      0x05\n        /* \"nestable.sol\":50361:50387  _pendingChildren[parentId] */\n      0x00\n        /* \"nestable.sol\":50378:50386  parentId */\n      dup8\n        /* \"nestable.sol\":50361:50387  _pendingChildren[parentId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":50389:50399  childIndex */\n      dup6\n        /* \"nestable.sol\":50341:50360  _removeChildByIndex */\n      tag_408\n        /* \"nestable.sol\":50341:50400  _removeChildByIndex(_pendingChildren[parentId], childIndex) */\n      jump\t// in\n    tag_436:\n        /* \"nestable.sol\":50437:50452  _activeChildren */\n      0x04\n        /* \"nestable.sol\":50437:50462  _activeChildren[parentId] */\n      0x00\n        /* \"nestable.sol\":50453:50461  parentId */\n      dup7\n        /* \"nestable.sol\":50437:50462  _activeChildren[parentId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":50468:50473  child */\n      dup2\n        /* \"nestable.sol\":50437:50474  _activeChildren[parentId].push(child) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":50526:50527  1 */\n      0x01\n        /* \"nestable.sol\":50484:50500  _childIsInActive */\n      0x06\n        /* \"nestable.sol\":50484:50514  _childIsInActive[childAddress] */\n      0x00\n        /* \"nestable.sol\":50501:50513  childAddress */\n      dup6\n        /* \"nestable.sol\":50484:50514  _childIsInActive[childAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":50484:50523  _childIsInActive[childAddress][childId] */\n      0x00\n        /* \"nestable.sol\":50515:50522  childId */\n      dup5\n        /* \"nestable.sol\":50484:50523  _childIsInActive[childAddress][childId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":50484:50527  _childIsInActive[childAddress][childId] = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":50613:50620  childId */\n      dup2\n        /* \"nestable.sol\":50599:50611  childAddress */\n      dup4\n        /* \"nestable.sol\":50563:50621  ChildAccepted(parentId, childIndex, childAddress, childId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":50577:50585  parentId */\n      dup7\n        /* \"nestable.sol\":50563:50621  ChildAccepted(parentId, childIndex, childAddress, childId) */\n      0x29486b9e2ae569b440933a9b1b421467306fa21f3dcad439c262910a634963a9\n        /* \"nestable.sol\":50587:50597  childIndex */\n      dup8\n        /* \"nestable.sol\":50563:50621  ChildAccepted(parentId, childIndex, childAddress, childId) */\n      mload(0x40)\n      tag_438\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_438:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":50632:50694  _afterAcceptChild(parentId, childIndex, childAddress, childId) */\n      tag_439\n        /* \"nestable.sol\":50650:50658  parentId */\n      dup6\n        /* \"nestable.sol\":50660:50670  childIndex */\n      dup6\n        /* \"nestable.sol\":50672:50684  childAddress */\n      dup6\n        /* \"nestable.sol\":50686:50693  childId */\n      dup6\n        /* \"nestable.sol\":50632:50649  _afterAcceptChild */\n      tag_440\n        /* \"nestable.sol\":50632:50694  _afterAcceptChild(parentId, childIndex, childAddress, childId) */\n      jump\t// in\n    tag_439:\n        /* \"nestable.sol\":49886:50701  {... */\n      pop\n        /* \"nestable.sol\":49732:50701  function _acceptChild(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":32323:32912  function _innerMint(... */\n    tag_270:\n        /* \"nestable.sol\":32461:32462  0 */\n      0x00\n        /* \"nestable.sol\":32447:32463  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":32447:32449  to */\n      dup4\n        /* \"nestable.sol\":32447:32463  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nestable.sol\":32443:32500  if (to == address(0)) revert ERC721MintToTheZeroAddress() */\n      tag_442\n      jumpi\n        /* \"nestable.sol\":32472:32500  ERC721MintToTheZeroAddress() */\n      mload(0x40)\n      0x25bd6bd300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":32443:32500  if (to == address(0)) revert ERC721MintToTheZeroAddress() */\n    tag_442:\n        /* \"nestable.sol\":32514:32530  _exists(tokenId) */\n      tag_443\n        /* \"nestable.sol\":32522:32529  tokenId */\n      dup3\n        /* \"nestable.sol\":32514:32521  _exists */\n      tag_308\n        /* \"nestable.sol\":32514:32530  _exists(tokenId) */\n      jump\t// in\n    tag_443:\n        /* \"nestable.sol\":32510:32565  if (_exists(tokenId)) revert ERC721TokenAlreadyMinted() */\n      iszero\n      tag_444\n      jumpi\n        /* \"nestable.sol\":32539:32565  ERC721TokenAlreadyMinted() */\n      mload(0x40)\n      0xc5a8d37100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":32510:32565  if (_exists(tokenId)) revert ERC721TokenAlreadyMinted() */\n    tag_444:\n        /* \"nestable.sol\":32590:32591  0 */\n      0x00\n        /* \"nestable.sol\":32579:32586  tokenId */\n      dup3\n        /* \"nestable.sol\":32579:32591  tokenId == 0 */\n      sub\n        /* \"nestable.sol\":32575:32617  if (tokenId == 0) revert IdZeroForbidden() */\n      tag_445\n      jumpi\n        /* \"nestable.sol\":32600:32617  IdZeroForbidden() */\n      mload(0x40)\n      0x238924d500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":32575:32617  if (tokenId == 0) revert IdZeroForbidden() */\n    tag_445:\n        /* \"nestable.sol\":32628:32673  _beforeTokenTransfer(address(0), to, tokenId) */\n      tag_446\n        /* \"nestable.sol\":32657:32658  0 */\n      0x00\n        /* \"nestable.sol\":32661:32663  to */\n      dup5\n        /* \"nestable.sol\":32665:32672  tokenId */\n      dup5\n        /* \"nestable.sol\":32628:32648  _beforeTokenTransfer */\n      tag_296\n        /* \"nestable.sol\":32628:32673  _beforeTokenTransfer(address(0), to, tokenId) */\n      jump\t// in\n    tag_446:\n        /* \"nestable.sol\":32683:32752  _beforeNestedTokenTransfer(address(0), to, 0, destinationId, tokenId) */\n      tag_447\n        /* \"nestable.sol\":32718:32719  0 */\n      0x00\n        /* \"nestable.sol\":32722:32724  to */\n      dup5\n        /* \"nestable.sol\":32726:32727  0 */\n      0x00\n        /* \"nestable.sol\":32729:32742  destinationId */\n      dup5\n        /* \"nestable.sol\":32744:32751  tokenId */\n      dup7\n        /* \"nestable.sol\":32683:32709  _beforeNestedTokenTransfer */\n      tag_298\n        /* \"nestable.sol\":32683:32752  _beforeNestedTokenTransfer(address(0), to, 0, destinationId, tokenId) */\n      jump\t// in\n    tag_447:\n        /* \"nestable.sol\":32780:32781  1 */\n      0x01\n        /* \"nestable.sol\":32763:32772  _balances */\n      0x00\n        /* \"nestable.sol\":32763:32776  _balances[to] */\n      dup1\n        /* \"nestable.sol\":32773:32775  to */\n      dup6\n        /* \"nestable.sol\":32763:32776  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nestable.sol\":32763:32781  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_448\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_448:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nestable.sol\":32816:32905  DirectOwner({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"nestable.sol\":32881:32894  destinationId */\n      dup3\n        /* \"nestable.sol\":32816:32905  DirectOwner({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nestable.sol\":32856:32858  to */\n      dup5\n        /* \"nestable.sol\":32816:32905  DirectOwner({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"nestable.sol\":32791:32804  _directOwners */\n      0x03\n        /* \"nestable.sol\":32791:32813  _directOwners[tokenId] */\n      0x00\n        /* \"nestable.sol\":32805:32812  tokenId */\n      dup5\n        /* \"nestable.sol\":32791:32813  _directOwners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":32791:32905  _directOwners[tokenId] = DirectOwner({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"nestable.sol\":32323:32912  function _innerMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":26678:27218  function _sendToNFT(... */\n    tag_272:\n        /* \"nestable.sol\":26873:26894  IERC6059 destContract */\n      0x00\n        /* \"nestable.sol\":26906:26908  to */\n      dup6\n        /* \"nestable.sol\":26873:26909  IERC6059 destContract = IERC6059(to) */\n      swap1\n      pop\n        /* \"nestable.sol\":26919:26931  destContract */\n      dup1\n        /* \"nestable.sol\":26919:26940  destContract.addChild */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x635490cc\n        /* \"nestable.sol\":26941:26954  destinationId */\n      dup6\n        /* \"nestable.sol\":26956:26963  tokenId */\n      dup6\n        /* \"nestable.sol\":26965:26969  data */\n      dup6\n        /* \"nestable.sol\":26919:26970  destContract.addChild(destinationId, tokenId, data) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_450\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_451\n      jump\t// in\n    tag_450:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_452\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_452:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_454\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_454:\n      pop\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":26980:27018  _afterTokenTransfer(from, to, tokenId) */\n      tag_455\n        /* \"nestable.sol\":27000:27004  from */\n      dup8\n        /* \"nestable.sol\":27006:27008  to */\n      dup8\n        /* \"nestable.sol\":27010:27017  tokenId */\n      dup6\n        /* \"nestable.sol\":26980:26999  _afterTokenTransfer */\n      tag_325\n        /* \"nestable.sol\":26980:27018  _afterTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_455:\n        /* \"nestable.sol\":27028:27097  _afterNestedTokenTransfer(from, to, parentId, destinationId, tokenId) */\n      tag_456\n        /* \"nestable.sol\":27054:27058  from */\n      dup8\n        /* \"nestable.sol\":27060:27062  to */\n      dup8\n        /* \"nestable.sol\":27064:27072  parentId */\n      dup8\n        /* \"nestable.sol\":27074:27087  destinationId */\n      dup8\n        /* \"nestable.sol\":27089:27096  tokenId */\n      dup8\n        /* \"nestable.sol\":27028:27053  _afterNestedTokenTransfer */\n      tag_327\n        /* \"nestable.sol\":27028:27097  _afterNestedTokenTransfer(from, to, parentId, destinationId, tokenId) */\n      jump\t// in\n    tag_456:\n        /* \"nestable.sol\":27132:27139  tokenId */\n      dup3\n        /* \"nestable.sol\":27128:27130  to */\n      dup7\n        /* \"nestable.sol\":27113:27140  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":27122:27126  from */\n      dup9\n        /* \"nestable.sol\":27113:27140  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":27203:27210  tokenId */\n      dup3\n        /* \"nestable.sol\":27174:27176  to */\n      dup7\n        /* \"nestable.sol\":27155:27211  NestTransfer(from, to, parentId, destinationId, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":27168:27172  from */\n      dup9\n        /* \"nestable.sol\":27155:27211  NestTransfer(from, to, parentId, destinationId, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d\n        /* \"nestable.sol\":27178:27186  parentId */\n      dup9\n        /* \"nestable.sol\":27188:27201  destinationId */\n      dup9\n        /* \"nestable.sol\":27155:27211  NestTransfer(from, to, parentId, destinationId, tokenId) */\n      mload(0x40)\n      tag_457\n      swap3\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_457:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":26863:27218  {... */\n      pop\n        /* \"nestable.sol\":26678:27218  function _sendToNFT(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":43005:43537  function _isApprovedOrDirectOwner(... */\n    tag_278:\n        /* \"nestable.sol\":43126:43130  bool */\n      0x00\n        /* \"nestable.sol\":43143:43156  address owner */\n      dup1\n        /* \"nestable.sol\":43158:43174  uint256 parentId */\n      0x00\n        /* \"nestable.sol\":43180:43202  directOwnerOf(tokenId) */\n      tag_459\n        /* \"nestable.sol\":43194:43201  tokenId */\n      dup5\n        /* \"nestable.sol\":43180:43193  directOwnerOf */\n      tag_136\n        /* \"nestable.sol\":43180:43202  directOwnerOf(tokenId) */\n      jump\t// in\n    tag_459:\n        /* \"nestable.sol\":43142:43202  (address owner, uint256 parentId, ) = directOwnerOf(tokenId) */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"nestable.sol\":43292:43293  0 */\n      0x00\n        /* \"nestable.sol\":43280:43288  parentId */\n      dup2\n        /* \"nestable.sol\":43280:43293  parentId != 0 */\n      eq\n        /* \"nestable.sol\":43276:43345  if (parentId != 0) {... */\n      tag_460\n      jumpi\n        /* \"nestable.sol\":43328:43333  owner */\n      dup2\n        /* \"nestable.sol\":43317:43333  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":43317:43324  spender */\n      dup6\n        /* \"nestable.sol\":43317:43333  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":43309:43334  return (spender == owner) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_458)\n        /* \"nestable.sol\":43276:43345  if (parentId != 0) {... */\n    tag_460:\n        /* \"nestable.sol\":43429:43434  owner */\n      dup2\n        /* \"nestable.sol\":43418:43434  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":43418:43425  spender */\n      dup6\n        /* \"nestable.sol\":43418:43434  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":43418:43482  spender == owner ||... */\n      dup1\n      tag_461\n      jumpi\n      pop\n        /* \"nestable.sol\":43450:43482  isApprovedForAll(owner, spender) */\n      tag_462\n        /* \"nestable.sol\":43467:43472  owner */\n      dup3\n        /* \"nestable.sol\":43474:43481  spender */\n      dup7\n        /* \"nestable.sol\":43450:43466  isApprovedForAll */\n      tag_128\n        /* \"nestable.sol\":43450:43482  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_462:\n        /* \"nestable.sol\":43418:43482  spender == owner ||... */\n    tag_461:\n        /* \"nestable.sol\":43418:43529  spender == owner ||... */\n      dup1\n      tag_463\n      jumpi\n      pop\n        /* \"nestable.sol\":43522:43529  spender */\n      dup5\n        /* \"nestable.sol\":43498:43529  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":43498:43518  getApproved(tokenId) */\n      tag_464\n        /* \"nestable.sol\":43510:43517  tokenId */\n      dup6\n        /* \"nestable.sol\":43498:43509  getApproved */\n      tag_45\n        /* \"nestable.sol\":43498:43518  getApproved(tokenId) */\n      jump\t// in\n    tag_464:\n        /* \"nestable.sol\":43498:43529  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":43418:43529  spender == owner ||... */\n    tag_463:\n        /* \"nestable.sol\":43410:43530  return (spender == owner ||... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":43005:43537  function _isApprovedOrDirectOwner(... */\n    tag_458:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":27846:28877  function _checkForInheritanceLoop(... */\n    tag_294:\n        /* \"nestable.sol\":27999:28008  uint256 i */\n      0x00\n        /* \"nestable.sol\":27994:28837  for (uint256 i; i < _MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP; ) {... */\n    tag_466:\n        /* \"nestable.sol\":15830:15833  100 */\n      0x64\n        /* \"nestable.sol\":28010:28011  i */\n      dup2\n        /* \"nestable.sol\":28010:28055  i < _MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP */\n      lt\n        /* \"nestable.sol\":27994:28837  for (uint256 i; i < _MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP; ) {... */\n      iszero\n      tag_467\n      jumpi\n        /* \"nestable.sol\":28091:28108  address nextOwner */\n      0x00\n        /* \"nestable.sol\":28126:28150  uint256 nextOwnerTokenId */\n      dup1\n        /* \"nestable.sol\":28168:28178  bool isNft */\n      0x00\n        /* \"nestable.sol\":28204:28218  targetContract */\n      dup6\n        /* \"nestable.sol\":28195:28233  IERC6059(targetContract).directOwnerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb25fb7a\n        /* \"nestable.sol\":28234:28242  targetId */\n      dup7\n        /* \"nestable.sol\":28195:28243  IERC6059(targetContract).directOwnerOf(targetId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_469\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_469:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_471\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_471:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_472\n      swap2\n      swap1\n      tag_473\n      jump\t// in\n    tag_472:\n        /* \"nestable.sol\":28073:28243  (... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"nestable.sol\":28334:28339  isNft */\n      dup1\n        /* \"nestable.sol\":28329:28380  if (!isNft) {... */\n      tag_474\n      jumpi\n        /* \"nestable.sol\":28359:28366  return; */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_465)\n        /* \"nestable.sol\":28329:28380  if (!isNft) {... */\n    tag_474:\n        /* \"nestable.sol\":28511:28515  this */\n      address\n        /* \"nestable.sol\":28490:28516  nextOwner == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":28490:28499  nextOwner */\n      dup4\n        /* \"nestable.sol\":28490:28516  nextOwner == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":28490:28549  nextOwner == address(this) && nextOwnerTokenId == currentId */\n      dup1\n      iszero\n      tag_475\n      jumpi\n      pop\n        /* \"nestable.sol\":28540:28549  currentId */\n      dup7\n        /* \"nestable.sol\":28520:28536  nextOwnerTokenId */\n      dup3\n        /* \"nestable.sol\":28520:28549  nextOwnerTokenId == currentId */\n      eq\n        /* \"nestable.sol\":28490:28549  nextOwner == address(this) && nextOwnerTokenId == currentId */\n    tag_475:\n        /* \"nestable.sol\":28486:28621  if (nextOwner == address(this) && nextOwnerTokenId == currentId) {... */\n      iszero\n      tag_476\n      jumpi\n        /* \"nestable.sol\":28576:28606  NestableTransferToDescendant() */\n      mload(0x40)\n      0xf911968900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":28486:28621  if (nextOwner == address(this) && nextOwnerTokenId == currentId) {... */\n    tag_476:\n        /* \"nestable.sol\":28717:28726  nextOwner */\n      dup3\n        /* \"nestable.sol\":28700:28726  targetContract = nextOwner */\n      swap6\n      pop\n        /* \"nestable.sol\":28751:28767  nextOwnerTokenId */\n      dup2\n        /* \"nestable.sol\":28740:28767  targetId = nextOwnerTokenId */\n      swap5\n      pop\n        /* \"nestable.sol\":28809:28812  ++i */\n      dup4\n      0x01\n      add\n      swap4\n      pop\n        /* \"nestable.sol\":28059:28837  {... */\n      pop\n      pop\n      pop\n        /* \"nestable.sol\":27994:28837  for (uint256 i; i < _MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP; ) {... */\n      jump(tag_466)\n    tag_467:\n      pop\n        /* \"nestable.sol\":28853:28870  NestableTooDeep() */\n      mload(0x40)\n      0xeb20c44200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":27846:28877  function _checkForInheritanceLoop(... */\n    tag_465:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":61867:61989  function _beforeTokenTransfer(... */\n    tag_296:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":63250:63434  function _beforeNestedTokenTransfer(... */\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":41168:41554  function _updateOwnerAndClearApprovals(... */\n    tag_302:\n        /* \"nestable.sol\":41333:41422  DirectOwner({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"nestable.sol\":41398:41411  destinationId */\n      dup4\n        /* \"nestable.sol\":41333:41422  DirectOwner({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nestable.sol\":41373:41375  to */\n      dup3\n        /* \"nestable.sol\":41333:41422  DirectOwner({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"nestable.sol\":41308:41321  _directOwners */\n      0x03\n        /* \"nestable.sol\":41308:41330  _directOwners[tokenId] */\n      0x00\n        /* \"nestable.sol\":41322:41329  tokenId */\n      dup6\n        /* \"nestable.sol\":41308:41330  _directOwners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":41308:41422  _directOwners[tokenId] = DirectOwner({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"nestable.sol\":41484:41513  _approve(address(0), tokenId) */\n      tag_480\n        /* \"nestable.sol\":41501:41502  0 */\n      0x00\n        /* \"nestable.sol\":41505:41512  tokenId */\n      dup5\n        /* \"nestable.sol\":41484:41492  _approve */\n      tag_163\n        /* \"nestable.sol\":41484:41513  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_480:\n        /* \"nestable.sol\":41523:41547  _cleanApprovals(tokenId) */\n      tag_481\n        /* \"nestable.sol\":41539:41546  tokenId */\n      dup4\n        /* \"nestable.sol\":41523:41538  _cleanApprovals */\n      tag_352\n        /* \"nestable.sol\":41523:41547  _cleanApprovals(tokenId) */\n      jump\t// in\n    tag_481:\n        /* \"nestable.sol\":41168:41554  function _updateOwnerAndClearApprovals(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":44485:44629  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_308:\n        /* \"nestable.sol\":44550:44554  bool */\n      0x00\n        /* \"nestable.sol\":44620:44621  0 */\n      dup1\n        /* \"nestable.sol\":44573:44622  _directOwners[tokenId].ownerAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":44573:44586  _directOwners */\n      0x03\n        /* \"nestable.sol\":44573:44595  _directOwners[tokenId] */\n      0x00\n        /* \"nestable.sol\":44587:44594  tokenId */\n      dup5\n        /* \"nestable.sol\":44573:44595  _directOwners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nestable.sol\":44573:44608  _directOwners[tokenId].ownerAddress */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":44573:44622  _directOwners[tokenId].ownerAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nestable.sol\":44566:44622  return _directOwners[tokenId].ownerAddress != address(0) */\n      swap1\n      pop\n        /* \"nestable.sol\":44485:44629  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nestable.sol\":62568:62689  function _afterTokenTransfer(... */\n    tag_325:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":63977:64160  function _afterNestedTokenTransfer(... */\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":42307:42607  function _isApprovedOrOwner(... */\n    tag_334:\n        /* \"nestable.sol\":42422:42426  bool */\n      0x00\n        /* \"nestable.sol\":42438:42451  address owner */\n      dup1\n        /* \"nestable.sol\":42454:42470  ownerOf(tokenId) */\n      tag_486\n        /* \"nestable.sol\":42462:42469  tokenId */\n      dup4\n        /* \"nestable.sol\":42454:42461  ownerOf */\n      tag_79\n        /* \"nestable.sol\":42454:42470  ownerOf(tokenId) */\n      jump\t// in\n    tag_486:\n        /* \"nestable.sol\":42438:42470  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nestable.sol\":42499:42504  owner */\n      dup1\n        /* \"nestable.sol\":42488:42504  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":42488:42495  spender */\n      dup5\n        /* \"nestable.sol\":42488:42504  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":42488:42552  spender == owner ||... */\n      dup1\n      tag_487\n      jumpi\n      pop\n        /* \"nestable.sol\":42520:42552  isApprovedForAll(owner, spender) */\n      tag_488\n        /* \"nestable.sol\":42537:42542  owner */\n      dup2\n        /* \"nestable.sol\":42544:42551  spender */\n      dup6\n        /* \"nestable.sol\":42520:42536  isApprovedForAll */\n      tag_128\n        /* \"nestable.sol\":42520:42552  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_488:\n        /* \"nestable.sol\":42488:42552  spender == owner ||... */\n    tag_487:\n        /* \"nestable.sol\":42488:42599  spender == owner ||... */\n      dup1\n      tag_489\n      jumpi\n      pop\n        /* \"nestable.sol\":42592:42599  spender */\n      dup4\n        /* \"nestable.sol\":42568:42599  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":42568:42588  getApproved(tokenId) */\n      tag_490\n        /* \"nestable.sol\":42580:42587  tokenId */\n      dup5\n        /* \"nestable.sol\":42568:42579  getApproved */\n      tag_45\n        /* \"nestable.sol\":42568:42588  getApproved(tokenId) */\n      jump\t// in\n    tag_490:\n        /* \"nestable.sol\":42568:42599  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nestable.sol\":42488:42599  spender == owner ||... */\n    tag_489:\n        /* \"nestable.sol\":42480:42600  return (spender == owner ||... */\n      swap2\n      pop\n      pop\n        /* \"nestable.sol\":42307:42607  function _isApprovedOrOwner(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":71039:71109  function _beforeRejectAllChildren(uint256 tokenId) internal virtual {} */\n    tag_339:\n      pop\n      jump\t// out\n        /* \"nestable.sol\":71426:71495  function _afterRejectAllChildren(uint256 tokenId) internal virtual {} */\n    tag_343:\n      pop\n      jump\t// out\n        /* \"nestable.sol\":41723:41784  function _cleanApprovals(uint256 tokenId) internal virtual {} */\n    tag_352:\n      pop\n      jump\t// out\n        /* \"nestable.sol\":30589:30921  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_388:\n        /* \"nestable.sol\":30660:30686  _innerMint(to, tokenId, 0) */\n      tag_495\n        /* \"nestable.sol\":30671:30673  to */\n      dup3\n        /* \"nestable.sol\":30675:30682  tokenId */\n      dup3\n        /* \"nestable.sol\":30684:30685  0 */\n      0x00\n        /* \"nestable.sol\":30660:30670  _innerMint */\n      tag_270\n        /* \"nestable.sol\":30660:30686  _innerMint(to, tokenId, 0) */\n      jump\t// in\n    tag_495:\n        /* \"nestable.sol\":30727:30734  tokenId */\n      dup1\n        /* \"nestable.sol\":30723:30725  to */\n      dup3\n        /* \"nestable.sol\":30702:30735  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":30719:30720  0 */\n      0x00\n        /* \"nestable.sol\":30702:30735  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":30785:30792  tokenId */\n      dup1\n        /* \"nestable.sol\":30775:30777  to */\n      dup3\n        /* \"nestable.sol\":30750:30793  NestTransfer(address(0), to, 0, 0, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":30771:30772  0 */\n      0x00\n        /* \"nestable.sol\":30750:30793  NestTransfer(address(0), to, 0, 0, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d\n        /* \"nestable.sol\":30779:30780  0 */\n      0x00\n        /* \"nestable.sol\":30782:30783  0 */\n      dup1\n        /* \"nestable.sol\":30750:30793  NestTransfer(address(0), to, 0, 0, tokenId) */\n      mload(0x40)\n      tag_496\n      swap3\n      swap2\n      swap1\n      tag_497\n      jump\t// in\n    tag_496:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nestable.sol\":30804:30848  _afterTokenTransfer(address(0), to, tokenId) */\n      tag_498\n        /* \"nestable.sol\":30832:30833  0 */\n      0x00\n        /* \"nestable.sol\":30836:30838  to */\n      dup4\n        /* \"nestable.sol\":30840:30847  tokenId */\n      dup4\n        /* \"nestable.sol\":30804:30823  _afterTokenTransfer */\n      tag_325\n        /* \"nestable.sol\":30804:30848  _afterTokenTransfer(address(0), to, tokenId) */\n      jump\t// in\n    tag_498:\n        /* \"nestable.sol\":30858:30914  _afterNestedTokenTransfer(address(0), to, 0, 0, tokenId) */\n      tag_499\n        /* \"nestable.sol\":30892:30893  0 */\n      0x00\n        /* \"nestable.sol\":30896:30898  to */\n      dup4\n        /* \"nestable.sol\":30900:30901  0 */\n      0x00\n        /* \"nestable.sol\":30903:30904  0 */\n      dup1\n        /* \"nestable.sol\":30906:30913  tokenId */\n      dup6\n        /* \"nestable.sol\":30858:30883  _afterNestedTokenTransfer */\n      tag_327\n        /* \"nestable.sol\":30858:30914  _afterNestedTokenTransfer(address(0), to, 0, 0, tokenId) */\n      jump\t// in\n    tag_499:\n        /* \"nestable.sol\":30589:30921  function _mint(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":45177:46121  function _checkOnERC721Received(... */\n    tag_390:\n        /* \"nestable.sol\":45326:45330  bool */\n      0x00\n        /* \"nestable.sol\":45346:45361  to.isContract() */\n      tag_501\n        /* \"nestable.sol\":45346:45348  to */\n      dup5\n        /* \"nestable.sol\":45346:45359  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n        /* \"nestable.sol\":45346:45361  to.isContract() */\n      jump\t// in\n    tag_501:\n        /* \"nestable.sol\":45342:46115  if (to.isContract()) {... */\n      iszero\n      tag_502\n      jumpi\n        /* \"nestable.sol\":45413:45415  to */\n      dup4\n        /* \"nestable.sol\":45397:45433  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"nestable.sol\":45455:45467  _msgSender() */\n      tag_503\n        /* \"nestable.sol\":45455:45465  _msgSender */\n      tag_157\n        /* \"nestable.sol\":45455:45467  _msgSender() */\n      jump\t// in\n    tag_503:\n        /* \"nestable.sol\":45489:45493  from */\n      dup8\n        /* \"nestable.sol\":45515:45522  tokenId */\n      dup7\n        /* \"nestable.sol\":45544:45548  data */\n      dup7\n        /* \"nestable.sol\":45397:45566  IERC721Receiver(to).onERC721Received(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_504\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_504:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_505\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_506\n      swap2\n      swap1\n      tag_507\n      jump\t// in\n    tag_506:\n      0x01\n    tag_505:\n        /* \"nestable.sol\":45377:46063  try... */\n      tag_508\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_513\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_512)\n    tag_513:\n      0x60\n      swap2\n      pop\n    tag_512:\n      pop\n        /* \"nestable.sol\":45762:45763  0 */\n      0x00\n        /* \"nestable.sol\":45745:45751  reason */\n      dup2\n        /* \"nestable.sol\":45745:45758  reason.length */\n      mload\n        /* \"nestable.sol\":45745:45763  reason.length == 0 */\n      sub\n        /* \"nestable.sol\":45741:46049  if (reason.length == 0) {... */\n      tag_514\n      jumpi\n        /* \"nestable.sol\":45794:45834  ERC721TransferToNonReceiverImplementer() */\n      mload(0x40)\n      0xbcb5663700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":45741:46049  if (reason.length == 0) {... */\n    tag_514:\n        /* \"nestable.sol\":46001:46007  reason */\n      dup1\n        /* \"nestable.sol\":45995:46008  mload(reason) */\n      mload\n        /* \"nestable.sol\":45986:45992  reason */\n      dup2\n        /* \"nestable.sol\":45982:45984  32 */\n      0x20\n        /* \"nestable.sol\":45978:45993  add(32, reason) */\n      add\n        /* \"nestable.sol\":45971:46009  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"nestable.sol\":45377:46063  try... */\n    tag_508:\n        /* \"nestable.sol\":45638:45679  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"nestable.sol\":45628:45679  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nestable.sol\":45628:45634  retval */\n      dup2\n        /* \"nestable.sol\":45628:45679  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nestable.sol\":45621:45679  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_500)\n        /* \"nestable.sol\":45342:46115  if (to.isContract()) {... */\n    tag_502:\n        /* \"nestable.sol\":46100:46104  true */\n      0x01\n        /* \"nestable.sol\":46093:46104  return true */\n      swap1\n      pop\n        /* \"nestable.sol\":45177:46121  function _checkOnERC721Received(... */\n    tag_500:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":56819:57110  function _checkExpectedChild(... */\n    tag_403:\n        /* \"nestable.sol\":57002:57007  child */\n      dup3\n        /* \"nestable.sol\":57002:57023  child.contractAddress */\n      0x20\n      add\n      mload\n        /* \"nestable.sol\":56983:57023  expectedAddress != child.contractAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nestable.sol\":56983:56998  expectedAddress */\n      dup3\n        /* \"nestable.sol\":56983:57023  expectedAddress != child.contractAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nestable.sol\":56983:57066  expectedAddress != child.contractAddress ||... */\n      dup1\n      tag_519\n      jumpi\n      pop\n        /* \"nestable.sol\":57053:57058  child */\n      dup3\n        /* \"nestable.sol\":57053:57066  child.tokenId */\n      0x00\n      add\n      mload\n        /* \"nestable.sol\":57039:57049  expectedId */\n      dup2\n        /* \"nestable.sol\":57039:57066  expectedId != child.tokenId */\n      eq\n      iszero\n        /* \"nestable.sol\":56983:57066  expectedAddress != child.contractAddress ||... */\n    tag_519:\n        /* \"nestable.sol\":56966:57103  if (... */\n      iszero\n      tag_520\n      jumpi\n        /* \"nestable.sol\":57084:57103  UnexpectedChildId() */\n      mload(0x40)\n      0x37d6ce9000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nestable.sol\":56966:57103  if (... */\n    tag_520:\n        /* \"nestable.sol\":56819:57110  function _checkExpectedChild(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":69250:69437  function _beforeTransferChild(... */\n    tag_405:\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":72069:72220  function _removeChildByIndex(Child[] storage array, uint256 index) private {... */\n    tag_408:\n        /* \"nestable.sol\":72169:72174  array */\n      dup2\n        /* \"nestable.sol\":72190:72191  1 */\n      0x01\n        /* \"nestable.sol\":72175:72180  array */\n      dup4\n        /* \"nestable.sol\":72175:72187  array.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nestable.sol\":72175:72191  array.length - 1 */\n      tag_523\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_523:\n        /* \"nestable.sol\":72169:72192  array[array.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_524\n      jumpi\n      tag_525\n      tag_176\n      jump\t// in\n    tag_525:\n    tag_524:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nestable.sol\":72154:72159  array */\n      dup3\n        /* \"nestable.sol\":72160:72165  index */\n      dup3\n        /* \"nestable.sol\":72154:72166  array[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_527\n      jumpi\n      tag_528\n      tag_176\n      jump\t// in\n    tag_528:\n    tag_527:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nestable.sol\":72154:72192  array[index] = array[array.length - 1] */\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      0x00\n      add\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"nestable.sol\":72202:72207  array */\n      dup2\n        /* \"nestable.sol\":72202:72213  array.pop() */\n      dup1\n      sload\n      dup1\n      tag_530\n      jumpi\n      tag_531\n      tag_532\n      jump\t// in\n    tag_531:\n    tag_530:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n      swap1\n      sstore\n        /* \"nestable.sol\":72069:72220  function _removeChildByIndex(Child[] storage array, uint256 index) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":70536:70722  function _afterTransferChild(... */\n    tag_427:\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":66897:67059  function _beforeAcceptChild(... */\n    tag_435:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nestable.sol\":67984:68145  function _afterAcceptChild(... */\n    tag_440:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_170:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_341:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      0x02\n      mul\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_538\n      swap2\n      swap1\n      tag_539\n      jump\t// in\n    tag_538:\n      pop\n      jump\t// out\n    tag_539:\n    tag_540:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_541\n      jumpi\n      0x00\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      0x02\n      add\n      jump(tag_540)\n    tag_541:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_542:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_543:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_544:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_545:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_546:\n        /* \"#utility.yul\":561:584   */\n      tag_601\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_545\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_602:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_547:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_604\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_546\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_34:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_607\n      tag_543\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":833:952   */\n    tag_606:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_608\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_547\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_548:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_549:\n        /* \"#utility.yul\":1268:1289   */\n      tag_611\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_548\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_37:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_613\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_549\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_550:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_551:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_616\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_550\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_552:\n        /* \"#utility.yul\":1825:1849   */\n      tag_618\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_551\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_619\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_619:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_553:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_621\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_552\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_554:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_555:\n        /* \"#utility.yul\":2181:2205   */\n      tag_624\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_554\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_625:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_556:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_627\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_555\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2498   */\n    tag_557:\n        /* \"#utility.yul\":2490:2491   */\n      0x00\n        /* \"#utility.yul\":2487:2488   */\n      dup1\n        /* \"#utility.yul\":2480:2492   */\n      revert\n        /* \"#utility.yul\":2504:2621   */\n    tag_558:\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2610:2611   */\n      dup1\n        /* \"#utility.yul\":2603:2615   */\n      revert\n        /* \"#utility.yul\":2627:2729   */\n    tag_559:\n        /* \"#utility.yul\":2668:2674   */\n      0x00\n        /* \"#utility.yul\":2719:2721   */\n      0x1f\n        /* \"#utility.yul\":2715:2722   */\n      not\n        /* \"#utility.yul\":2710:2712   */\n      0x1f\n        /* \"#utility.yul\":2703:2708   */\n      dup4\n        /* \"#utility.yul\":2699:2713   */\n      add\n        /* \"#utility.yul\":2695:2723   */\n      and\n        /* \"#utility.yul\":2685:2723   */\n      swap1\n      pop\n        /* \"#utility.yul\":2627:2729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2915   */\n    tag_560:\n        /* \"#utility.yul\":2783:2860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2773:2861   */\n      mstore\n        /* \"#utility.yul\":2880:2884   */\n      0x41\n        /* \"#utility.yul\":2877:2878   */\n      0x04\n        /* \"#utility.yul\":2870:2885   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n        /* \"#utility.yul\":2921:3202   */\n    tag_561:\n        /* \"#utility.yul\":3004:3031   */\n      tag_633\n        /* \"#utility.yul\":3026:3030   */\n      dup3\n        /* \"#utility.yul\":3004:3031   */\n      tag_559\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":2996:3002   */\n      dup2\n        /* \"#utility.yul\":2992:3032   */\n      add\n        /* \"#utility.yul\":3134:3140   */\n      dup2\n        /* \"#utility.yul\":3122:3132   */\n      dup2\n        /* \"#utility.yul\":3119:3141   */\n      lt\n        /* \"#utility.yul\":3098:3116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3086:3096   */\n      dup3\n        /* \"#utility.yul\":3083:3117   */\n      gt\n        /* \"#utility.yul\":3080:3142   */\n      or\n        /* \"#utility.yul\":3077:3165   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":3145:3163   */\n      tag_635\n      tag_560\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":3077:3165   */\n    tag_634:\n        /* \"#utility.yul\":3185:3195   */\n      dup1\n        /* \"#utility.yul\":3181:3183   */\n      0x40\n        /* \"#utility.yul\":3174:3196   */\n      mstore\n        /* \"#utility.yul\":2964:3202   */\n      pop\n        /* \"#utility.yul\":2921:3202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3208:3337   */\n    tag_562:\n        /* \"#utility.yul\":3242:3248   */\n      0x00\n        /* \"#utility.yul\":3269:3289   */\n      tag_637\n      tag_542\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":3259:3289   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3331   */\n      tag_638\n        /* \"#utility.yul\":3326:3330   */\n      dup3\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3298:3331   */\n      tag_561\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":3208:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3650   */\n    tag_563:\n        /* \"#utility.yul\":3404:3408   */\n      0x00\n        /* \"#utility.yul\":3494:3512   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3486:3492   */\n      dup3\n        /* \"#utility.yul\":3483:3513   */\n      gt\n        /* \"#utility.yul\":3480:3536   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":3516:3534   */\n      tag_641\n      tag_560\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":3480:3536   */\n    tag_640:\n        /* \"#utility.yul\":3554:3583   */\n      tag_642\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3554:3583   */\n      tag_559\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":3546:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3638:3642   */\n      0x20\n        /* \"#utility.yul\":3632:3636   */\n      dup2\n        /* \"#utility.yul\":3628:3643   */\n      add\n        /* \"#utility.yul\":3620:3643   */\n      swap1\n      pop\n        /* \"#utility.yul\":3343:3650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:3802   */\n    tag_564:\n        /* \"#utility.yul\":3753:3759   */\n      dup3\n        /* \"#utility.yul\":3748:3751   */\n      dup2\n        /* \"#utility.yul\":3743:3746   */\n      dup4\n        /* \"#utility.yul\":3730:3760   */\n      calldatacopy\n        /* \"#utility.yul\":3794:3795   */\n      0x00\n        /* \"#utility.yul\":3785:3791   */\n      dup4\n        /* \"#utility.yul\":3780:3783   */\n      dup4\n        /* \"#utility.yul\":3776:3792   */\n      add\n        /* \"#utility.yul\":3769:3796   */\n      mstore\n        /* \"#utility.yul\":3656:3802   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4231   */\n    tag_565:\n        /* \"#utility.yul\":3885:3890   */\n      0x00\n        /* \"#utility.yul\":3910:3975   */\n      tag_645\n        /* \"#utility.yul\":3926:3974   */\n      tag_646\n        /* \"#utility.yul\":3967:3973   */\n      dup5\n        /* \"#utility.yul\":3926:3974   */\n      tag_563\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":3910:3975   */\n      tag_562\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":3901:3975   */\n      swap1\n      pop\n        /* \"#utility.yul\":3998:4004   */\n      dup3\n        /* \"#utility.yul\":3991:3996   */\n      dup2\n        /* \"#utility.yul\":3984:4005   */\n      mstore\n        /* \"#utility.yul\":4036:4040   */\n      0x20\n        /* \"#utility.yul\":4029:4034   */\n      dup2\n        /* \"#utility.yul\":4025:4041   */\n      add\n        /* \"#utility.yul\":4074:4077   */\n      dup5\n        /* \"#utility.yul\":4065:4071   */\n      dup5\n        /* \"#utility.yul\":4060:4063   */\n      dup5\n        /* \"#utility.yul\":4056:4072   */\n      add\n        /* \"#utility.yul\":4053:4078   */\n      gt\n        /* \"#utility.yul\":4050:4162   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":4081:4160   */\n      tag_648\n      tag_558\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":4050:4162   */\n    tag_647:\n        /* \"#utility.yul\":4171:4225   */\n      tag_649\n        /* \"#utility.yul\":4218:4224   */\n      dup5\n        /* \"#utility.yul\":4213:4216   */\n      dup3\n        /* \"#utility.yul\":4208:4211   */\n      dup6\n        /* \"#utility.yul\":4171:4225   */\n      tag_564\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":3891:4231   */\n      pop\n        /* \"#utility.yul\":3808:4231   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:4588   */\n    tag_566:\n        /* \"#utility.yul\":4305:4310   */\n      0x00\n        /* \"#utility.yul\":4354:4357   */\n      dup3\n        /* \"#utility.yul\":4347:4351   */\n      0x1f\n        /* \"#utility.yul\":4339:4345   */\n      dup4\n        /* \"#utility.yul\":4335:4352   */\n      add\n        /* \"#utility.yul\":4331:4358   */\n      slt\n        /* \"#utility.yul\":4321:4443   */\n      tag_651\n      jumpi\n        /* \"#utility.yul\":4362:4441   */\n      tag_652\n      tag_557\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":4321:4443   */\n    tag_651:\n        /* \"#utility.yul\":4479:4485   */\n      dup2\n        /* \"#utility.yul\":4466:4486   */\n      calldataload\n        /* \"#utility.yul\":4504:4582   */\n      tag_653\n        /* \"#utility.yul\":4578:4581   */\n      dup5\n        /* \"#utility.yul\":4570:4576   */\n      dup3\n        /* \"#utility.yul\":4563:4567   */\n      0x20\n        /* \"#utility.yul\":4555:4561   */\n      dup7\n        /* \"#utility.yul\":4551:4568   */\n      add\n        /* \"#utility.yul\":4504:4582   */\n      tag_565\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":4495:4582   */\n      swap2\n      pop\n        /* \"#utility.yul\":4311:4588   */\n      pop\n        /* \"#utility.yul\":4250:4588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4594:5683   */\n    tag_40:\n        /* \"#utility.yul\":4698:4704   */\n      0x00\n        /* \"#utility.yul\":4706:4712   */\n      dup1\n        /* \"#utility.yul\":4714:4720   */\n      0x00\n        /* \"#utility.yul\":4722:4728   */\n      dup1\n        /* \"#utility.yul\":4730:4736   */\n      0x00\n        /* \"#utility.yul\":4779:4782   */\n      0xa0\n        /* \"#utility.yul\":4767:4776   */\n      dup7\n        /* \"#utility.yul\":4758:4765   */\n      dup9\n        /* \"#utility.yul\":4754:4777   */\n      sub\n        /* \"#utility.yul\":4750:4783   */\n      slt\n        /* \"#utility.yul\":4747:4867   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":4786:4865   */\n      tag_656\n      tag_543\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":4747:4867   */\n    tag_655:\n        /* \"#utility.yul\":4906:4907   */\n      0x00\n        /* \"#utility.yul\":4931:4984   */\n      tag_657\n        /* \"#utility.yul\":4976:4983   */\n      dup9\n        /* \"#utility.yul\":4967:4973   */\n      dup3\n        /* \"#utility.yul\":4956:4965   */\n      dup10\n        /* \"#utility.yul\":4952:4974   */\n      add\n        /* \"#utility.yul\":4931:4984   */\n      tag_553\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":4921:4984   */\n      swap6\n      pop\n        /* \"#utility.yul\":4877:4994   */\n      pop\n        /* \"#utility.yul\":5033:5035   */\n      0x20\n        /* \"#utility.yul\":5059:5112   */\n      tag_658\n        /* \"#utility.yul\":5104:5111   */\n      dup9\n        /* \"#utility.yul\":5095:5101   */\n      dup3\n        /* \"#utility.yul\":5084:5093   */\n      dup10\n        /* \"#utility.yul\":5080:5102   */\n      add\n        /* \"#utility.yul\":5059:5112   */\n      tag_553\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":5049:5112   */\n      swap5\n      pop\n        /* \"#utility.yul\":5004:5122   */\n      pop\n        /* \"#utility.yul\":5161:5163   */\n      0x40\n        /* \"#utility.yul\":5187:5240   */\n      tag_659\n        /* \"#utility.yul\":5232:5239   */\n      dup9\n        /* \"#utility.yul\":5223:5229   */\n      dup3\n        /* \"#utility.yul\":5212:5221   */\n      dup10\n        /* \"#utility.yul\":5208:5230   */\n      add\n        /* \"#utility.yul\":5187:5240   */\n      tag_556\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":5177:5240   */\n      swap4\n      pop\n        /* \"#utility.yul\":5132:5250   */\n      pop\n        /* \"#utility.yul\":5289:5291   */\n      0x60\n        /* \"#utility.yul\":5315:5368   */\n      tag_660\n        /* \"#utility.yul\":5360:5367   */\n      dup9\n        /* \"#utility.yul\":5351:5357   */\n      dup3\n        /* \"#utility.yul\":5340:5349   */\n      dup10\n        /* \"#utility.yul\":5336:5358   */\n      add\n        /* \"#utility.yul\":5315:5368   */\n      tag_556\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":5305:5368   */\n      swap3\n      pop\n        /* \"#utility.yul\":5260:5378   */\n      pop\n        /* \"#utility.yul\":5445:5448   */\n      0x80\n        /* \"#utility.yul\":5434:5443   */\n      dup7\n        /* \"#utility.yul\":5430:5449   */\n      add\n        /* \"#utility.yul\":5417:5450   */\n      calldataload\n        /* \"#utility.yul\":5477:5495   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5469:5475   */\n      dup2\n        /* \"#utility.yul\":5466:5496   */\n      gt\n        /* \"#utility.yul\":5463:5580   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":5499:5578   */\n      tag_662\n      tag_544\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":5463:5580   */\n    tag_661:\n        /* \"#utility.yul\":5604:5666   */\n      tag_663\n        /* \"#utility.yul\":5658:5665   */\n      dup9\n        /* \"#utility.yul\":5649:5655   */\n      dup3\n        /* \"#utility.yul\":5638:5647   */\n      dup10\n        /* \"#utility.yul\":5634:5656   */\n      add\n        /* \"#utility.yul\":5604:5666   */\n      tag_566\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":5594:5666   */\n      swap2\n      pop\n        /* \"#utility.yul\":5388:5676   */\n      pop\n        /* \"#utility.yul\":4594:5683   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5689:6018   */\n    tag_44:\n        /* \"#utility.yul\":5748:5754   */\n      0x00\n        /* \"#utility.yul\":5797:5799   */\n      0x20\n        /* \"#utility.yul\":5785:5794   */\n      dup3\n        /* \"#utility.yul\":5776:5783   */\n      dup5\n        /* \"#utility.yul\":5772:5795   */\n      sub\n        /* \"#utility.yul\":5768:5800   */\n      slt\n        /* \"#utility.yul\":5765:5884   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":5803:5882   */\n      tag_666\n      tag_543\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":5765:5884   */\n    tag_665:\n        /* \"#utility.yul\":5923:5924   */\n      0x00\n        /* \"#utility.yul\":5948:6001   */\n      tag_667\n        /* \"#utility.yul\":5993:6000   */\n      dup5\n        /* \"#utility.yul\":5984:5990   */\n      dup3\n        /* \"#utility.yul\":5973:5982   */\n      dup6\n        /* \"#utility.yul\":5969:5991   */\n      add\n        /* \"#utility.yul\":5948:6001   */\n      tag_556\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":5938:6001   */\n      swap2\n      pop\n        /* \"#utility.yul\":5894:6011   */\n      pop\n        /* \"#utility.yul\":5689:6018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6024:6142   */\n    tag_567:\n        /* \"#utility.yul\":6111:6135   */\n      tag_669\n        /* \"#utility.yul\":6129:6134   */\n      dup2\n        /* \"#utility.yul\":6111:6135   */\n      tag_551\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":6106:6109   */\n      dup3\n        /* \"#utility.yul\":6099:6136   */\n      mstore\n        /* \"#utility.yul\":6024:6142   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6148:6370   */\n    tag_47:\n        /* \"#utility.yul\":6241:6245   */\n      0x00\n        /* \"#utility.yul\":6279:6281   */\n      0x20\n        /* \"#utility.yul\":6268:6277   */\n      dup3\n        /* \"#utility.yul\":6264:6282   */\n      add\n        /* \"#utility.yul\":6256:6282   */\n      swap1\n      pop\n        /* \"#utility.yul\":6292:6363   */\n      tag_671\n        /* \"#utility.yul\":6360:6361   */\n      0x00\n        /* \"#utility.yul\":6349:6358   */\n      dup4\n        /* \"#utility.yul\":6345:6362   */\n      add\n        /* \"#utility.yul\":6336:6342   */\n      dup5\n        /* \"#utility.yul\":6292:6363   */\n      tag_567\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":6148:6370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6376:6850   */\n    tag_50:\n        /* \"#utility.yul\":6444:6450   */\n      0x00\n        /* \"#utility.yul\":6452:6458   */\n      dup1\n        /* \"#utility.yul\":6501:6503   */\n      0x40\n        /* \"#utility.yul\":6489:6498   */\n      dup4\n        /* \"#utility.yul\":6480:6487   */\n      dup6\n        /* \"#utility.yul\":6476:6499   */\n      sub\n        /* \"#utility.yul\":6472:6504   */\n      slt\n        /* \"#utility.yul\":6469:6588   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":6507:6586   */\n      tag_674\n      tag_543\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":6469:6588   */\n    tag_673:\n        /* \"#utility.yul\":6627:6628   */\n      0x00\n        /* \"#utility.yul\":6652:6705   */\n      tag_675\n        /* \"#utility.yul\":6697:6704   */\n      dup6\n        /* \"#utility.yul\":6688:6694   */\n      dup3\n        /* \"#utility.yul\":6677:6686   */\n      dup7\n        /* \"#utility.yul\":6673:6695   */\n      add\n        /* \"#utility.yul\":6652:6705   */\n      tag_553\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":6642:6705   */\n      swap3\n      pop\n        /* \"#utility.yul\":6598:6715   */\n      pop\n        /* \"#utility.yul\":6754:6756   */\n      0x20\n        /* \"#utility.yul\":6780:6833   */\n      tag_676\n        /* \"#utility.yul\":6825:6832   */\n      dup6\n        /* \"#utility.yul\":6816:6822   */\n      dup3\n        /* \"#utility.yul\":6805:6814   */\n      dup7\n        /* \"#utility.yul\":6801:6823   */\n      add\n        /* \"#utility.yul\":6780:6833   */\n      tag_556\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":6770:6833   */\n      swap2\n      pop\n        /* \"#utility.yul\":6725:6843   */\n      pop\n        /* \"#utility.yul\":6376:6850   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6856:7475   */\n    tag_54:\n        /* \"#utility.yul\":6933:6939   */\n      0x00\n        /* \"#utility.yul\":6941:6947   */\n      dup1\n        /* \"#utility.yul\":6949:6955   */\n      0x00\n        /* \"#utility.yul\":6998:7000   */\n      0x60\n        /* \"#utility.yul\":6986:6995   */\n      dup5\n        /* \"#utility.yul\":6977:6984   */\n      dup7\n        /* \"#utility.yul\":6973:6996   */\n      sub\n        /* \"#utility.yul\":6969:7001   */\n      slt\n        /* \"#utility.yul\":6966:7085   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":7004:7083   */\n      tag_679\n      tag_543\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":6966:7085   */\n    tag_678:\n        /* \"#utility.yul\":7124:7125   */\n      0x00\n        /* \"#utility.yul\":7149:7202   */\n      tag_680\n        /* \"#utility.yul\":7194:7201   */\n      dup7\n        /* \"#utility.yul\":7185:7191   */\n      dup3\n        /* \"#utility.yul\":7174:7183   */\n      dup8\n        /* \"#utility.yul\":7170:7192   */\n      add\n        /* \"#utility.yul\":7149:7202   */\n      tag_553\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":7139:7202   */\n      swap4\n      pop\n        /* \"#utility.yul\":7095:7212   */\n      pop\n        /* \"#utility.yul\":7251:7253   */\n      0x20\n        /* \"#utility.yul\":7277:7330   */\n      tag_681\n        /* \"#utility.yul\":7322:7329   */\n      dup7\n        /* \"#utility.yul\":7313:7319   */\n      dup3\n        /* \"#utility.yul\":7302:7311   */\n      dup8\n        /* \"#utility.yul\":7298:7320   */\n      add\n        /* \"#utility.yul\":7277:7330   */\n      tag_553\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":7267:7330   */\n      swap3\n      pop\n        /* \"#utility.yul\":7222:7340   */\n      pop\n        /* \"#utility.yul\":7379:7381   */\n      0x40\n        /* \"#utility.yul\":7405:7458   */\n      tag_682\n        /* \"#utility.yul\":7450:7457   */\n      dup7\n        /* \"#utility.yul\":7441:7447   */\n      dup3\n        /* \"#utility.yul\":7430:7439   */\n      dup8\n        /* \"#utility.yul\":7426:7448   */\n      add\n        /* \"#utility.yul\":7405:7458   */\n      tag_556\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":7395:7458   */\n      swap2\n      pop\n        /* \"#utility.yul\":7350:7468   */\n      pop\n        /* \"#utility.yul\":6856:7475   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7481:7955   */\n    tag_58:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7606:7608   */\n      0x40\n        /* \"#utility.yul\":7594:7603   */\n      dup4\n        /* \"#utility.yul\":7585:7592   */\n      dup6\n        /* \"#utility.yul\":7581:7604   */\n      sub\n        /* \"#utility.yul\":7577:7609   */\n      slt\n        /* \"#utility.yul\":7574:7693   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":7612:7691   */\n      tag_685\n      tag_543\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":7574:7693   */\n    tag_684:\n        /* \"#utility.yul\":7732:7733   */\n      0x00\n        /* \"#utility.yul\":7757:7810   */\n      tag_686\n        /* \"#utility.yul\":7802:7809   */\n      dup6\n        /* \"#utility.yul\":7793:7799   */\n      dup3\n        /* \"#utility.yul\":7782:7791   */\n      dup7\n        /* \"#utility.yul\":7778:7800   */\n      add\n        /* \"#utility.yul\":7757:7810   */\n      tag_556\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":7747:7810   */\n      swap3\n      pop\n        /* \"#utility.yul\":7703:7820   */\n      pop\n        /* \"#utility.yul\":7859:7861   */\n      0x20\n        /* \"#utility.yul\":7885:7938   */\n      tag_687\n        /* \"#utility.yul\":7930:7937   */\n      dup6\n        /* \"#utility.yul\":7921:7927   */\n      dup3\n        /* \"#utility.yul\":7910:7919   */\n      dup7\n        /* \"#utility.yul\":7906:7928   */\n      add\n        /* \"#utility.yul\":7885:7938   */\n      tag_556\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":7875:7938   */\n      swap2\n      pop\n        /* \"#utility.yul\":7830:7948   */\n      pop\n        /* \"#utility.yul\":7481:7955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8069   */\n    tag_568:\n        /* \"#utility.yul\":8038:8062   */\n      tag_689\n        /* \"#utility.yul\":8056:8061   */\n      dup2\n        /* \"#utility.yul\":8038:8062   */\n      tag_554\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":8033:8036   */\n      dup3\n        /* \"#utility.yul\":8026:8063   */\n      mstore\n        /* \"#utility.yul\":7961:8069   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8075:8183   */\n    tag_569:\n        /* \"#utility.yul\":8152:8176   */\n      tag_691\n        /* \"#utility.yul\":8170:8175   */\n      dup2\n        /* \"#utility.yul\":8152:8176   */\n      tag_551\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8140:8177   */\n      mstore\n        /* \"#utility.yul\":8075:8183   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8243:8758   */\n    tag_570:\n        /* \"#utility.yul\":8384:8388   */\n      0x40\n        /* \"#utility.yul\":8379:8382   */\n      dup3\n        /* \"#utility.yul\":8375:8389   */\n      add\n        /* \"#utility.yul\":8474:8478   */\n      0x00\n        /* \"#utility.yul\":8467:8472   */\n      dup3\n        /* \"#utility.yul\":8463:8479   */\n      add\n        /* \"#utility.yul\":8457:8480   */\n      mload\n        /* \"#utility.yul\":8493:8556   */\n      tag_693\n        /* \"#utility.yul\":8550:8554   */\n      0x00\n        /* \"#utility.yul\":8545:8548   */\n      dup6\n        /* \"#utility.yul\":8541:8555   */\n      add\n        /* \"#utility.yul\":8527:8539   */\n      dup3\n        /* \"#utility.yul\":8493:8556   */\n      tag_568\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":8399:8566   */\n      pop\n        /* \"#utility.yul\":8659:8663   */\n      0x20\n        /* \"#utility.yul\":8652:8657   */\n      dup3\n        /* \"#utility.yul\":8648:8664   */\n      add\n        /* \"#utility.yul\":8642:8665   */\n      mload\n        /* \"#utility.yul\":8678:8741   */\n      tag_694\n        /* \"#utility.yul\":8735:8739   */\n      0x20\n        /* \"#utility.yul\":8730:8733   */\n      dup6\n        /* \"#utility.yul\":8726:8740   */\n      add\n        /* \"#utility.yul\":8712:8724   */\n      dup3\n        /* \"#utility.yul\":8678:8741   */\n      tag_569\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":8576:8751   */\n      pop\n        /* \"#utility.yul\":8353:8758   */\n      pop\n        /* \"#utility.yul\":8243:8758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8764:9074   */\n    tag_61:\n        /* \"#utility.yul\":8901:8905   */\n      0x00\n        /* \"#utility.yul\":8939:8941   */\n      0x40\n        /* \"#utility.yul\":8928:8937   */\n      dup3\n        /* \"#utility.yul\":8924:8942   */\n      add\n        /* \"#utility.yul\":8916:8942   */\n      swap1\n      pop\n        /* \"#utility.yul\":8952:9067   */\n      tag_696\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9066   */\n      add\n        /* \"#utility.yul\":9040:9046   */\n      dup5\n        /* \"#utility.yul\":8952:9067   */\n      tag_570\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":8764:9074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9216   */\n    tag_571:\n        /* \"#utility.yul\":9169:9175   */\n      0x00\n        /* \"#utility.yul\":9203:9208   */\n      dup2\n        /* \"#utility.yul\":9197:9209   */\n      mload\n        /* \"#utility.yul\":9187:9209   */\n      swap1\n      pop\n        /* \"#utility.yul\":9080:9216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9222:9428   */\n    tag_572:\n        /* \"#utility.yul\":9343:9354   */\n      0x00\n        /* \"#utility.yul\":9377:9383   */\n      dup3\n        /* \"#utility.yul\":9372:9375   */\n      dup3\n        /* \"#utility.yul\":9365:9384   */\n      mstore\n        /* \"#utility.yul\":9417:9421   */\n      0x20\n        /* \"#utility.yul\":9412:9415   */\n      dup3\n        /* \"#utility.yul\":9408:9422   */\n      add\n        /* \"#utility.yul\":9393:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9222:9428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9434:9588   */\n    tag_573:\n        /* \"#utility.yul\":9523:9527   */\n      0x00\n        /* \"#utility.yul\":9546:9549   */\n      dup2\n        /* \"#utility.yul\":9538:9549   */\n      swap1\n      pop\n        /* \"#utility.yul\":9576:9580   */\n      0x20\n        /* \"#utility.yul\":9571:9574   */\n      dup3\n        /* \"#utility.yul\":9567:9581   */\n      add\n        /* \"#utility.yul\":9559:9581   */\n      swap1\n      pop\n        /* \"#utility.yul\":9434:9588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9648:10153   */\n    tag_574:\n        /* \"#utility.yul\":9779:9783   */\n      0x40\n        /* \"#utility.yul\":9774:9777   */\n      dup3\n        /* \"#utility.yul\":9770:9784   */\n      add\n        /* \"#utility.yul\":9869:9873   */\n      0x00\n        /* \"#utility.yul\":9862:9867   */\n      dup3\n        /* \"#utility.yul\":9858:9874   */\n      add\n        /* \"#utility.yul\":9852:9875   */\n      mload\n        /* \"#utility.yul\":9888:9951   */\n      tag_701\n        /* \"#utility.yul\":9945:9949   */\n      0x00\n        /* \"#utility.yul\":9940:9943   */\n      dup6\n        /* \"#utility.yul\":9936:9950   */\n      add\n        /* \"#utility.yul\":9922:9934   */\n      dup3\n        /* \"#utility.yul\":9888:9951   */\n      tag_568\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":9794:9961   */\n      pop\n        /* \"#utility.yul\":10054:10058   */\n      0x20\n        /* \"#utility.yul\":10047:10052   */\n      dup3\n        /* \"#utility.yul\":10043:10059   */\n      add\n        /* \"#utility.yul\":10037:10060   */\n      mload\n        /* \"#utility.yul\":10073:10136   */\n      tag_702\n        /* \"#utility.yul\":10130:10134   */\n      0x20\n        /* \"#utility.yul\":10125:10128   */\n      dup6\n        /* \"#utility.yul\":10121:10135   */\n      add\n        /* \"#utility.yul\":10107:10119   */\n      dup3\n        /* \"#utility.yul\":10073:10136   */\n      tag_569\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":9971:10146   */\n      pop\n        /* \"#utility.yul\":9748:10153   */\n      pop\n        /* \"#utility.yul\":9648:10153   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10159:10426   */\n    tag_575:\n        /* \"#utility.yul\":10272:10282   */\n      0x00\n        /* \"#utility.yul\":10293:10383   */\n      tag_704\n        /* \"#utility.yul\":10379:10382   */\n      dup4\n        /* \"#utility.yul\":10371:10377   */\n      dup4\n        /* \"#utility.yul\":10293:10383   */\n      tag_574\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":10415:10419   */\n      0x40\n        /* \"#utility.yul\":10410:10413   */\n      dup4\n        /* \"#utility.yul\":10406:10420   */\n      add\n        /* \"#utility.yul\":10392:10420   */\n      swap1\n      pop\n        /* \"#utility.yul\":10159:10426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10432:10567   */\n    tag_576:\n        /* \"#utility.yul\":10524:10528   */\n      0x00\n        /* \"#utility.yul\":10556:10560   */\n      0x20\n        /* \"#utility.yul\":10551:10554   */\n      dup3\n        /* \"#utility.yul\":10547:10561   */\n      add\n        /* \"#utility.yul\":10539:10561   */\n      swap1\n      pop\n        /* \"#utility.yul\":10432:10567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10631:11539   */\n    tag_577:\n        /* \"#utility.yul\":10794:10797   */\n      0x00\n        /* \"#utility.yul\":10823:10899   */\n      tag_707\n        /* \"#utility.yul\":10893:10898   */\n      dup3\n        /* \"#utility.yul\":10823:10899   */\n      tag_571\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":10915:11023   */\n      tag_708\n        /* \"#utility.yul\":11016:11022   */\n      dup2\n        /* \"#utility.yul\":11011:11014   */\n      dup6\n        /* \"#utility.yul\":10915:11023   */\n      tag_572\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":10908:11023   */\n      swap4\n      pop\n        /* \"#utility.yul\":11047:11125   */\n      tag_709\n        /* \"#utility.yul\":11119:11124   */\n      dup4\n        /* \"#utility.yul\":11047:11125   */\n      tag_573\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":11148:11155   */\n      dup1\n        /* \"#utility.yul\":11179:11180   */\n      0x00\n        /* \"#utility.yul\":11164:11514   */\n    tag_710:\n        /* \"#utility.yul\":11189:11195   */\n      dup4\n        /* \"#utility.yul\":11186:11187   */\n      dup2\n        /* \"#utility.yul\":11183:11196   */\n      lt\n        /* \"#utility.yul\":11164:11514   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":11265:11271   */\n      dup2\n        /* \"#utility.yul\":11259:11272   */\n      mload\n        /* \"#utility.yul\":11292:11399   */\n      tag_713\n        /* \"#utility.yul\":11395:11398   */\n      dup9\n        /* \"#utility.yul\":11380:11393   */\n      dup3\n        /* \"#utility.yul\":11292:11399   */\n      tag_575\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":11285:11399   */\n      swap8\n      pop\n        /* \"#utility.yul\":11422:11504   */\n      tag_714\n        /* \"#utility.yul\":11497:11503   */\n      dup4\n        /* \"#utility.yul\":11422:11504   */\n      tag_576\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":11412:11504   */\n      swap3\n      pop\n        /* \"#utility.yul\":11224:11514   */\n      pop\n        /* \"#utility.yul\":11211:11212   */\n      0x01\n        /* \"#utility.yul\":11208:11209   */\n      dup2\n        /* \"#utility.yul\":11204:11213   */\n      add\n        /* \"#utility.yul\":11199:11213   */\n      swap1\n      pop\n        /* \"#utility.yul\":11164:11514   */\n      jump(tag_710)\n    tag_712:\n        /* \"#utility.yul\":11168:11182   */\n      pop\n        /* \"#utility.yul\":11530:11533   */\n      dup6\n        /* \"#utility.yul\":11523:11533   */\n      swap4\n      pop\n        /* \"#utility.yul\":10799:11539   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10631:11539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11545:12006   */\n    tag_76:\n        /* \"#utility.yul\":11732:11736   */\n      0x00\n        /* \"#utility.yul\":11770:11772   */\n      0x20\n        /* \"#utility.yul\":11759:11768   */\n      dup3\n        /* \"#utility.yul\":11755:11773   */\n      add\n        /* \"#utility.yul\":11747:11773   */\n      swap1\n      pop\n        /* \"#utility.yul\":11819:11828   */\n      dup2\n        /* \"#utility.yul\":11813:11817   */\n      dup2\n        /* \"#utility.yul\":11809:11829   */\n      sub\n        /* \"#utility.yul\":11805:11806   */\n      0x00\n        /* \"#utility.yul\":11794:11803   */\n      dup4\n        /* \"#utility.yul\":11790:11807   */\n      add\n        /* \"#utility.yul\":11783:11830   */\n      mstore\n        /* \"#utility.yul\":11847:11999   */\n      tag_716\n        /* \"#utility.yul\":11994:11998   */\n      dup2\n        /* \"#utility.yul\":11985:11991   */\n      dup5\n        /* \"#utility.yul\":11847:11999   */\n      tag_577\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":11839:11999   */\n      swap1\n      pop\n        /* \"#utility.yul\":11545:12006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12012:12809   */\n    tag_83:\n        /* \"#utility.yul\":12098:12104   */\n      0x00\n        /* \"#utility.yul\":12106:12112   */\n      dup1\n        /* \"#utility.yul\":12114:12120   */\n      0x00\n        /* \"#utility.yul\":12163:12165   */\n      0x60\n        /* \"#utility.yul\":12151:12160   */\n      dup5\n        /* \"#utility.yul\":12142:12149   */\n      dup7\n        /* \"#utility.yul\":12138:12161   */\n      sub\n        /* \"#utility.yul\":12134:12166   */\n      slt\n        /* \"#utility.yul\":12131:12250   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":12169:12248   */\n      tag_719\n      tag_543\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":12131:12250   */\n    tag_718:\n        /* \"#utility.yul\":12289:12290   */\n      0x00\n        /* \"#utility.yul\":12314:12367   */\n      tag_720\n        /* \"#utility.yul\":12359:12366   */\n      dup7\n        /* \"#utility.yul\":12350:12356   */\n      dup3\n        /* \"#utility.yul\":12339:12348   */\n      dup8\n        /* \"#utility.yul\":12335:12357   */\n      add\n        /* \"#utility.yul\":12314:12367   */\n      tag_556\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":12304:12367   */\n      swap4\n      pop\n        /* \"#utility.yul\":12260:12377   */\n      pop\n        /* \"#utility.yul\":12416:12418   */\n      0x20\n        /* \"#utility.yul\":12442:12495   */\n      tag_721\n        /* \"#utility.yul\":12487:12494   */\n      dup7\n        /* \"#utility.yul\":12478:12484   */\n      dup3\n        /* \"#utility.yul\":12467:12476   */\n      dup8\n        /* \"#utility.yul\":12463:12485   */\n      add\n        /* \"#utility.yul\":12442:12495   */\n      tag_556\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":12432:12495   */\n      swap3\n      pop\n        /* \"#utility.yul\":12387:12505   */\n      pop\n        /* \"#utility.yul\":12572:12574   */\n      0x40\n        /* \"#utility.yul\":12561:12570   */\n      dup5\n        /* \"#utility.yul\":12557:12575   */\n      add\n        /* \"#utility.yul\":12544:12576   */\n      calldataload\n        /* \"#utility.yul\":12603:12621   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12595:12601   */\n      dup2\n        /* \"#utility.yul\":12592:12622   */\n      gt\n        /* \"#utility.yul\":12589:12706   */\n      iszero\n      tag_722\n      jumpi\n        /* \"#utility.yul\":12625:12704   */\n      tag_723\n      tag_544\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":12589:12706   */\n    tag_722:\n        /* \"#utility.yul\":12730:12792   */\n      tag_724\n        /* \"#utility.yul\":12784:12791   */\n      dup7\n        /* \"#utility.yul\":12775:12781   */\n      dup3\n        /* \"#utility.yul\":12764:12773   */\n      dup8\n        /* \"#utility.yul\":12760:12782   */\n      add\n        /* \"#utility.yul\":12730:12792   */\n      tag_566\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":12720:12792   */\n      swap2\n      pop\n        /* \"#utility.yul\":12515:12802   */\n      pop\n        /* \"#utility.yul\":12012:12809   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12815:13144   */\n    tag_91:\n        /* \"#utility.yul\":12874:12880   */\n      0x00\n        /* \"#utility.yul\":12923:12925   */\n      0x20\n        /* \"#utility.yul\":12911:12920   */\n      dup3\n        /* \"#utility.yul\":12902:12909   */\n      dup5\n        /* \"#utility.yul\":12898:12921   */\n      sub\n        /* \"#utility.yul\":12894:12926   */\n      slt\n        /* \"#utility.yul\":12891:13010   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":12929:13008   */\n      tag_727\n      tag_543\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":12891:13010   */\n    tag_726:\n        /* \"#utility.yul\":13049:13050   */\n      0x00\n        /* \"#utility.yul\":13074:13127   */\n      tag_728\n        /* \"#utility.yul\":13119:13126   */\n      dup5\n        /* \"#utility.yul\":13110:13116   */\n      dup3\n        /* \"#utility.yul\":13099:13108   */\n      dup6\n        /* \"#utility.yul\":13095:13117   */\n      add\n        /* \"#utility.yul\":13074:13127   */\n      tag_553\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":13064:13127   */\n      swap2\n      pop\n        /* \"#utility.yul\":13020:13137   */\n      pop\n        /* \"#utility.yul\":12815:13144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13150:13268   */\n    tag_578:\n        /* \"#utility.yul\":13237:13261   */\n      tag_730\n        /* \"#utility.yul\":13255:13260   */\n      dup2\n        /* \"#utility.yul\":13237:13261   */\n      tag_554\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":13232:13235   */\n      dup3\n        /* \"#utility.yul\":13225:13262   */\n      mstore\n        /* \"#utility.yul\":13150:13268   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13274:13496   */\n    tag_94:\n        /* \"#utility.yul\":13367:13371   */\n      0x00\n        /* \"#utility.yul\":13405:13407   */\n      0x20\n        /* \"#utility.yul\":13394:13403   */\n      dup3\n        /* \"#utility.yul\":13390:13408   */\n      add\n        /* \"#utility.yul\":13382:13408   */\n      swap1\n      pop\n        /* \"#utility.yul\":13418:13489   */\n      tag_732\n        /* \"#utility.yul\":13486:13487   */\n      0x00\n        /* \"#utility.yul\":13475:13484   */\n      dup4\n        /* \"#utility.yul\":13471:13488   */\n      add\n        /* \"#utility.yul\":13462:13468   */\n      dup5\n        /* \"#utility.yul\":13418:13489   */\n      tag_578\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":13274:13496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13502:13618   */\n    tag_579:\n        /* \"#utility.yul\":13572:13593   */\n      tag_734\n        /* \"#utility.yul\":13587:13592   */\n      dup2\n        /* \"#utility.yul\":13572:13593   */\n      tag_548\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":13565:13570   */\n      dup2\n        /* \"#utility.yul\":13562:13594   */\n      eq\n        /* \"#utility.yul\":13552:13612   */\n      tag_735\n      jumpi\n        /* \"#utility.yul\":13608:13609   */\n      0x00\n        /* \"#utility.yul\":13605:13606   */\n      dup1\n        /* \"#utility.yul\":13598:13610   */\n      revert\n        /* \"#utility.yul\":13552:13612   */\n    tag_735:\n        /* \"#utility.yul\":13502:13618   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13624:13757   */\n    tag_580:\n        /* \"#utility.yul\":13667:13672   */\n      0x00\n        /* \"#utility.yul\":13705:13711   */\n      dup2\n        /* \"#utility.yul\":13692:13712   */\n      calldataload\n        /* \"#utility.yul\":13683:13712   */\n      swap1\n      pop\n        /* \"#utility.yul\":13721:13751   */\n      tag_737\n        /* \"#utility.yul\":13745:13750   */\n      dup2\n        /* \"#utility.yul\":13721:13751   */\n      tag_579\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":13624:13757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13763:14231   */\n    tag_100:\n        /* \"#utility.yul\":13828:13834   */\n      0x00\n        /* \"#utility.yul\":13836:13842   */\n      dup1\n        /* \"#utility.yul\":13885:13887   */\n      0x40\n        /* \"#utility.yul\":13873:13882   */\n      dup4\n        /* \"#utility.yul\":13864:13871   */\n      dup6\n        /* \"#utility.yul\":13860:13883   */\n      sub\n        /* \"#utility.yul\":13856:13888   */\n      slt\n        /* \"#utility.yul\":13853:13972   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":13891:13970   */\n      tag_740\n      tag_543\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":13853:13972   */\n    tag_739:\n        /* \"#utility.yul\":14011:14012   */\n      0x00\n        /* \"#utility.yul\":14036:14089   */\n      tag_741\n        /* \"#utility.yul\":14081:14088   */\n      dup6\n        /* \"#utility.yul\":14072:14078   */\n      dup3\n        /* \"#utility.yul\":14061:14070   */\n      dup7\n        /* \"#utility.yul\":14057:14079   */\n      add\n        /* \"#utility.yul\":14036:14089   */\n      tag_553\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":14026:14089   */\n      swap3\n      pop\n        /* \"#utility.yul\":13982:14099   */\n      pop\n        /* \"#utility.yul\":14138:14140   */\n      0x20\n        /* \"#utility.yul\":14164:14214   */\n      tag_742\n        /* \"#utility.yul\":14206:14213   */\n      dup6\n        /* \"#utility.yul\":14197:14203   */\n      dup3\n        /* \"#utility.yul\":14186:14195   */\n      dup7\n        /* \"#utility.yul\":14182:14204   */\n      add\n        /* \"#utility.yul\":14164:14214   */\n      tag_580\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":14154:14214   */\n      swap2\n      pop\n        /* \"#utility.yul\":14109:14224   */\n      pop\n        /* \"#utility.yul\":13763:14231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14237:15180   */\n    tag_115:\n        /* \"#utility.yul\":14332:14338   */\n      0x00\n        /* \"#utility.yul\":14340:14346   */\n      dup1\n        /* \"#utility.yul\":14348:14354   */\n      0x00\n        /* \"#utility.yul\":14356:14362   */\n      dup1\n        /* \"#utility.yul\":14405:14408   */\n      0x80\n        /* \"#utility.yul\":14393:14402   */\n      dup6\n        /* \"#utility.yul\":14384:14391   */\n      dup8\n        /* \"#utility.yul\":14380:14403   */\n      sub\n        /* \"#utility.yul\":14376:14409   */\n      slt\n        /* \"#utility.yul\":14373:14493   */\n      iszero\n      tag_744\n      jumpi\n        /* \"#utility.yul\":14412:14491   */\n      tag_745\n      tag_543\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":14373:14493   */\n    tag_744:\n        /* \"#utility.yul\":14532:14533   */\n      0x00\n        /* \"#utility.yul\":14557:14610   */\n      tag_746\n        /* \"#utility.yul\":14602:14609   */\n      dup8\n        /* \"#utility.yul\":14593:14599   */\n      dup3\n        /* \"#utility.yul\":14582:14591   */\n      dup9\n        /* \"#utility.yul\":14578:14600   */\n      add\n        /* \"#utility.yul\":14557:14610   */\n      tag_553\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":14547:14610   */\n      swap5\n      pop\n        /* \"#utility.yul\":14503:14620   */\n      pop\n        /* \"#utility.yul\":14659:14661   */\n      0x20\n        /* \"#utility.yul\":14685:14738   */\n      tag_747\n        /* \"#utility.yul\":14730:14737   */\n      dup8\n        /* \"#utility.yul\":14721:14727   */\n      dup3\n        /* \"#utility.yul\":14710:14719   */\n      dup9\n        /* \"#utility.yul\":14706:14728   */\n      add\n        /* \"#utility.yul\":14685:14738   */\n      tag_553\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":14675:14738   */\n      swap4\n      pop\n        /* \"#utility.yul\":14630:14748   */\n      pop\n        /* \"#utility.yul\":14787:14789   */\n      0x40\n        /* \"#utility.yul\":14813:14866   */\n      tag_748\n        /* \"#utility.yul\":14858:14865   */\n      dup8\n        /* \"#utility.yul\":14849:14855   */\n      dup3\n        /* \"#utility.yul\":14838:14847   */\n      dup9\n        /* \"#utility.yul\":14834:14856   */\n      add\n        /* \"#utility.yul\":14813:14866   */\n      tag_556\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":14803:14866   */\n      swap3\n      pop\n        /* \"#utility.yul\":14758:14876   */\n      pop\n        /* \"#utility.yul\":14943:14945   */\n      0x60\n        /* \"#utility.yul\":14932:14941   */\n      dup6\n        /* \"#utility.yul\":14928:14946   */\n      add\n        /* \"#utility.yul\":14915:14947   */\n      calldataload\n        /* \"#utility.yul\":14974:14992   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14966:14972   */\n      dup2\n        /* \"#utility.yul\":14963:14993   */\n      gt\n        /* \"#utility.yul\":14960:15077   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":14996:15075   */\n      tag_750\n      tag_544\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":14960:15077   */\n    tag_749:\n        /* \"#utility.yul\":15101:15163   */\n      tag_751\n        /* \"#utility.yul\":15155:15162   */\n      dup8\n        /* \"#utility.yul\":15146:15152   */\n      dup3\n        /* \"#utility.yul\":15135:15144   */\n      dup9\n        /* \"#utility.yul\":15131:15153   */\n      add\n        /* \"#utility.yul\":15101:15163   */\n      tag_566\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":15091:15163   */\n      swap2\n      pop\n        /* \"#utility.yul\":14886:15173   */\n      pop\n        /* \"#utility.yul\":14237:15180   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15186:16707   */\n    tag_119:\n        /* \"#utility.yul\":15314:15320   */\n      0x00\n        /* \"#utility.yul\":15322:15328   */\n      dup1\n        /* \"#utility.yul\":15330:15336   */\n      0x00\n        /* \"#utility.yul\":15338:15344   */\n      dup1\n        /* \"#utility.yul\":15346:15352   */\n      0x00\n        /* \"#utility.yul\":15354:15360   */\n      dup1\n        /* \"#utility.yul\":15362:15368   */\n      0x00\n        /* \"#utility.yul\":15370:15376   */\n      dup1\n        /* \"#utility.yul\":15419:15422   */\n      0x0100\n        /* \"#utility.yul\":15407:15416   */\n      dup10\n        /* \"#utility.yul\":15398:15405   */\n      dup12\n        /* \"#utility.yul\":15394:15417   */\n      sub\n        /* \"#utility.yul\":15390:15423   */\n      slt\n        /* \"#utility.yul\":15387:15507   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":15426:15505   */\n      tag_754\n      tag_543\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":15387:15507   */\n    tag_753:\n        /* \"#utility.yul\":15546:15547   */\n      0x00\n        /* \"#utility.yul\":15571:15624   */\n      tag_755\n        /* \"#utility.yul\":15616:15623   */\n      dup12\n        /* \"#utility.yul\":15607:15613   */\n      dup3\n        /* \"#utility.yul\":15596:15605   */\n      dup13\n        /* \"#utility.yul\":15592:15614   */\n      add\n        /* \"#utility.yul\":15571:15624   */\n      tag_556\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":15561:15624   */\n      swap9\n      pop\n        /* \"#utility.yul\":15517:15634   */\n      pop\n        /* \"#utility.yul\":15673:15675   */\n      0x20\n        /* \"#utility.yul\":15699:15752   */\n      tag_756\n        /* \"#utility.yul\":15744:15751   */\n      dup12\n        /* \"#utility.yul\":15735:15741   */\n      dup3\n        /* \"#utility.yul\":15724:15733   */\n      dup13\n        /* \"#utility.yul\":15720:15742   */\n      add\n        /* \"#utility.yul\":15699:15752   */\n      tag_553\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":15689:15752   */\n      swap8\n      pop\n        /* \"#utility.yul\":15644:15762   */\n      pop\n        /* \"#utility.yul\":15801:15803   */\n      0x40\n        /* \"#utility.yul\":15827:15880   */\n      tag_757\n        /* \"#utility.yul\":15872:15879   */\n      dup12\n        /* \"#utility.yul\":15863:15869   */\n      dup3\n        /* \"#utility.yul\":15852:15861   */\n      dup13\n        /* \"#utility.yul\":15848:15870   */\n      add\n        /* \"#utility.yul\":15827:15880   */\n      tag_556\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":15817:15880   */\n      swap7\n      pop\n        /* \"#utility.yul\":15772:15890   */\n      pop\n        /* \"#utility.yul\":15929:15931   */\n      0x60\n        /* \"#utility.yul\":15955:16008   */\n      tag_758\n        /* \"#utility.yul\":16000:16007   */\n      dup12\n        /* \"#utility.yul\":15991:15997   */\n      dup3\n        /* \"#utility.yul\":15980:15989   */\n      dup13\n        /* \"#utility.yul\":15976:15998   */\n      add\n        /* \"#utility.yul\":15955:16008   */\n      tag_556\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":15945:16008   */\n      swap6\n      pop\n        /* \"#utility.yul\":15900:16018   */\n      pop\n        /* \"#utility.yul\":16057:16060   */\n      0x80\n        /* \"#utility.yul\":16084:16137   */\n      tag_759\n        /* \"#utility.yul\":16129:16136   */\n      dup12\n        /* \"#utility.yul\":16120:16126   */\n      dup3\n        /* \"#utility.yul\":16109:16118   */\n      dup13\n        /* \"#utility.yul\":16105:16127   */\n      add\n        /* \"#utility.yul\":16084:16137   */\n      tag_553\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":16074:16137   */\n      swap5\n      pop\n        /* \"#utility.yul\":16028:16147   */\n      pop\n        /* \"#utility.yul\":16186:16189   */\n      0xa0\n        /* \"#utility.yul\":16213:16266   */\n      tag_760\n        /* \"#utility.yul\":16258:16265   */\n      dup12\n        /* \"#utility.yul\":16249:16255   */\n      dup3\n        /* \"#utility.yul\":16238:16247   */\n      dup13\n        /* \"#utility.yul\":16234:16256   */\n      add\n        /* \"#utility.yul\":16213:16266   */\n      tag_556\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":16203:16266   */\n      swap4\n      pop\n        /* \"#utility.yul\":16157:16276   */\n      pop\n        /* \"#utility.yul\":16315:16318   */\n      0xc0\n        /* \"#utility.yul\":16342:16392   */\n      tag_761\n        /* \"#utility.yul\":16384:16391   */\n      dup12\n        /* \"#utility.yul\":16375:16381   */\n      dup3\n        /* \"#utility.yul\":16364:16373   */\n      dup13\n        /* \"#utility.yul\":16360:16382   */\n      add\n        /* \"#utility.yul\":16342:16392   */\n      tag_580\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":16332:16392   */\n      swap3\n      pop\n        /* \"#utility.yul\":16286:16402   */\n      pop\n        /* \"#utility.yul\":16469:16472   */\n      0xe0\n        /* \"#utility.yul\":16458:16467   */\n      dup10\n        /* \"#utility.yul\":16454:16473   */\n      add\n        /* \"#utility.yul\":16441:16474   */\n      calldataload\n        /* \"#utility.yul\":16501:16519   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16493:16499   */\n      dup2\n        /* \"#utility.yul\":16490:16520   */\n      gt\n        /* \"#utility.yul\":16487:16604   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":16523:16602   */\n      tag_763\n      tag_544\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":16487:16604   */\n    tag_762:\n        /* \"#utility.yul\":16628:16690   */\n      tag_764\n        /* \"#utility.yul\":16682:16689   */\n      dup12\n        /* \"#utility.yul\":16673:16679   */\n      dup3\n        /* \"#utility.yul\":16662:16671   */\n      dup13\n        /* \"#utility.yul\":16658:16680   */\n      add\n        /* \"#utility.yul\":16628:16690   */\n      tag_566\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":16618:16690   */\n      swap2\n      pop\n        /* \"#utility.yul\":16412:16700   */\n      pop\n        /* \"#utility.yul\":15186:16707   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16713:17478   */\n    tag_123:\n        /* \"#utility.yul\":16799:16805   */\n      0x00\n        /* \"#utility.yul\":16807:16813   */\n      dup1\n        /* \"#utility.yul\":16815:16821   */\n      0x00\n        /* \"#utility.yul\":16823:16829   */\n      dup1\n        /* \"#utility.yul\":16872:16875   */\n      0x80\n        /* \"#utility.yul\":16860:16869   */\n      dup6\n        /* \"#utility.yul\":16851:16858   */\n      dup8\n        /* \"#utility.yul\":16847:16870   */\n      sub\n        /* \"#utility.yul\":16843:16876   */\n      slt\n        /* \"#utility.yul\":16840:16960   */\n      iszero\n      tag_766\n      jumpi\n        /* \"#utility.yul\":16879:16958   */\n      tag_767\n      tag_543\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":16840:16960   */\n    tag_766:\n        /* \"#utility.yul\":16999:17000   */\n      0x00\n        /* \"#utility.yul\":17024:17077   */\n      tag_768\n        /* \"#utility.yul\":17069:17076   */\n      dup8\n        /* \"#utility.yul\":17060:17066   */\n      dup3\n        /* \"#utility.yul\":17049:17058   */\n      dup9\n        /* \"#utility.yul\":17045:17067   */\n      add\n        /* \"#utility.yul\":17024:17077   */\n      tag_556\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":17014:17077   */\n      swap5\n      pop\n        /* \"#utility.yul\":16970:17087   */\n      pop\n        /* \"#utility.yul\":17126:17128   */\n      0x20\n        /* \"#utility.yul\":17152:17205   */\n      tag_769\n        /* \"#utility.yul\":17197:17204   */\n      dup8\n        /* \"#utility.yul\":17188:17194   */\n      dup3\n        /* \"#utility.yul\":17177:17186   */\n      dup9\n        /* \"#utility.yul\":17173:17195   */\n      add\n        /* \"#utility.yul\":17152:17205   */\n      tag_556\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":17142:17205   */\n      swap4\n      pop\n        /* \"#utility.yul\":17097:17215   */\n      pop\n        /* \"#utility.yul\":17254:17256   */\n      0x40\n        /* \"#utility.yul\":17280:17333   */\n      tag_770\n        /* \"#utility.yul\":17325:17332   */\n      dup8\n        /* \"#utility.yul\":17316:17322   */\n      dup3\n        /* \"#utility.yul\":17305:17314   */\n      dup9\n        /* \"#utility.yul\":17301:17323   */\n      add\n        /* \"#utility.yul\":17280:17333   */\n      tag_553\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":17270:17333   */\n      swap3\n      pop\n        /* \"#utility.yul\":17225:17343   */\n      pop\n        /* \"#utility.yul\":17382:17384   */\n      0x60\n        /* \"#utility.yul\":17408:17461   */\n      tag_771\n        /* \"#utility.yul\":17453:17460   */\n      dup8\n        /* \"#utility.yul\":17444:17450   */\n      dup3\n        /* \"#utility.yul\":17433:17442   */\n      dup9\n        /* \"#utility.yul\":17429:17451   */\n      add\n        /* \"#utility.yul\":17408:17461   */\n      tag_556\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":17398:17461   */\n      swap2\n      pop\n        /* \"#utility.yul\":17353:17471   */\n      pop\n        /* \"#utility.yul\":16713:17478   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17484:17958   */\n    tag_127:\n        /* \"#utility.yul\":17552:17558   */\n      0x00\n        /* \"#utility.yul\":17560:17566   */\n      dup1\n        /* \"#utility.yul\":17609:17611   */\n      0x40\n        /* \"#utility.yul\":17597:17606   */\n      dup4\n        /* \"#utility.yul\":17588:17595   */\n      dup6\n        /* \"#utility.yul\":17584:17607   */\n      sub\n        /* \"#utility.yul\":17580:17612   */\n      slt\n        /* \"#utility.yul\":17577:17696   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":17615:17694   */\n      tag_774\n      tag_543\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":17577:17696   */\n    tag_773:\n        /* \"#utility.yul\":17735:17736   */\n      0x00\n        /* \"#utility.yul\":17760:17813   */\n      tag_775\n        /* \"#utility.yul\":17805:17812   */\n      dup6\n        /* \"#utility.yul\":17796:17802   */\n      dup3\n        /* \"#utility.yul\":17785:17794   */\n      dup7\n        /* \"#utility.yul\":17781:17803   */\n      add\n        /* \"#utility.yul\":17760:17813   */\n      tag_553\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":17750:17813   */\n      swap3\n      pop\n        /* \"#utility.yul\":17706:17823   */\n      pop\n        /* \"#utility.yul\":17862:17864   */\n      0x20\n        /* \"#utility.yul\":17888:17941   */\n      tag_776\n        /* \"#utility.yul\":17933:17940   */\n      dup6\n        /* \"#utility.yul\":17924:17930   */\n      dup3\n        /* \"#utility.yul\":17913:17922   */\n      dup7\n        /* \"#utility.yul\":17909:17931   */\n      add\n        /* \"#utility.yul\":17888:17941   */\n      tag_553\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":17878:17941   */\n      swap2\n      pop\n        /* \"#utility.yul\":17833:17951   */\n      pop\n        /* \"#utility.yul\":17484:17958   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17964:18907   */\n    tag_132:\n        /* \"#utility.yul\":18059:18065   */\n      0x00\n        /* \"#utility.yul\":18067:18073   */\n      dup1\n        /* \"#utility.yul\":18075:18081   */\n      0x00\n        /* \"#utility.yul\":18083:18089   */\n      dup1\n        /* \"#utility.yul\":18132:18135   */\n      0x80\n        /* \"#utility.yul\":18120:18129   */\n      dup6\n        /* \"#utility.yul\":18111:18118   */\n      dup8\n        /* \"#utility.yul\":18107:18130   */\n      sub\n        /* \"#utility.yul\":18103:18136   */\n      slt\n        /* \"#utility.yul\":18100:18220   */\n      iszero\n      tag_778\n      jumpi\n        /* \"#utility.yul\":18139:18218   */\n      tag_779\n      tag_543\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":18100:18220   */\n    tag_778:\n        /* \"#utility.yul\":18259:18260   */\n      0x00\n        /* \"#utility.yul\":18284:18337   */\n      tag_780\n        /* \"#utility.yul\":18329:18336   */\n      dup8\n        /* \"#utility.yul\":18320:18326   */\n      dup3\n        /* \"#utility.yul\":18309:18318   */\n      dup9\n        /* \"#utility.yul\":18305:18327   */\n      add\n        /* \"#utility.yul\":18284:18337   */\n      tag_553\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":18274:18337   */\n      swap5\n      pop\n        /* \"#utility.yul\":18230:18347   */\n      pop\n        /* \"#utility.yul\":18386:18388   */\n      0x20\n        /* \"#utility.yul\":18412:18465   */\n      tag_781\n        /* \"#utility.yul\":18457:18464   */\n      dup8\n        /* \"#utility.yul\":18448:18454   */\n      dup3\n        /* \"#utility.yul\":18437:18446   */\n      dup9\n        /* \"#utility.yul\":18433:18455   */\n      add\n        /* \"#utility.yul\":18412:18465   */\n      tag_556\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":18402:18465   */\n      swap4\n      pop\n        /* \"#utility.yul\":18357:18475   */\n      pop\n        /* \"#utility.yul\":18514:18516   */\n      0x40\n        /* \"#utility.yul\":18540:18593   */\n      tag_782\n        /* \"#utility.yul\":18585:18592   */\n      dup8\n        /* \"#utility.yul\":18576:18582   */\n      dup3\n        /* \"#utility.yul\":18565:18574   */\n      dup9\n        /* \"#utility.yul\":18561:18583   */\n      add\n        /* \"#utility.yul\":18540:18593   */\n      tag_556\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":18530:18593   */\n      swap3\n      pop\n        /* \"#utility.yul\":18485:18603   */\n      pop\n        /* \"#utility.yul\":18670:18672   */\n      0x60\n        /* \"#utility.yul\":18659:18668   */\n      dup6\n        /* \"#utility.yul\":18655:18673   */\n      add\n        /* \"#utility.yul\":18642:18674   */\n      calldataload\n        /* \"#utility.yul\":18701:18719   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18693:18699   */\n      dup2\n        /* \"#utility.yul\":18690:18720   */\n      gt\n        /* \"#utility.yul\":18687:18804   */\n      iszero\n      tag_783\n      jumpi\n        /* \"#utility.yul\":18723:18802   */\n      tag_784\n      tag_544\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":18687:18804   */\n    tag_783:\n        /* \"#utility.yul\":18828:18890   */\n      tag_785\n        /* \"#utility.yul\":18882:18889   */\n      dup8\n        /* \"#utility.yul\":18873:18879   */\n      dup3\n        /* \"#utility.yul\":18862:18871   */\n      dup9\n        /* \"#utility.yul\":18858:18880   */\n      add\n        /* \"#utility.yul\":18828:18890   */\n      tag_566\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":18818:18890   */\n      swap2\n      pop\n        /* \"#utility.yul\":18613:18900   */\n      pop\n        /* \"#utility.yul\":17964:18907   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18913:19343   */\n    tag_138:\n        /* \"#utility.yul\":19056:19060   */\n      0x00\n        /* \"#utility.yul\":19094:19096   */\n      0x60\n        /* \"#utility.yul\":19083:19092   */\n      dup3\n        /* \"#utility.yul\":19079:19097   */\n      add\n        /* \"#utility.yul\":19071:19097   */\n      swap1\n      pop\n        /* \"#utility.yul\":19107:19178   */\n      tag_787\n        /* \"#utility.yul\":19175:19176   */\n      0x00\n        /* \"#utility.yul\":19164:19173   */\n      dup4\n        /* \"#utility.yul\":19160:19177   */\n      add\n        /* \"#utility.yul\":19151:19157   */\n      dup7\n        /* \"#utility.yul\":19107:19178   */\n      tag_567\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":19188:19260   */\n      tag_788\n        /* \"#utility.yul\":19256:19258   */\n      0x20\n        /* \"#utility.yul\":19245:19254   */\n      dup4\n        /* \"#utility.yul\":19241:19259   */\n      add\n        /* \"#utility.yul\":19232:19238   */\n      dup6\n        /* \"#utility.yul\":19188:19260   */\n      tag_578\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":19270:19336   */\n      tag_789\n        /* \"#utility.yul\":19332:19334   */\n      0x40\n        /* \"#utility.yul\":19321:19330   */\n      dup4\n        /* \"#utility.yul\":19317:19335   */\n      add\n        /* \"#utility.yul\":19308:19314   */\n      dup5\n        /* \"#utility.yul\":19270:19336   */\n      tag_549\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":18913:19343   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19349:19529   */\n    tag_176:\n        /* \"#utility.yul\":19397:19474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19394:19395   */\n      0x00\n        /* \"#utility.yul\":19387:19475   */\n      mstore\n        /* \"#utility.yul\":19494:19498   */\n      0x32\n        /* \"#utility.yul\":19491:19492   */\n      0x04\n        /* \"#utility.yul\":19484:19499   */\n      mstore\n        /* \"#utility.yul\":19518:19522   */\n      0x24\n        /* \"#utility.yul\":19515:19516   */\n      0x00\n        /* \"#utility.yul\":19508:19523   */\n      revert\n        /* \"#utility.yul\":19535:19678   */\n    tag_581:\n        /* \"#utility.yul\":19592:19597   */\n      0x00\n        /* \"#utility.yul\":19623:19629   */\n      dup2\n        /* \"#utility.yul\":19617:19630   */\n      mload\n        /* \"#utility.yul\":19608:19630   */\n      swap1\n      pop\n        /* \"#utility.yul\":19639:19672   */\n      tag_792\n        /* \"#utility.yul\":19666:19671   */\n      dup2\n        /* \"#utility.yul\":19639:19672   */\n      tag_552\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":19535:19678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19684:20035   */\n    tag_194:\n        /* \"#utility.yul\":19754:19760   */\n      0x00\n        /* \"#utility.yul\":19803:19805   */\n      0x20\n        /* \"#utility.yul\":19791:19800   */\n      dup3\n        /* \"#utility.yul\":19782:19789   */\n      dup5\n        /* \"#utility.yul\":19778:19801   */\n      sub\n        /* \"#utility.yul\":19774:19806   */\n      slt\n        /* \"#utility.yul\":19771:19890   */\n      iszero\n      tag_794\n      jumpi\n        /* \"#utility.yul\":19809:19888   */\n      tag_795\n      tag_543\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":19771:19890   */\n    tag_794:\n        /* \"#utility.yul\":19929:19930   */\n      0x00\n        /* \"#utility.yul\":19954:20018   */\n      tag_796\n        /* \"#utility.yul\":20010:20017   */\n      dup5\n        /* \"#utility.yul\":20001:20007   */\n      dup3\n        /* \"#utility.yul\":19990:19999   */\n      dup6\n        /* \"#utility.yul\":19986:20008   */\n      add\n        /* \"#utility.yul\":19954:20018   */\n      tag_581\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":19944:20018   */\n      swap2\n      pop\n        /* \"#utility.yul\":19900:20028   */\n      pop\n        /* \"#utility.yul\":19684:20035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20041:20156   */\n    tag_582:\n        /* \"#utility.yul\":20126:20149   */\n      tag_798\n        /* \"#utility.yul\":20143:20148   */\n      dup2\n        /* \"#utility.yul\":20126:20149   */\n      tag_545\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":20121:20124   */\n      dup3\n        /* \"#utility.yul\":20114:20150   */\n      mstore\n        /* \"#utility.yul\":20041:20156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20162:20380   */\n    tag_263:\n        /* \"#utility.yul\":20253:20257   */\n      0x00\n        /* \"#utility.yul\":20291:20293   */\n      0x20\n        /* \"#utility.yul\":20280:20289   */\n      dup3\n        /* \"#utility.yul\":20276:20294   */\n      add\n        /* \"#utility.yul\":20268:20294   */\n      swap1\n      pop\n        /* \"#utility.yul\":20304:20373   */\n      tag_800\n        /* \"#utility.yul\":20370:20371   */\n      0x00\n        /* \"#utility.yul\":20359:20368   */\n      dup4\n        /* \"#utility.yul\":20355:20372   */\n      add\n        /* \"#utility.yul\":20346:20352   */\n      dup5\n        /* \"#utility.yul\":20304:20373   */\n      tag_582\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":20162:20380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20386:20523   */\n    tag_583:\n        /* \"#utility.yul\":20440:20445   */\n      0x00\n        /* \"#utility.yul\":20471:20477   */\n      dup2\n        /* \"#utility.yul\":20465:20478   */\n      mload\n        /* \"#utility.yul\":20456:20478   */\n      swap1\n      pop\n        /* \"#utility.yul\":20487:20517   */\n      tag_802\n        /* \"#utility.yul\":20511:20516   */\n      dup2\n        /* \"#utility.yul\":20487:20517   */\n      tag_579\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":20386:20523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20529:20874   */\n    tag_267:\n        /* \"#utility.yul\":20596:20602   */\n      0x00\n        /* \"#utility.yul\":20645:20647   */\n      0x20\n        /* \"#utility.yul\":20633:20642   */\n      dup3\n        /* \"#utility.yul\":20624:20631   */\n      dup5\n        /* \"#utility.yul\":20620:20643   */\n      sub\n        /* \"#utility.yul\":20616:20648   */\n      slt\n        /* \"#utility.yul\":20613:20732   */\n      iszero\n      tag_804\n      jumpi\n        /* \"#utility.yul\":20651:20730   */\n      tag_805\n      tag_543\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":20613:20732   */\n    tag_804:\n        /* \"#utility.yul\":20771:20772   */\n      0x00\n        /* \"#utility.yul\":20796:20857   */\n      tag_806\n        /* \"#utility.yul\":20849:20856   */\n      dup5\n        /* \"#utility.yul\":20840:20846   */\n      dup3\n        /* \"#utility.yul\":20829:20838   */\n      dup6\n        /* \"#utility.yul\":20825:20847   */\n      add\n        /* \"#utility.yul\":20796:20857   */\n      tag_583\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":20786:20857   */\n      swap2\n      pop\n        /* \"#utility.yul\":20742:20867   */\n      pop\n        /* \"#utility.yul\":20529:20874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20880:21060   */\n    tag_584:\n        /* \"#utility.yul\":20928:21005   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20925:20926   */\n      0x00\n        /* \"#utility.yul\":20918:21006   */\n      mstore\n        /* \"#utility.yul\":21025:21029   */\n      0x11\n        /* \"#utility.yul\":21022:21023   */\n      0x04\n        /* \"#utility.yul\":21015:21030   */\n      mstore\n        /* \"#utility.yul\":21049:21053   */\n      0x24\n        /* \"#utility.yul\":21046:21047   */\n      0x00\n        /* \"#utility.yul\":21039:21054   */\n      revert\n        /* \"#utility.yul\":21066:21260   */\n    tag_300:\n        /* \"#utility.yul\":21106:21110   */\n      0x00\n        /* \"#utility.yul\":21126:21146   */\n      tag_809\n        /* \"#utility.yul\":21144:21145   */\n      dup3\n        /* \"#utility.yul\":21126:21146   */\n      tag_554\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":21121:21146   */\n      swap2\n      pop\n        /* \"#utility.yul\":21160:21180   */\n      tag_810\n        /* \"#utility.yul\":21178:21179   */\n      dup4\n        /* \"#utility.yul\":21160:21180   */\n      tag_554\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":21155:21180   */\n      swap3\n      pop\n        /* \"#utility.yul\":21204:21205   */\n      dup3\n        /* \"#utility.yul\":21201:21202   */\n      dup3\n        /* \"#utility.yul\":21197:21206   */\n      sub\n        /* \"#utility.yul\":21189:21206   */\n      swap1\n      pop\n        /* \"#utility.yul\":21228:21229   */\n      dup2\n        /* \"#utility.yul\":21222:21226   */\n      dup2\n        /* \"#utility.yul\":21219:21230   */\n      gt\n        /* \"#utility.yul\":21216:21253   */\n      iszero\n      tag_811\n      jumpi\n        /* \"#utility.yul\":21233:21251   */\n      tag_812\n      tag_584\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":21216:21253   */\n    tag_811:\n        /* \"#utility.yul\":21066:21260   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21266:21457   */\n    tag_304:\n        /* \"#utility.yul\":21306:21309   */\n      0x00\n        /* \"#utility.yul\":21325:21345   */\n      tag_814\n        /* \"#utility.yul\":21343:21344   */\n      dup3\n        /* \"#utility.yul\":21325:21345   */\n      tag_554\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":21320:21345   */\n      swap2\n      pop\n        /* \"#utility.yul\":21359:21379   */\n      tag_815\n        /* \"#utility.yul\":21377:21378   */\n      dup4\n        /* \"#utility.yul\":21359:21379   */\n      tag_554\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":21354:21379   */\n      swap3\n      pop\n        /* \"#utility.yul\":21402:21403   */\n      dup3\n        /* \"#utility.yul\":21399:21400   */\n      dup3\n        /* \"#utility.yul\":21395:21404   */\n      add\n        /* \"#utility.yul\":21388:21404   */\n      swap1\n      pop\n        /* \"#utility.yul\":21423:21426   */\n      dup1\n        /* \"#utility.yul\":21420:21421   */\n      dup3\n        /* \"#utility.yul\":21417:21427   */\n      gt\n        /* \"#utility.yul\":21414:21450   */\n      iszero\n      tag_816\n      jumpi\n        /* \"#utility.yul\":21430:21448   */\n      tag_817\n      tag_584\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":21414:21450   */\n    tag_816:\n        /* \"#utility.yul\":21266:21457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21463:21548   */\n    tag_585:\n        /* \"#utility.yul\":21508:21515   */\n      0x00\n        /* \"#utility.yul\":21537:21542   */\n      dup2\n        /* \"#utility.yul\":21526:21542   */\n      swap1\n      pop\n        /* \"#utility.yul\":21463:21548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21554:21614   */\n    tag_586:\n        /* \"#utility.yul\":21582:21585   */\n      0x00\n        /* \"#utility.yul\":21603:21608   */\n      dup2\n        /* \"#utility.yul\":21596:21608   */\n      swap1\n      pop\n        /* \"#utility.yul\":21554:21614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21620:21778   */\n    tag_587:\n        /* \"#utility.yul\":21678:21687   */\n      0x00\n        /* \"#utility.yul\":21711:21772   */\n      tag_821\n        /* \"#utility.yul\":21729:21771   */\n      tag_822\n        /* \"#utility.yul\":21738:21770   */\n      tag_823\n        /* \"#utility.yul\":21764:21769   */\n      dup5\n        /* \"#utility.yul\":21738:21770   */\n      tag_585\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":21729:21771   */\n      tag_586\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":21711:21772   */\n      tag_554\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":21698:21772   */\n      swap1\n      pop\n        /* \"#utility.yul\":21620:21778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21784:21931   */\n    tag_588:\n        /* \"#utility.yul\":21879:21924   */\n      tag_825\n        /* \"#utility.yul\":21918:21923   */\n      dup2\n        /* \"#utility.yul\":21879:21924   */\n      tag_587\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":21874:21877   */\n      dup3\n        /* \"#utility.yul\":21867:21925   */\n      mstore\n        /* \"#utility.yul\":21784:21931   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21937:22285   */\n    tag_323:\n        /* \"#utility.yul\":22066:22070   */\n      0x00\n        /* \"#utility.yul\":22104:22106   */\n      0x40\n        /* \"#utility.yul\":22093:22102   */\n      dup3\n        /* \"#utility.yul\":22089:22107   */\n      add\n        /* \"#utility.yul\":22081:22107   */\n      swap1\n      pop\n        /* \"#utility.yul\":22117:22188   */\n      tag_827\n        /* \"#utility.yul\":22185:22186   */\n      0x00\n        /* \"#utility.yul\":22174:22183   */\n      dup4\n        /* \"#utility.yul\":22170:22187   */\n      add\n        /* \"#utility.yul\":22161:22167   */\n      dup6\n        /* \"#utility.yul\":22117:22188   */\n      tag_578\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":22198:22278   */\n      tag_828\n        /* \"#utility.yul\":22274:22276   */\n      0x20\n        /* \"#utility.yul\":22263:22272   */\n      dup4\n        /* \"#utility.yul\":22259:22277   */\n      add\n        /* \"#utility.yul\":22250:22256   */\n      dup5\n        /* \"#utility.yul\":22198:22278   */\n      tag_588\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":21937:22285   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22291:22623   */\n    tag_365:\n        /* \"#utility.yul\":22412:22416   */\n      0x00\n        /* \"#utility.yul\":22450:22452   */\n      0x40\n        /* \"#utility.yul\":22439:22448   */\n      dup3\n        /* \"#utility.yul\":22435:22453   */\n      add\n        /* \"#utility.yul\":22427:22453   */\n      swap1\n      pop\n        /* \"#utility.yul\":22463:22534   */\n      tag_830\n        /* \"#utility.yul\":22531:22532   */\n      0x00\n        /* \"#utility.yul\":22520:22529   */\n      dup4\n        /* \"#utility.yul\":22516:22533   */\n      add\n        /* \"#utility.yul\":22507:22513   */\n      dup6\n        /* \"#utility.yul\":22463:22534   */\n      tag_567\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":22544:22616   */\n      tag_831\n        /* \"#utility.yul\":22612:22614   */\n      0x20\n        /* \"#utility.yul\":22601:22610   */\n      dup4\n        /* \"#utility.yul\":22597:22615   */\n      add\n        /* \"#utility.yul\":22588:22594   */\n      dup5\n        /* \"#utility.yul\":22544:22616   */\n      tag_578\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":22291:22623   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22629:22961   */\n    tag_376:\n        /* \"#utility.yul\":22750:22754   */\n      0x00\n        /* \"#utility.yul\":22788:22790   */\n      0x40\n        /* \"#utility.yul\":22777:22786   */\n      dup3\n        /* \"#utility.yul\":22773:22791   */\n      add\n        /* \"#utility.yul\":22765:22791   */\n      swap1\n      pop\n        /* \"#utility.yul\":22801:22872   */\n      tag_833\n        /* \"#utility.yul\":22869:22870   */\n      0x00\n        /* \"#utility.yul\":22858:22867   */\n      dup4\n        /* \"#utility.yul\":22854:22871   */\n      add\n        /* \"#utility.yul\":22845:22851   */\n      dup6\n        /* \"#utility.yul\":22801:22872   */\n      tag_578\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":22882:22954   */\n      tag_834\n        /* \"#utility.yul\":22950:22952   */\n      0x20\n        /* \"#utility.yul\":22939:22948   */\n      dup4\n        /* \"#utility.yul\":22935:22953   */\n      add\n        /* \"#utility.yul\":22926:22932   */\n      dup5\n        /* \"#utility.yul\":22882:22954   */\n      tag_578\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":22629:22961   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22967:23110   */\n    tag_589:\n        /* \"#utility.yul\":23024:23029   */\n      0x00\n        /* \"#utility.yul\":23055:23061   */\n      dup2\n        /* \"#utility.yul\":23049:23062   */\n      mload\n        /* \"#utility.yul\":23040:23062   */\n      swap1\n      pop\n        /* \"#utility.yul\":23071:23104   */\n      tag_836\n        /* \"#utility.yul\":23098:23103   */\n      dup2\n        /* \"#utility.yul\":23071:23104   */\n      tag_555\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":22967:23110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23116:23467   */\n    tag_380:\n        /* \"#utility.yul\":23186:23192   */\n      0x00\n        /* \"#utility.yul\":23235:23237   */\n      0x20\n        /* \"#utility.yul\":23223:23232   */\n      dup3\n        /* \"#utility.yul\":23214:23221   */\n      dup5\n        /* \"#utility.yul\":23210:23233   */\n      sub\n        /* \"#utility.yul\":23206:23238   */\n      slt\n        /* \"#utility.yul\":23203:23322   */\n      iszero\n      tag_838\n      jumpi\n        /* \"#utility.yul\":23241:23320   */\n      tag_839\n      tag_543\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":23203:23322   */\n    tag_838:\n        /* \"#utility.yul\":23361:23362   */\n      0x00\n        /* \"#utility.yul\":23386:23450   */\n      tag_840\n        /* \"#utility.yul\":23442:23449   */\n      dup5\n        /* \"#utility.yul\":23433:23439   */\n      dup3\n        /* \"#utility.yul\":23422:23431   */\n      dup6\n        /* \"#utility.yul\":23418:23440   */\n      add\n        /* \"#utility.yul\":23386:23450   */\n      tag_589\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":23376:23450   */\n      swap2\n      pop\n        /* \"#utility.yul\":23332:23460   */\n      pop\n        /* \"#utility.yul\":23116:23467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23473:23571   */\n    tag_590:\n        /* \"#utility.yul\":23524:23530   */\n      0x00\n        /* \"#utility.yul\":23558:23563   */\n      dup2\n        /* \"#utility.yul\":23552:23564   */\n      mload\n        /* \"#utility.yul\":23542:23564   */\n      swap1\n      pop\n        /* \"#utility.yul\":23473:23571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23577:23745   */\n    tag_591:\n        /* \"#utility.yul\":23660:23671   */\n      0x00\n        /* \"#utility.yul\":23694:23700   */\n      dup3\n        /* \"#utility.yul\":23689:23692   */\n      dup3\n        /* \"#utility.yul\":23682:23701   */\n      mstore\n        /* \"#utility.yul\":23734:23738   */\n      0x20\n        /* \"#utility.yul\":23729:23732   */\n      dup3\n        /* \"#utility.yul\":23725:23739   */\n      add\n        /* \"#utility.yul\":23710:23739   */\n      swap1\n      pop\n        /* \"#utility.yul\":23577:23745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23751:23997   */\n    tag_592:\n        /* \"#utility.yul\":23832:23833   */\n      0x00\n        /* \"#utility.yul\":23842:23955   */\n    tag_844:\n        /* \"#utility.yul\":23856:23862   */\n      dup4\n        /* \"#utility.yul\":23853:23854   */\n      dup2\n        /* \"#utility.yul\":23850:23863   */\n      lt\n        /* \"#utility.yul\":23842:23955   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":23941:23942   */\n      dup1\n        /* \"#utility.yul\":23936:23939   */\n      dup3\n        /* \"#utility.yul\":23932:23943   */\n      add\n        /* \"#utility.yul\":23926:23944   */\n      mload\n        /* \"#utility.yul\":23922:23923   */\n      dup2\n        /* \"#utility.yul\":23917:23920   */\n      dup5\n        /* \"#utility.yul\":23913:23924   */\n      add\n        /* \"#utility.yul\":23906:23945   */\n      mstore\n        /* \"#utility.yul\":23878:23880   */\n      0x20\n        /* \"#utility.yul\":23875:23876   */\n      dup2\n        /* \"#utility.yul\":23871:23881   */\n      add\n        /* \"#utility.yul\":23866:23881   */\n      swap1\n      pop\n        /* \"#utility.yul\":23842:23955   */\n      jump(tag_844)\n    tag_846:\n        /* \"#utility.yul\":23989:23990   */\n      0x00\n        /* \"#utility.yul\":23980:23986   */\n      dup5\n        /* \"#utility.yul\":23975:23978   */\n      dup5\n        /* \"#utility.yul\":23971:23987   */\n      add\n        /* \"#utility.yul\":23964:23991   */\n      mstore\n        /* \"#utility.yul\":23813:23997   */\n      pop\n        /* \"#utility.yul\":23751:23997   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24003:24376   */\n    tag_593:\n        /* \"#utility.yul\":24089:24092   */\n      0x00\n        /* \"#utility.yul\":24117:24155   */\n      tag_848\n        /* \"#utility.yul\":24149:24154   */\n      dup3\n        /* \"#utility.yul\":24117:24155   */\n      tag_590\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":24171:24241   */\n      tag_849\n        /* \"#utility.yul\":24234:24240   */\n      dup2\n        /* \"#utility.yul\":24229:24232   */\n      dup6\n        /* \"#utility.yul\":24171:24241   */\n      tag_591\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":24164:24241   */\n      swap4\n      pop\n        /* \"#utility.yul\":24250:24315   */\n      tag_850\n        /* \"#utility.yul\":24308:24314   */\n      dup2\n        /* \"#utility.yul\":24303:24306   */\n      dup6\n        /* \"#utility.yul\":24296:24300   */\n      0x20\n        /* \"#utility.yul\":24289:24294   */\n      dup7\n        /* \"#utility.yul\":24285:24301   */\n      add\n        /* \"#utility.yul\":24250:24315   */\n      tag_592\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":24340:24369   */\n      tag_851\n        /* \"#utility.yul\":24362:24368   */\n      dup2\n        /* \"#utility.yul\":24340:24369   */\n      tag_559\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":24335:24338   */\n      dup5\n        /* \"#utility.yul\":24331:24370   */\n      add\n        /* \"#utility.yul\":24324:24370   */\n      swap2\n      pop\n        /* \"#utility.yul\":24093:24376   */\n      pop\n        /* \"#utility.yul\":24003:24376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24382:25022   */\n    tag_414:\n        /* \"#utility.yul\":24577:24581   */\n      0x00\n        /* \"#utility.yul\":24615:24618   */\n      0x80\n        /* \"#utility.yul\":24604:24613   */\n      dup3\n        /* \"#utility.yul\":24600:24619   */\n      add\n        /* \"#utility.yul\":24592:24619   */\n      swap1\n      pop\n        /* \"#utility.yul\":24629:24700   */\n      tag_853\n        /* \"#utility.yul\":24697:24698   */\n      0x00\n        /* \"#utility.yul\":24686:24695   */\n      dup4\n        /* \"#utility.yul\":24682:24699   */\n      add\n        /* \"#utility.yul\":24673:24679   */\n      dup8\n        /* \"#utility.yul\":24629:24700   */\n      tag_567\n      jump\t// in\n    tag_853:\n        /* \"#utility.yul\":24710:24782   */\n      tag_854\n        /* \"#utility.yul\":24778:24780   */\n      0x20\n        /* \"#utility.yul\":24767:24776   */\n      dup4\n        /* \"#utility.yul\":24763:24781   */\n      add\n        /* \"#utility.yul\":24754:24760   */\n      dup7\n        /* \"#utility.yul\":24710:24782   */\n      tag_567\n      jump\t// in\n    tag_854:\n        /* \"#utility.yul\":24792:24864   */\n      tag_855\n        /* \"#utility.yul\":24860:24862   */\n      0x40\n        /* \"#utility.yul\":24849:24858   */\n      dup4\n        /* \"#utility.yul\":24845:24863   */\n      add\n        /* \"#utility.yul\":24836:24842   */\n      dup6\n        /* \"#utility.yul\":24792:24864   */\n      tag_578\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":24911:24920   */\n      dup2\n        /* \"#utility.yul\":24905:24909   */\n      dup2\n        /* \"#utility.yul\":24901:24921   */\n      sub\n        /* \"#utility.yul\":24896:24898   */\n      0x60\n        /* \"#utility.yul\":24885:24894   */\n      dup4\n        /* \"#utility.yul\":24881:24899   */\n      add\n        /* \"#utility.yul\":24874:24922   */\n      mstore\n        /* \"#utility.yul\":24939:25015   */\n      tag_856\n        /* \"#utility.yul\":25010:25014   */\n      dup2\n        /* \"#utility.yul\":25001:25007   */\n      dup5\n        /* \"#utility.yul\":24939:25015   */\n      tag_593\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":24931:25015   */\n      swap1\n      pop\n        /* \"#utility.yul\":24382:25022   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25028:25779   */\n    tag_420:\n        /* \"#utility.yul\":25251:25255   */\n      0x00\n        /* \"#utility.yul\":25289:25292   */\n      0xa0\n        /* \"#utility.yul\":25278:25287   */\n      dup3\n        /* \"#utility.yul\":25274:25293   */\n      add\n        /* \"#utility.yul\":25266:25293   */\n      swap1\n      pop\n        /* \"#utility.yul\":25303:25374   */\n      tag_858\n        /* \"#utility.yul\":25371:25372   */\n      0x00\n        /* \"#utility.yul\":25360:25369   */\n      dup4\n        /* \"#utility.yul\":25356:25373   */\n      add\n        /* \"#utility.yul\":25347:25353   */\n      dup9\n        /* \"#utility.yul\":25303:25374   */\n      tag_567\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":25384:25456   */\n      tag_859\n        /* \"#utility.yul\":25452:25454   */\n      0x20\n        /* \"#utility.yul\":25441:25450   */\n      dup4\n        /* \"#utility.yul\":25437:25455   */\n      add\n        /* \"#utility.yul\":25428:25434   */\n      dup8\n        /* \"#utility.yul\":25384:25456   */\n      tag_567\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":25466:25538   */\n      tag_860\n        /* \"#utility.yul\":25534:25536   */\n      0x40\n        /* \"#utility.yul\":25523:25532   */\n      dup4\n        /* \"#utility.yul\":25519:25537   */\n      add\n        /* \"#utility.yul\":25510:25516   */\n      dup7\n        /* \"#utility.yul\":25466:25538   */\n      tag_578\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":25548:25620   */\n      tag_861\n        /* \"#utility.yul\":25616:25618   */\n      0x60\n        /* \"#utility.yul\":25605:25614   */\n      dup4\n        /* \"#utility.yul\":25601:25619   */\n      add\n        /* \"#utility.yul\":25592:25598   */\n      dup6\n        /* \"#utility.yul\":25548:25620   */\n      tag_578\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":25668:25677   */\n      dup2\n        /* \"#utility.yul\":25662:25666   */\n      dup2\n        /* \"#utility.yul\":25658:25678   */\n      sub\n        /* \"#utility.yul\":25652:25655   */\n      0x80\n        /* \"#utility.yul\":25641:25650   */\n      dup4\n        /* \"#utility.yul\":25637:25656   */\n      add\n        /* \"#utility.yul\":25630:25679   */\n      mstore\n        /* \"#utility.yul\":25696:25772   */\n      tag_862\n        /* \"#utility.yul\":25767:25771   */\n      dup2\n        /* \"#utility.yul\":25758:25764   */\n      dup5\n        /* \"#utility.yul\":25696:25772   */\n      tag_593\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":25688:25772   */\n      swap1\n      pop\n        /* \"#utility.yul\":25028:25779   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25785:26105   */\n    tag_425:\n        /* \"#utility.yul\":25900:25904   */\n      0x00\n        /* \"#utility.yul\":25938:25940   */\n      0x40\n        /* \"#utility.yul\":25927:25936   */\n      dup3\n        /* \"#utility.yul\":25923:25941   */\n      add\n        /* \"#utility.yul\":25915:25941   */\n      swap1\n      pop\n        /* \"#utility.yul\":25951:26022   */\n      tag_864\n        /* \"#utility.yul\":26019:26020   */\n      0x00\n        /* \"#utility.yul\":26008:26017   */\n      dup4\n        /* \"#utility.yul\":26004:26021   */\n      add\n        /* \"#utility.yul\":25995:26001   */\n      dup6\n        /* \"#utility.yul\":25951:26022   */\n      tag_578\n      jump\t// in\n    tag_864:\n        /* \"#utility.yul\":26032:26098   */\n      tag_865\n        /* \"#utility.yul\":26094:26096   */\n      0x20\n        /* \"#utility.yul\":26083:26092   */\n      dup4\n        /* \"#utility.yul\":26079:26097   */\n      add\n        /* \"#utility.yul\":26070:26076   */\n      dup5\n        /* \"#utility.yul\":26032:26098   */\n      tag_549\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":25785:26105   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26111:26640   */\n    tag_451:\n        /* \"#utility.yul\":26278:26282   */\n      0x00\n        /* \"#utility.yul\":26316:26318   */\n      0x60\n        /* \"#utility.yul\":26305:26314   */\n      dup3\n        /* \"#utility.yul\":26301:26319   */\n      add\n        /* \"#utility.yul\":26293:26319   */\n      swap1\n      pop\n        /* \"#utility.yul\":26329:26400   */\n      tag_867\n        /* \"#utility.yul\":26397:26398   */\n      0x00\n        /* \"#utility.yul\":26386:26395   */\n      dup4\n        /* \"#utility.yul\":26382:26399   */\n      add\n        /* \"#utility.yul\":26373:26379   */\n      dup7\n        /* \"#utility.yul\":26329:26400   */\n      tag_578\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":26410:26482   */\n      tag_868\n        /* \"#utility.yul\":26478:26480   */\n      0x20\n        /* \"#utility.yul\":26467:26476   */\n      dup4\n        /* \"#utility.yul\":26463:26481   */\n      add\n        /* \"#utility.yul\":26454:26460   */\n      dup6\n        /* \"#utility.yul\":26410:26482   */\n      tag_578\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":26529:26538   */\n      dup2\n        /* \"#utility.yul\":26523:26527   */\n      dup2\n        /* \"#utility.yul\":26519:26539   */\n      sub\n        /* \"#utility.yul\":26514:26516   */\n      0x40\n        /* \"#utility.yul\":26503:26512   */\n      dup4\n        /* \"#utility.yul\":26499:26517   */\n      add\n        /* \"#utility.yul\":26492:26540   */\n      mstore\n        /* \"#utility.yul\":26557:26633   */\n      tag_869\n        /* \"#utility.yul\":26628:26632   */\n      dup2\n        /* \"#utility.yul\":26619:26625   */\n      dup5\n        /* \"#utility.yul\":26557:26633   */\n      tag_593\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":26549:26633   */\n      swap1\n      pop\n        /* \"#utility.yul\":26111:26640   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26646:27303   */\n    tag_473:\n        /* \"#utility.yul\":26731:26737   */\n      0x00\n        /* \"#utility.yul\":26739:26745   */\n      dup1\n        /* \"#utility.yul\":26747:26753   */\n      0x00\n        /* \"#utility.yul\":26796:26798   */\n      0x60\n        /* \"#utility.yul\":26784:26793   */\n      dup5\n        /* \"#utility.yul\":26775:26782   */\n      dup7\n        /* \"#utility.yul\":26771:26794   */\n      sub\n        /* \"#utility.yul\":26767:26799   */\n      slt\n        /* \"#utility.yul\":26764:26883   */\n      iszero\n      tag_871\n      jumpi\n        /* \"#utility.yul\":26802:26881   */\n      tag_872\n      tag_543\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":26764:26883   */\n    tag_871:\n        /* \"#utility.yul\":26922:26923   */\n      0x00\n        /* \"#utility.yul\":26947:27011   */\n      tag_873\n        /* \"#utility.yul\":27003:27010   */\n      dup7\n        /* \"#utility.yul\":26994:27000   */\n      dup3\n        /* \"#utility.yul\":26983:26992   */\n      dup8\n        /* \"#utility.yul\":26979:27001   */\n      add\n        /* \"#utility.yul\":26947:27011   */\n      tag_581\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":26937:27011   */\n      swap4\n      pop\n        /* \"#utility.yul\":26893:27021   */\n      pop\n        /* \"#utility.yul\":27060:27062   */\n      0x20\n        /* \"#utility.yul\":27086:27150   */\n      tag_874\n        /* \"#utility.yul\":27142:27149   */\n      dup7\n        /* \"#utility.yul\":27133:27139   */\n      dup3\n        /* \"#utility.yul\":27122:27131   */\n      dup8\n        /* \"#utility.yul\":27118:27140   */\n      add\n        /* \"#utility.yul\":27086:27150   */\n      tag_589\n      jump\t// in\n    tag_874:\n        /* \"#utility.yul\":27076:27150   */\n      swap3\n      pop\n        /* \"#utility.yul\":27031:27160   */\n      pop\n        /* \"#utility.yul\":27199:27201   */\n      0x40\n        /* \"#utility.yul\":27225:27286   */\n      tag_875\n        /* \"#utility.yul\":27278:27285   */\n      dup7\n        /* \"#utility.yul\":27269:27275   */\n      dup3\n        /* \"#utility.yul\":27258:27267   */\n      dup8\n        /* \"#utility.yul\":27254:27276   */\n      add\n        /* \"#utility.yul\":27225:27286   */\n      tag_583\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":27215:27286   */\n      swap2\n      pop\n        /* \"#utility.yul\":27170:27296   */\n      pop\n        /* \"#utility.yul\":26646:27303   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":27309:27673   */\n    tag_497:\n        /* \"#utility.yul\":27446:27450   */\n      0x00\n        /* \"#utility.yul\":27484:27486   */\n      0x40\n        /* \"#utility.yul\":27473:27482   */\n      dup3\n        /* \"#utility.yul\":27469:27487   */\n      add\n        /* \"#utility.yul\":27461:27487   */\n      swap1\n      pop\n        /* \"#utility.yul\":27497:27576   */\n      tag_877\n        /* \"#utility.yul\":27573:27574   */\n      0x00\n        /* \"#utility.yul\":27562:27571   */\n      dup4\n        /* \"#utility.yul\":27558:27575   */\n      add\n        /* \"#utility.yul\":27549:27555   */\n      dup6\n        /* \"#utility.yul\":27497:27576   */\n      tag_588\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":27586:27666   */\n      tag_878\n        /* \"#utility.yul\":27662:27664   */\n      0x20\n        /* \"#utility.yul\":27651:27660   */\n      dup4\n        /* \"#utility.yul\":27647:27665   */\n      add\n        /* \"#utility.yul\":27638:27644   */\n      dup5\n        /* \"#utility.yul\":27586:27666   */\n      tag_588\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":27309:27673   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27679:27820   */\n    tag_594:\n        /* \"#utility.yul\":27735:27740   */\n      0x00\n        /* \"#utility.yul\":27766:27772   */\n      dup2\n        /* \"#utility.yul\":27760:27773   */\n      mload\n        /* \"#utility.yul\":27751:27773   */\n      swap1\n      pop\n        /* \"#utility.yul\":27782:27814   */\n      tag_880\n        /* \"#utility.yul\":27808:27813   */\n      dup2\n        /* \"#utility.yul\":27782:27814   */\n      tag_546\n      jump\t// in\n    tag_880:\n        /* \"#utility.yul\":27679:27820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27826:28175   */\n    tag_507:\n        /* \"#utility.yul\":27895:27901   */\n      0x00\n        /* \"#utility.yul\":27944:27946   */\n      0x20\n        /* \"#utility.yul\":27932:27941   */\n      dup3\n        /* \"#utility.yul\":27923:27930   */\n      dup5\n        /* \"#utility.yul\":27919:27942   */\n      sub\n        /* \"#utility.yul\":27915:27947   */\n      slt\n        /* \"#utility.yul\":27912:28031   */\n      iszero\n      tag_882\n      jumpi\n        /* \"#utility.yul\":27950:28029   */\n      tag_883\n      tag_543\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":27912:28031   */\n    tag_882:\n        /* \"#utility.yul\":28070:28071   */\n      0x00\n        /* \"#utility.yul\":28095:28158   */\n      tag_884\n        /* \"#utility.yul\":28150:28157   */\n      dup5\n        /* \"#utility.yul\":28141:28147   */\n      dup3\n        /* \"#utility.yul\":28130:28139   */\n      dup6\n        /* \"#utility.yul\":28126:28148   */\n      add\n        /* \"#utility.yul\":28095:28158   */\n      tag_594\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":28085:28158   */\n      swap2\n      pop\n        /* \"#utility.yul\":28041:28168   */\n      pop\n        /* \"#utility.yul\":27826:28175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28181:28361   */\n    tag_532:\n        /* \"#utility.yul\":28229:28306   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28226:28227   */\n      0x00\n        /* \"#utility.yul\":28219:28307   */\n      mstore\n        /* \"#utility.yul\":28326:28330   */\n      0x31\n        /* \"#utility.yul\":28323:28324   */\n      0x04\n        /* \"#utility.yul\":28316:28331   */\n      mstore\n        /* \"#utility.yul\":28350:28354   */\n      0x24\n        /* \"#utility.yul\":28347:28348   */\n      0x00\n        /* \"#utility.yul\":28340:28355   */\n      revert\n\n    auxdata: 0xa26469706673582212207f4d210640773c466a835b430e56fb71bdbe1af0b872d0e77f56c1dfbd854dfc64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506142c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636f19951c116100de578063b3e1c71811610097578063e97ceaa811610071578063e97ceaa81461048c578063e985e9c5146104a8578063eb043606146104d8578063fb25fb7a146104f457610173565b8063b3e1c71814610438578063b88d4fde14610454578063defa80c31461047057610173565b80636f19951c1461034057806370a082311461037057806397961336146103a0578063a22cb465146103bc578063a898e364146103d8578063b390c0ab1461040857610173565b80634182e4a3116101305780634182e4a31461025c57806342842e0e1461028c57806342966c68146102a857806344ec9344146102c45780636352211e146102f4578063635490cc1461032457610173565b806301ffc9a714610178578063064c0a3a146101a8578063081812fc146101c4578063095ea7b3146101f457806323b872dd146102105780632f32f9371461022c575b600080fd5b610192600480360381019061018d9190613450565b610526565b60405161019f9190613498565b60405180910390f35b6101c260048036038101906101bd919061368d565b6106c8565b005b6101de60048036038101906101d99190613724565b6106e7565b6040516101eb9190613760565b60405180910390f35b61020e6004803603810190610209919061377b565b610772565b005b61022a600480360381019061022591906137bb565b61087b565b005b6102466004803603810190610241919061380e565b610896565b604051610253919061389b565b60405180910390f35b6102766004803603810190610271919061377b565b61098c565b6040516102839190613498565b60405180910390f35b6102a660048036038101906102a191906137bb565b6109ea565b005b6102c260048036038101906102bd9190613724565b610a0a565b005b6102de60048036038101906102d99190613724565b610a19565b6040516102eb9190613994565b60405180910390f35b61030e60048036038101906103099190613724565b610af1565b60405161031b9190613760565b60405180910390f35b61033e600480360381019061033991906139b6565b610b94565b005b61035a60048036038101906103559190613724565b610d79565b6040516103679190613994565b60405180910390f35b61038a60048036038101906103859190613a25565b610e51565b6040516103979190613a61565b60405180910390f35b6103ba60048036038101906103b5919061380e565b610efe565b005b6103d660048036038101906103d19190613aa8565b610f17565b005b6103f260048036038101906103ed919061380e565b61108e565b6040516103ff919061389b565b60405180910390f35b610422600480360381019061041d919061380e565b611184565b60405161042f9190613a61565b60405180910390f35b610452600480360381019061044d919061377b565b6111a3565b005b61046e60048036038101906104699190613ae8565b6111c1565b005b61048a60048036038101906104859190613b6b565b6111de565b005b6104a660048036038101906104a19190613c3d565b611203565b005b6104c260048036038101906104bd9190613ca4565b611220565b6040516104cf9190613498565b60405180910390f35b6104f260048036038101906104ed9190613ce4565b6112b4565b005b61050e60048036038101906105099190613724565b6113fa565b60405161051d93929190613d67565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105f157507f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061065957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106c157507f42b0e56f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b826106d28161150b565b6106df8686868686611555565b505050505050565b60006106f2826118b8565b60016000838152602001908152602001600020600061071084610af1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061077d82610af1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107e4576040517f0591db6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108036118fa565b73ffffffffffffffffffffffffffffffffffffffff161415801561083557506108338161082e6118fa565b611220565b155b1561086c576040517f982462b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108768383611902565b505050565b806108858161150b565b6108908484846119fe565b50505050565b61089e61334a565b816108a884610d79565b51116108e0576040517fca755cc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060046000858152602001908152602001600020838154811061090757610906613d9e565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508091505092915050565b600080600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415905092915050565b610a05838383604051806020016040528060008152506111c1565b505050565b610a15816000611184565b5050565b6060600060056000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ae25783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610a50565b50505050905080915050919050565b600080600080610b00856113fa565b9250925092508015610b89578273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610b459190613a61565b602060405180830381865afa158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b869190613de2565b92505b829350505050919050565b610b9d836118b8565b6000610ba76118fa565b9050610bc88173ffffffffffffffffffffffffffffffffffffffff16611c8f565b610bfe576040517f80275d3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180604001604052808581526020018373ffffffffffffffffffffffffffffffffffffffff168152509050610c38858386611cb2565b6000610c4386610a19565b5190506080811015610ce457600560008781526020019081526020016000208290806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610d16565b6040517f98674b3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848373ffffffffffffffffffffffffffffffffffffffff16877fe65085e689b77b126ba0bac3b079aa8288f19f4d5445af11c76003f8ab3075dd84604051610d5e9190613a61565b60405180910390a4610d71868487611cb7565b505050505050565b6060600060046000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610e425783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610db0565b50505050905080915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eb8576040517f7772286600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b81610f0881611cbc565b610f128383611d06565b505050565b8173ffffffffffffffffffffffffffffffffffffffff16610f366118fa565b73ffffffffffffffffffffffffffffffffffffffff1603610f83576040517f2dee66e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060026000610f906118fa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661103d6118fa565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110829190613498565b60405180910390a35050565b61109661334a565b816110a084610a19565b51116110d8576040517f9136d24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005600085815260200190815260200160002083815481106110ff576110fe613d9e565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508091505092915050565b6000826111908161150b565b61119a8484611db8565b91505092915050565b6111bd828260405180602001604052806000815250612267565b5050565b816111cb8161150b565b6111d7858585856122b9565b5050505050565b876111e881611cbc565b6111f8898989898989898961230c565b505050505050505050565b8361120d81611cbc565b61121985858585612581565b5050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6112d38473ffffffffffffffffffffffffffffffffffffffff16611c8f565b611309576040517f80275d3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f42b0e56f000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016113629190613e1e565b602060405180830381865afa15801561137f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a39190613e4e565b6113d9576040517f850cccef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113e48484846127d7565b6113f460008560008587866129bf565b50505050565b60008060008060036000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16036114ea576040517f89ba7e1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80602001518160000151600083600001511415935093509350509193909250565b61151c6115166118fa565b82612b17565b611552576040517f35d12e3f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080611561856113fa565b50915091508673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146115cb576040517fe146af6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611631576040517fe3d91bfc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614801561166b57508385145b156116a2576040517f5eeb0df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116c18673ffffffffffffffffffffffffffffffffffffffff16611c8f565b6116f7576040517f80275d3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f42b0e56f000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016117509190613e1e565b602060405180830381865afa15801561176d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117919190613e4e565b6117c7576040517ff413cf9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117d2858786612bf3565b6117dd878787612d4f565b6117ea8287838789612d54565b60016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118399190613eaa565b9250508190555061184b858588612d5b565b60016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461189a9190613ede565b925050819055506118af8287838789886129bf565b50505050505050565b6118c181612e06565b6118f7576040517f89ba7e1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600033905090565b600061190d82610af1565b9050826001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600080611a0a836113fa565b50915091508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611a74576040517fe146af6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611ada576040517fe3d91bfc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ae5858585612d4f565b611af3828583600087612d54565b60016000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b429190613eaa565b92505081905550611b5583600086612d5b565b60016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ba49190613ede565b92505081905550828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4828473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d846000604051611c67929190613f57565b60405180910390a4611c7a858585612e75565b611c88828583600087612e7a565b5050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b505050565b505050565b611ccd611cc76118fa565b82612e81565b611d03576040517f2728a9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b8060056000848152602001908152602001600020805490501115611d56576040517f8ac3cb1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d5f82612f16565b600560008381526020019081526020016000206000611d7e919061337a565b817f8ac4a0d65950c3e40448afb2260e2e0ec36ea15644d9b39e37e85472e5f9445160405160405180910390a2611db482612f19565b5050565b6000806000611dc6856113fa565b50915091506000611dd686610af1565b905060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e279190613eaa565b92505081905550611e3a81600088612d4f565b611e498360008460008a612d54565b611e54600087611902565b611e5d86612f1c565b6000611e6887610d79565b9050600460008881526020019081526020016000206000611e89919061337a565b600560008881526020019081526020016000206000611ea8919061337a565b6001600088815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560008060008351905060005b8181101561213057898310611fb157848181518110611f4957611f48613d9e565b5b602002602001015160200151858281518110611f6857611f67613d9e565b5b6020026020010151600001516040517f4cb93ad9000000000000000000000000000000000000000000000000000000008152600401611fa8929190613f80565b60405180910390fd5b60066000868381518110611fc857611fc7613d9e565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086838151811061202357612022613d9e565b5b602002602001015160000151815260200190815260200160002060009055828a039350600185828151811061205b5761205a613d9e565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1663b390c0ab87848151811061209557612094613d9e565b5b6020026020010151600001516001886120ae9190613eaa565b6040518363ffffffff1660e01b81526004016120cb929190613fa9565b6020604051808303816000875af11580156120ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210e9190613fe7565b6121189190613ede565b836121239190613ede565b9250806001019050611f27565b50600360008b81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550506121828560008c612e75565b6121918760008860008e612e7a565b89600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a489600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d89600060405161224f929190613f57565b60405180910390a48197505050505050505092915050565b6122718383612f1f565b61227e6000848484613010565b6122b4576040517fbcb5663700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6122c48484846119fe565b6122d084848484613010565b612306576040517fbcb5663700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b61231461334a565b821561232b57612324898761108e565b9050612338565b6123358987610896565b90505b61234381868661318e565b612350898787878761320d565b821561237757612372600560008b815260200190815260200160002087613214565b6123e8565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600090556123e7600460008b815260200190815260200160002087613214565b5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614612517576000870361249a578473ffffffffffffffffffffffffffffffffffffffff1663b88d4fde308a87866040518563ffffffff1660e01b81526004016124639493929190614093565b600060405180830381600087803b15801561247d57600080fd5b505af1158015612491573d6000803e3d6000fd5b50505050612516565b806020015173ffffffffffffffffffffffffffffffffffffffff1663064c0a3a308a84600001518b876040518663ffffffff1660e01b81526004016124e39594939291906140df565b600060405180830381600087803b1580156124fd57600080fd5b505af1158015612511573d6000803e3d6000fd5b505050505b5b838573ffffffffffffffffffffffffffffffffffffffff168a7f2bedee38cdb22411c14554191243c0e117c0088ddae3459876acd46a0fd538158987604051612561929190614139565b60405180910390a46125768987878787613337565b505050505050505050565b8261258b85610a19565b51116125c3576040517f9136d24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006125cf858561108e565b90506125dc81848461318e565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414612666576040517fff33650c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6126728585858561333e565b61268e6005600087815260200190815260200160002085613214565b600460008681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550818373ffffffffffffffffffffffffffffffffffffffff16867f29486b9e2ae569b440933a9b1b421467306fa21f3dcad439c262910a634963a9876040516127bc9190613a61565b60405180910390a46127d085858585613344565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361283d576040517f25bd6bd300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61284682612e06565b1561287d576040517fc5a8d37100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082036128b7576040517f238924d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128c360008484612d4f565b6128d260008460008486612d54565b60016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546129219190613ede565b9250508190555060405180604001604052808281526020018473ffffffffffffffffffffffffffffffffffffffff16815250600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b60008590508073ffffffffffffffffffffffffffffffffffffffff1663635490cc8585856040518463ffffffff1660e01b8152600401612a0193929190614162565b600060405180830381600087803b158015612a1b57600080fd5b505af1158015612a2f573d6000803e3d6000fd5b50505050612a3e878785612e75565b612a4b8787878787612e7a565b828673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4828673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d8888604051612b06929190613fa9565b60405180910390a450505050505050565b6000806000612b25846113fa565b509150915060008114612b6a578173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161492505050612bed565b8173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480612baa5750612ba98286611220565b5b80612be857508473ffffffffffffffffffffffffffffffffffffffff16612bd0856106e7565b73ffffffffffffffffffffffffffffffffffffffff16145b925050505b92915050565b60005b6064811015612d175760008060008573ffffffffffffffffffffffffffffffffffffffff1663fb25fb7a866040518263ffffffff1660e01b8152600401612c3d9190613a61565b606060405180830381865afa158015612c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c7e91906141a0565b92509250925080612c925750505050612d4a565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015612ccc57508682145b15612d03576040517ff911968900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b829550819450836001019350505050612bf6565b506040517feb20c44200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b505050565b5050505050565b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600360008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050612df8600084611902565b612e0183612f1c565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b5050505050565b600080612e8d83610af1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612ecf5750612ece8185611220565b5b80612f0d57508373ffffffffffffffffffffffffffffffffffffffff16612ef5846106e7565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b50565b50565b50565b612f2b828260006127d7565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d600080604051612fe99291906141f3565b60405180910390a4612ffd60008383612e75565b61300c60008360008085612e7a565b5050565b60006130318473ffffffffffffffffffffffffffffffffffffffff16611c8f565b15613181578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261305a6118fa565b8786866040518563ffffffff1660e01b815260040161307c9493929190614093565b6020604051808303816000875af19250505080156130b857506040513d601f19601f820116820180604052508101906130b59190614231565b60015b613131573d80600081146130e8576040519150601f19603f3d011682016040523d82523d6000602084013e6130ed565b606091505b506000815103613129576040517fbcb5663700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050613186565b600190505b949350505050565b826020015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415806131d1575082600001518114155b15613208576040517f37d6ce9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b5050505050565b81600183805490506132269190613eaa565b8154811061323757613236613d9e565b5b906000526020600020906002020182828154811061325857613257613d9e565b5b9060005260206000209060020201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050818054806132eb576132ea61425e565b5b60019003818190600052602060002090600202016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505090555050565b5050505050565b50505050565b50505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b508054600082556002029060005260206000209081019061339b919061339e565b50565b5b808211156133e0576000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060020161339f565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61342d816133f8565b811461343857600080fd5b50565b60008135905061344a81613424565b92915050565b600060208284031215613466576134656133ee565b5b60006134748482850161343b565b91505092915050565b60008115159050919050565b6134928161347d565b82525050565b60006020820190506134ad6000830184613489565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134de826134b3565b9050919050565b6134ee816134d3565b81146134f957600080fd5b50565b60008135905061350b816134e5565b92915050565b6000819050919050565b61352481613511565b811461352f57600080fd5b50565b6000813590506135418161351b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61359a82613551565b810181811067ffffffffffffffff821117156135b9576135b8613562565b5b80604052505050565b60006135cc6133e4565b90506135d88282613591565b919050565b600067ffffffffffffffff8211156135f8576135f7613562565b5b61360182613551565b9050602081019050919050565b82818337600083830152505050565b600061363061362b846135dd565b6135c2565b90508281526020810184848401111561364c5761364b61354c565b5b61365784828561360e565b509392505050565b600082601f83011261367457613673613547565b5b813561368484826020860161361d565b91505092915050565b600080600080600060a086880312156136a9576136a86133ee565b5b60006136b7888289016134fc565b95505060206136c8888289016134fc565b94505060406136d988828901613532565b93505060606136ea88828901613532565b925050608086013567ffffffffffffffff81111561370b5761370a6133f3565b5b6137178882890161365f565b9150509295509295909350565b60006020828403121561373a576137396133ee565b5b600061374884828501613532565b91505092915050565b61375a816134d3565b82525050565b60006020820190506137756000830184613751565b92915050565b60008060408385031215613792576137916133ee565b5b60006137a0858286016134fc565b92505060206137b185828601613532565b9150509250929050565b6000806000606084860312156137d4576137d36133ee565b5b60006137e2868287016134fc565b93505060206137f3868287016134fc565b925050604061380486828701613532565b9150509250925092565b60008060408385031215613825576138246133ee565b5b600061383385828601613532565b925050602061384485828601613532565b9150509250929050565b61385781613511565b82525050565b613866816134d3565b82525050565b604082016000820151613882600085018261384e565b506020820151613895602085018261385d565b50505050565b60006040820190506138b0600083018461386c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6040820160008201516138f8600085018261384e565b50602082015161390b602085018261385d565b50505050565b600061391d83836138e2565b60408301905092915050565b6000602082019050919050565b6000613941826138b6565b61394b81856138c1565b9350613956836138d2565b8060005b8381101561398757815161396e8882613911565b975061397983613929565b92505060018101905061395a565b5085935050505092915050565b600060208201905081810360008301526139ae8184613936565b905092915050565b6000806000606084860312156139cf576139ce6133ee565b5b60006139dd86828701613532565b93505060206139ee86828701613532565b925050604084013567ffffffffffffffff811115613a0f57613a0e6133f3565b5b613a1b8682870161365f565b9150509250925092565b600060208284031215613a3b57613a3a6133ee565b5b6000613a49848285016134fc565b91505092915050565b613a5b81613511565b82525050565b6000602082019050613a766000830184613a52565b92915050565b613a858161347d565b8114613a9057600080fd5b50565b600081359050613aa281613a7c565b92915050565b60008060408385031215613abf57613abe6133ee565b5b6000613acd858286016134fc565b9250506020613ade85828601613a93565b9150509250929050565b60008060008060808587031215613b0257613b016133ee565b5b6000613b10878288016134fc565b9450506020613b21878288016134fc565b9350506040613b3287828801613532565b925050606085013567ffffffffffffffff811115613b5357613b526133f3565b5b613b5f8782880161365f565b91505092959194509250565b600080600080600080600080610100898b031215613b8c57613b8b6133ee565b5b6000613b9a8b828c01613532565b9850506020613bab8b828c016134fc565b9750506040613bbc8b828c01613532565b9650506060613bcd8b828c01613532565b9550506080613bde8b828c016134fc565b94505060a0613bef8b828c01613532565b93505060c0613c008b828c01613a93565b92505060e089013567ffffffffffffffff811115613c2157613c206133f3565b5b613c2d8b828c0161365f565b9150509295985092959890939650565b60008060008060808587031215613c5757613c566133ee565b5b6000613c6587828801613532565b9450506020613c7687828801613532565b9350506040613c87878288016134fc565b9250506060613c9887828801613532565b91505092959194509250565b60008060408385031215613cbb57613cba6133ee565b5b6000613cc9858286016134fc565b9250506020613cda858286016134fc565b9150509250929050565b60008060008060808587031215613cfe57613cfd6133ee565b5b6000613d0c878288016134fc565b9450506020613d1d87828801613532565b9350506040613d2e87828801613532565b925050606085013567ffffffffffffffff811115613d4f57613d4e6133f3565b5b613d5b8782880161365f565b91505092959194509250565b6000606082019050613d7c6000830186613751565b613d896020830185613a52565b613d966040830184613489565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050613ddc816134e5565b92915050565b600060208284031215613df857613df76133ee565b5b6000613e0684828501613dcd565b91505092915050565b613e18816133f8565b82525050565b6000602082019050613e336000830184613e0f565b92915050565b600081519050613e4881613a7c565b92915050565b600060208284031215613e6457613e636133ee565b5b6000613e7284828501613e39565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613eb582613511565b9150613ec083613511565b9250828203905081811115613ed857613ed7613e7b565b5b92915050565b6000613ee982613511565b9150613ef483613511565b9250828201905080821115613f0c57613f0b613e7b565b5b92915050565b6000819050919050565b6000819050919050565b6000613f41613f3c613f3784613f12565b613f1c565b613511565b9050919050565b613f5181613f26565b82525050565b6000604082019050613f6c6000830185613a52565b613f796020830184613f48565b9392505050565b6000604082019050613f956000830185613751565b613fa26020830184613a52565b9392505050565b6000604082019050613fbe6000830185613a52565b613fcb6020830184613a52565b9392505050565b600081519050613fe18161351b565b92915050565b600060208284031215613ffd57613ffc6133ee565b5b600061400b84828501613fd2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561404e578082015181840152602081019050614033565b60008484015250505050565b600061406582614014565b61406f818561401f565b935061407f818560208601614030565b61408881613551565b840191505092915050565b60006080820190506140a86000830187613751565b6140b56020830186613751565b6140c26040830185613a52565b81810360608301526140d4818461405a565b905095945050505050565b600060a0820190506140f46000830188613751565b6141016020830187613751565b61410e6040830186613a52565b61411b6060830185613a52565b818103608083015261412d818461405a565b90509695505050505050565b600060408201905061414e6000830185613a52565b61415b6020830184613489565b9392505050565b60006060820190506141776000830186613a52565b6141846020830185613a52565b8181036040830152614196818461405a565b9050949350505050565b6000806000606084860312156141b9576141b86133ee565b5b60006141c786828701613dcd565b93505060206141d886828701613fd2565b92505060406141e986828701613e39565b9150509250925092565b60006040820190506142086000830185613f48565b6142156020830184613f48565b9392505050565b60008151905061422b81613424565b92915050565b600060208284031215614247576142466133ee565b5b60006142558482850161421c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212207f4d210640773c466a835b430e56fb71bdbe1af0b872d0e77f56c1dfbd854dfc64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42C3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F19951C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB3E1C718 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE97CEAA8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE97CEAA8 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xEB043606 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xFB25FB7A EQ PUSH2 0x4F4 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xB3E1C718 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xDEFA80C3 EQ PUSH2 0x470 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6F19951C EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x97961336 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xA898E364 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xB390C0AB EQ PUSH2 0x408 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x4182E4A3 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x4182E4A3 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x44EC9344 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x635490CC EQ PUSH2 0x324 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x64C0A3A EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x2F32F937 EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x368D JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x389B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x3994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x39B6 JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x3994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x3A25 JUMP JUMPDEST PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0xF17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x389B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x11A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x3AE8 JUMP JUMPDEST PUSH2 0x11C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x3B6B JUMP JUMPDEST PUSH2 0x11DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x3C3D JUMP JUMPDEST PUSH2 0x1203 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x3CA4 JUMP JUMPDEST PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x12B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5F1 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x659 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x6C1 JUMPI POP PUSH32 0x42B0E56F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 PUSH2 0x6D2 DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x6DF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1555 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 DUP3 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x710 DUP5 PUSH2 0xAF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP3 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x591DB6D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x803 PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI POP PUSH2 0x833 DUP2 PUSH2 0x82E PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x1220 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x982462B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x876 DUP4 DUP4 PUSH2 0x1902 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x885 DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x890 DUP5 DUP5 DUP5 PUSH2 0x19FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x89E PUSH2 0x334A JUMP JUMPDEST DUP2 PUSH2 0x8A8 DUP5 PUSH2 0xD79 JUMP JUMPDEST MLOAD GT PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA755CC000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA15 DUP2 PUSH1 0x0 PUSH2 0x1184 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xAE2 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA50 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB00 DUP6 PUSH2 0x13FA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP1 ISZERO PUSH2 0xB89 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9D DUP4 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP PUSH2 0xBC8 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x80275D3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0xC38 DUP6 DUP4 DUP7 PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC43 DUP7 PUSH2 0xA19 JUMP JUMPDEST MLOAD SWAP1 POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x98674B3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH32 0xE65085E689B77B126BA0BAC3B079AA8288F19F4D5445AF11C76003F8AB3075DD DUP5 PUSH1 0x40 MLOAD PUSH2 0xD5E SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xD71 DUP7 DUP5 DUP8 PUSH2 0x1CB7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xE42 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xDB0 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7772286600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0xF08 DUP2 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0xF12 DUP4 DUP4 PUSH2 0x1D06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF36 PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2DEE66E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0xF90 PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x103D PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1096 PUSH2 0x334A JUMP JUMPDEST DUP2 PUSH2 0x10A0 DUP5 PUSH2 0xA19 JUMP JUMPDEST MLOAD GT PUSH2 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9136D24F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10FF JUMPI PUSH2 0x10FE PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1190 DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x119A DUP5 DUP5 PUSH2 0x1DB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11BD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2267 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH2 0x11CB DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x11D7 DUP6 DUP6 DUP6 DUP6 PUSH2 0x22B9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP8 PUSH2 0x11E8 DUP2 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x11F8 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x230C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x120D DUP2 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x1219 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2581 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80275D3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x42B0E56F00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1362 SWAP2 SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x137F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x3E4E JUMP JUMPDEST PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x850CCCEF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E4 DUP5 DUP5 DUP5 PUSH2 0x27D7 JUMP JUMPDEST PUSH2 0x13F4 PUSH1 0x0 DUP6 PUSH1 0x0 DUP6 DUP8 DUP7 PUSH2 0x29BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x89BA7E1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD EQ ISZERO SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x151C PUSH2 0x1516 PUSH2 0x18FA JUMP JUMPDEST DUP3 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x1552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x35D12E3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1561 DUP6 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xE146AF6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE3D91BFC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x166B JUMPI POP DUP4 DUP6 EQ JUMPDEST ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EEB0DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0x16F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80275D3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x42B0E56F00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1750 SWAP2 SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1791 SWAP2 SWAP1 PUSH2 0x3E4E JUMP JUMPDEST PUSH2 0x17C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF413CF9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D2 DUP6 DUP8 DUP7 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0x17DD DUP8 DUP8 DUP8 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x17EA DUP3 DUP8 DUP4 DUP8 DUP10 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x184B DUP6 DUP6 DUP9 PUSH2 0x2D5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x189A SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18AF DUP3 DUP8 DUP4 DUP8 DUP10 DUP9 PUSH2 0x29BF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x2E06 JUMP JUMPDEST PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x89BA7E1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190D DUP3 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A0A DUP4 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A74 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE146AF6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ADA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE3D91BFC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AE5 DUP6 DUP6 DUP6 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x1AF3 DUP3 DUP6 DUP4 PUSH1 0x0 DUP8 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B42 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B55 DUP4 PUSH1 0x0 DUP7 PUSH2 0x2D5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BA4 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1C67 SWAP3 SWAP2 SWAP1 PUSH2 0x3F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C7A DUP6 DUP6 DUP6 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x1C88 DUP3 DUP6 DUP4 PUSH1 0x0 DUP8 PUSH2 0x2E7A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1CCD PUSH2 0x1CC7 PUSH2 0x18FA JUMP JUMPDEST DUP3 PUSH2 0x2E81 JUMP JUMPDEST PUSH2 0x1D03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2728A9D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x1D56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8AC3CB1400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D5F DUP3 PUSH2 0x2F16 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x337A JUMP JUMPDEST DUP2 PUSH32 0x8AC4A0D65950C3E40448AFB2260E2E0EC36EA15644D9B39E37E85472E5F94451 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1DB4 DUP3 PUSH2 0x2F19 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DC6 DUP6 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1DD6 DUP7 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E27 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E3A DUP2 PUSH1 0x0 DUP9 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x1E49 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP11 PUSH2 0x2D54 JUMP JUMPDEST PUSH2 0x1E54 PUSH1 0x0 DUP8 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x1E5D DUP7 PUSH2 0x2F1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E68 DUP8 PUSH2 0xD79 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1E89 SWAP2 SWAP1 PUSH2 0x337A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1EA8 SWAP2 SWAP1 PUSH2 0x337A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2130 JUMPI DUP10 DUP4 LT PUSH2 0x1FB1 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F68 JUMPI PUSH2 0x1F67 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x4CB93AD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA8 SWAP3 SWAP2 SWAP1 PUSH2 0x3F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FC8 JUMPI PUSH2 0x1FC7 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP3 DUP11 SUB SWAP4 POP PUSH1 0x1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x205B JUMPI PUSH2 0x205A PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB390C0AB DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2095 JUMPI PUSH2 0x2094 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 DUP9 PUSH2 0x20AE SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20CB SWAP3 SWAP2 SWAP1 PUSH2 0x3FA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x210E SWAP2 SWAP1 PUSH2 0x3FE7 JUMP JUMPDEST PUSH2 0x2118 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST DUP4 PUSH2 0x2123 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1F27 JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x2182 DUP6 PUSH1 0x0 DUP13 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x2191 DUP8 PUSH1 0x0 DUP9 PUSH1 0x0 DUP15 PUSH2 0x2E7A JUMP JUMPDEST DUP10 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP10 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x224F SWAP3 SWAP2 SWAP1 PUSH2 0x3F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP8 POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2271 DUP4 DUP4 PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x227E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x3010 JUMP JUMPDEST PUSH2 0x22B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB5663700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22C4 DUP5 DUP5 DUP5 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x22D0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3010 JUMP JUMPDEST PUSH2 0x2306 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB5663700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2314 PUSH2 0x334A JUMP JUMPDEST DUP3 ISZERO PUSH2 0x232B JUMPI PUSH2 0x2324 DUP10 DUP8 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP PUSH2 0x2338 JUMP JUMPDEST PUSH2 0x2335 DUP10 DUP8 PUSH2 0x896 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2343 DUP2 DUP7 DUP7 PUSH2 0x318E JUMP JUMPDEST PUSH2 0x2350 DUP10 DUP8 DUP8 DUP8 DUP8 PUSH2 0x320D JUMP JUMPDEST DUP3 ISZERO PUSH2 0x2377 JUMPI PUSH2 0x2372 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH2 0x3214 JUMP JUMPDEST PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH2 0x23E7 PUSH1 0x4 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH2 0x3214 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2517 JUMPI PUSH1 0x0 DUP8 SUB PUSH2 0x249A JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP11 DUP8 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2463 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4093 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x247D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2491 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2516 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x64C0A3A ADDRESS DUP11 DUP5 PUSH1 0x0 ADD MLOAD DUP12 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2511 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH32 0x2BEDEE38CDB22411C14554191243C0E117C0088DDAE3459876ACD46A0FD53815 DUP10 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2561 SWAP3 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2576 DUP10 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3337 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x258B DUP6 PUSH2 0xA19 JUMP JUMPDEST MLOAD GT PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9136D24F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25CF DUP6 DUP6 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP PUSH2 0x25DC DUP2 DUP5 DUP5 PUSH2 0x318E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2666 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFF33650C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2672 DUP6 DUP6 DUP6 DUP6 PUSH2 0x333E JUMP JUMPDEST PUSH2 0x268E PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH2 0x3214 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0x29486B9E2AE569B440933A9B1B421467306FA21F3DCAD439C262910A634963A9 DUP8 PUSH1 0x40 MLOAD PUSH2 0x27BC SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x27D0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3344 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x283D JUMPI PUSH1 0x40 MLOAD PUSH32 0x25BD6BD300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2846 DUP3 PUSH2 0x2E06 JUMP JUMPDEST ISZERO PUSH2 0x287D JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5A8D37100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x28B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x238924D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28C3 PUSH1 0x0 DUP5 DUP5 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x28D2 PUSH1 0x0 DUP5 PUSH1 0x0 DUP5 DUP7 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2921 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x635490CC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A01 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4162 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2A3E DUP8 DUP8 DUP6 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x2A4B DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2E7A JUMP JUMPDEST DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2B06 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2B25 DUP5 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2B6A JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP PUSH2 0x2BED JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2BAA JUMPI POP PUSH2 0x2BA9 DUP3 DUP7 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2BE8 JUMPI POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BD0 DUP6 PUSH2 0x6E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x2D17 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB25FB7A DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C3D SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x41A0 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP1 PUSH2 0x2C92 JUMPI POP POP POP POP PUSH2 0x2D4A JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2CCC JUMPI POP DUP7 DUP3 EQ JUMPDEST ISZERO PUSH2 0x2D03 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF911968900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SWAP6 POP DUP2 SWAP5 POP DUP4 PUSH1 0x1 ADD SWAP4 POP POP POP POP PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xEB20C44200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x2DF8 PUSH1 0x0 DUP5 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x2E01 DUP4 PUSH2 0x2F1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E8D DUP4 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2ECF JUMPI POP PUSH2 0x2ECE DUP2 DUP6 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2F0D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EF5 DUP5 PUSH2 0x6E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F2B DUP3 DUP3 PUSH1 0x0 PUSH2 0x27D7 JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0x2FE9 SWAP3 SWAP2 SWAP1 PUSH2 0x41F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2FFD PUSH1 0x0 DUP4 DUP4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x300C PUSH1 0x0 DUP4 PUSH1 0x0 DUP1 DUP6 PUSH2 0x2E7A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST ISZERO PUSH2 0x3181 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x305A PUSH2 0x18FA JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4093 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x30B8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30B5 SWAP2 SWAP1 PUSH2 0x4231 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3131 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x30E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x3129 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB5663700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x31D1 JUMPI POP DUP3 PUSH1 0x0 ADD MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x3208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37D6CE9000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x3226 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3237 JUMPI PUSH2 0x3236 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3258 JUMPI PUSH2 0x3257 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x32EB JUMPI PUSH2 0x32EA PUSH2 0x425E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x339B SWAP2 SWAP1 PUSH2 0x339E JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x33E0 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0x2 ADD PUSH2 0x339F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x342D DUP2 PUSH2 0x33F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x344A DUP2 PUSH2 0x3424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3466 JUMPI PUSH2 0x3465 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3474 DUP5 DUP3 DUP6 ADD PUSH2 0x343B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3492 DUP2 PUSH2 0x347D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DE DUP3 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34EE DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x350B DUP2 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3524 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP2 EQ PUSH2 0x352F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3541 DUP2 PUSH2 0x351B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x359A DUP3 PUSH2 0x3551 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x35B9 JUMPI PUSH2 0x35B8 PUSH2 0x3562 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CC PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x35D8 DUP3 DUP3 PUSH2 0x3591 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35F8 JUMPI PUSH2 0x35F7 PUSH2 0x3562 JUMP JUMPDEST JUMPDEST PUSH2 0x3601 DUP3 PUSH2 0x3551 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3630 PUSH2 0x362B DUP5 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x35C2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x364C JUMPI PUSH2 0x364B PUSH2 0x354C JUMP JUMPDEST JUMPDEST PUSH2 0x3657 DUP5 DUP3 DUP6 PUSH2 0x360E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3674 JUMPI PUSH2 0x3673 PUSH2 0x3547 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3684 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x361D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x36A9 JUMPI PUSH2 0x36A8 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36B7 DUP9 DUP3 DUP10 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C8 DUP9 DUP3 DUP10 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x36D9 DUP9 DUP3 DUP10 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x36EA DUP9 DUP3 DUP10 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x370B JUMPI PUSH2 0x370A PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3717 DUP9 DUP3 DUP10 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x373A JUMPI PUSH2 0x3739 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3748 DUP5 DUP3 DUP6 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x375A DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3792 JUMPI PUSH2 0x3791 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37A0 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37B1 DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37D4 JUMPI PUSH2 0x37D3 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37E2 DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x37F3 DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3804 DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3825 JUMPI PUSH2 0x3824 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3833 DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3844 DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3857 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3866 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3882 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x384E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3895 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x385D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x38B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x386C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38F8 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x384E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x390B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x385D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391D DUP4 DUP4 PUSH2 0x38E2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3941 DUP3 PUSH2 0x38B6 JUMP JUMPDEST PUSH2 0x394B DUP2 DUP6 PUSH2 0x38C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3956 DUP4 PUSH2 0x38D2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3987 JUMPI DUP2 MLOAD PUSH2 0x396E DUP9 DUP3 PUSH2 0x3911 JUMP JUMPDEST SWAP8 POP PUSH2 0x3979 DUP4 PUSH2 0x3929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x395A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39AE DUP2 DUP5 PUSH2 0x3936 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39CF JUMPI PUSH2 0x39CE PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39DD DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x39EE DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A0F JUMPI PUSH2 0x3A0E PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3A1B DUP7 DUP3 DUP8 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3B JUMPI PUSH2 0x3A3A PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A49 DUP5 DUP3 DUP6 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A5B DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A85 DUP2 PUSH2 0x347D JUMP JUMPDEST DUP2 EQ PUSH2 0x3A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AA2 DUP2 PUSH2 0x3A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3ABF JUMPI PUSH2 0x3ABE PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ACD DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3ADE DUP6 DUP3 DUP7 ADD PUSH2 0x3A93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3B02 JUMPI PUSH2 0x3B01 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B10 DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3B21 DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3B32 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B53 JUMPI PUSH2 0x3B52 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3B5F DUP8 DUP3 DUP9 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3B8C JUMPI PUSH2 0x3B8B PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B9A DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x3BAB DUP12 DUP3 DUP13 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x3BBC DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x3BCD DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x3BDE DUP12 DUP3 DUP13 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x3BEF DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x3C00 DUP12 DUP3 DUP13 ADD PUSH2 0x3A93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C21 JUMPI PUSH2 0x3C20 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3C2D DUP12 DUP3 DUP13 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C57 JUMPI PUSH2 0x3C56 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C65 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3C76 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3C87 DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3C98 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CBB JUMPI PUSH2 0x3CBA PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CC9 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3CDA DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CFE JUMPI PUSH2 0x3CFD PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D0C DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D1D DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D2E DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D4F JUMPI PUSH2 0x3D4E PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3D5B DUP8 DUP3 DUP9 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D7C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x3D89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x3D96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3489 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3DDC DUP2 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DF8 JUMPI PUSH2 0x3DF7 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E06 DUP5 DUP3 DUP6 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E18 DUP2 PUSH2 0x33F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E48 DUP2 PUSH2 0x3A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E64 JUMPI PUSH2 0x3E63 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E72 DUP5 DUP3 DUP6 ADD PUSH2 0x3E39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EB5 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC0 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3ED8 JUMPI PUSH2 0x3ED7 PUSH2 0x3E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE9 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF4 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F0C JUMPI PUSH2 0x3F0B PUSH2 0x3E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F41 PUSH2 0x3F3C PUSH2 0x3F37 DUP5 PUSH2 0x3F12 JUMP JUMPDEST PUSH2 0x3F1C JUMP JUMPDEST PUSH2 0x3511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F51 DUP2 PUSH2 0x3F26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F6C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x3F79 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F95 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x3FA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FBE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x3FCB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3FE1 DUP2 PUSH2 0x351B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FFD JUMPI PUSH2 0x3FFC PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x400B DUP5 DUP3 DUP6 ADD PUSH2 0x3FD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x404E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4033 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4065 DUP3 PUSH2 0x4014 JUMP JUMPDEST PUSH2 0x406F DUP2 DUP6 PUSH2 0x401F JUMP JUMPDEST SWAP4 POP PUSH2 0x407F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4030 JUMP JUMPDEST PUSH2 0x4088 DUP2 PUSH2 0x3551 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x40A8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x40B5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x40C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x40D4 DUP2 DUP5 PUSH2 0x405A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x40F4 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x4101 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x410E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x411B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x412D DUP2 DUP5 PUSH2 0x405A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x414E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x415B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3489 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4177 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x4184 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4196 DUP2 DUP5 PUSH2 0x405A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x41B9 JUMPI PUSH2 0x41B8 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41C7 DUP7 DUP3 DUP8 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x41D8 DUP7 DUP3 DUP8 ADD PUSH2 0x3FD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x41E9 DUP7 DUP3 DUP8 ADD PUSH2 0x3E39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4208 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3F48 JUMP JUMPDEST PUSH2 0x4215 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x422B DUP2 PUSH2 0x3424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4247 JUMPI PUSH2 0x4246 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4255 DUP5 DUP3 DUP6 ADD PUSH2 0x421C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x4D210640773C466A835B430E56FB71BDBE1AF0B872D0E77F56C1DFBD854DFC64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "15661:56561:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_acceptChild_2515": {
									"entryPoint": 9601,
									"id": 2515,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_afterAcceptChild_2997": {
									"entryPoint": 13124,
									"id": 2997,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_afterAddChild_2971": {
									"entryPoint": 7351,
									"id": 2971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterNestedTokenTransfer_2949": {
									"entryPoint": 11898,
									"id": 2949,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_afterRejectAllChildren_3041": {
									"entryPoint": 12057,
									"id": 3041,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_2919": {
									"entryPoint": 11893,
									"id": 2919,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterTransferChild_3027": {
									"entryPoint": 13111,
									"id": 3027,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_approve_2111": {
									"entryPoint": 6402,
									"id": 2111,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeAcceptChild_2984": {
									"entryPoint": 13118,
									"id": 2984,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeAddChild_2960": {
									"entryPoint": 7346,
									"id": 2960,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeNestedTokenTransfer_2934": {
									"entryPoint": 11604,
									"id": 2934,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_beforeRejectAllChildren_3034": {
									"entryPoint": 12054,
									"id": 3034,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2908": {
									"entryPoint": 11599,
									"id": 2908,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTransferChild_3012": {
									"entryPoint": 12813,
									"id": 3012,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_burn_1969": {
									"entryPoint": 7608,
									"id": 1969,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkExpectedChild_2768": {
									"entryPoint": 12686,
									"id": 2768,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkForInheritanceLoop_1424": {
									"entryPoint": 11251,
									"id": 1424,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2323": {
									"entryPoint": 12304,
									"id": 2323,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_cleanApprovals_2150": {
									"entryPoint": 12060,
									"id": 2150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_exists_2262": {
									"entryPoint": 11782,
									"id": 2262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_innerMint_1647": {
									"entryPoint": 10199,
									"id": 1647,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_isApprovedOrDirectOwner_2228": {
									"entryPoint": 11031,
									"id": 2228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2183": {
									"entryPoint": 11905,
									"id": 2183,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1524": {
									"entryPoint": 12063,
									"id": 1524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_502": {
									"entryPoint": 6394,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nestMint_1577": {
									"entryPoint": 4788,
									"id": 1577,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_nestTransfer_1297": {
									"entryPoint": 5461,
									"id": 1297,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_onlyApprovedOrDirectOwner_890": {
									"entryPoint": 5387,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_onlyApprovedOrOwner_862": {
									"entryPoint": 7356,
									"id": 862,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_rejectAllChildren_2568": {
									"entryPoint": 7430,
									"id": 2568,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removeChildByIndex_3068": {
									"entryPoint": 12820,
									"id": 3068,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireMinted_2243": {
									"entryPoint": 6328,
									"id": 2243,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_1439": {
									"entryPoint": 4515,
									"id": 1439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1469": {
									"entryPoint": 8807,
									"id": 1469,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_1078": {
									"entryPoint": 8889,
									"id": 1078,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_sendToNFT_1357": {
									"entryPoint": 10687,
									"id": 1357,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_transferChild_2744": {
									"entryPoint": 8972,
									"id": 2744,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_transfer_1174": {
									"entryPoint": 6654,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateOwnerAndClearApprovals_2143": {
									"entryPoint": 11611,
									"id": 2143,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@acceptChild_2424": {
									"entryPoint": 4611,
									"id": 2424,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@addChild_2401": {
									"entryPoint": 2964,
									"id": 2401,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_2011": {
									"entryPoint": 1906,
									"id": 2011,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_961": {
									"entryPoint": 3665,
									"id": 961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1736": {
									"entryPoint": 2570,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_1755": {
									"entryPoint": 4484,
									"id": 1755,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@childIsInActive_2897": {
									"entryPoint": 2444,
									"id": 2897,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@childOf_2845": {
									"entryPoint": 2198,
									"id": 2845,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@childrenOf_2790": {
									"entryPoint": 3449,
									"id": 2790,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@directOwnerOf_1724": {
									"entryPoint": 5114,
									"id": 1724,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getApproved_2032": {
									"entryPoint": 1767,
									"id": 2032,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2082": {
									"entryPoint": 4640,
									"id": 2082,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 7311,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nestTransferFrom_1048": {
									"entryPoint": 1736,
									"id": 1048,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@ownerOf_1683": {
									"entryPoint": 2801,
									"id": 1683,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@pendingChildOf_2878": {
									"entryPoint": 4238,
									"id": 2878,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@pendingChildrenOf_2812": {
									"entryPoint": 2585,
									"id": 2812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rejectAllChildren_2532": {
									"entryPoint": 3838,
									"id": 2532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1022": {
									"entryPoint": 4545,
									"id": 1022,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_999": {
									"entryPoint": 2538,
									"id": 999,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_2065": {
									"entryPoint": 3863,
									"id": 2065,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_938": {
									"entryPoint": 1318,
									"id": 938,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferChild_2603": {
									"entryPoint": 4574,
									"id": 2603,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@transferFrom_981": {
									"entryPoint": 2171,
									"id": 981,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 13853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 13564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 15821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 14995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 15929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 13371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 16924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 13919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 13618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 16338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 14885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 15842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 15524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 14267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 15080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 13965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 15016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 14203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bool_fromMemory": {
									"entryPoint": 16800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 15588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 15950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 13392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 16945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 14116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 16359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_addresst_uint256t_boolt_bytes_memory_ptr": {
									"entryPoint": 15211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 14350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 15421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 14774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr": {
									"entryPoint": 14609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 14429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 14161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 14646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 13449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 15887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 16474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 16200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr": {
									"entryPoint": 14562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr_fromStack": {
									"entryPoint": 14444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 14414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 14930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 14176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 16531,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 16607,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 16256,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 15719,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 14740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 13464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 15902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 16883,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Child_$592_memory_ptr__to_t_struct$_Child_$592_memory_ptr__fromStack_reversed": {
									"entryPoint": 14491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 14945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 16697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 16215,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 16297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 16738,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 13762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 13284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 13789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 14546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 14518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 16404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 14633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 14529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 16415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 16094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 16042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 13523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 13437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 13304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 16146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 13491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 13585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 16166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 13838,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 16432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 13713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 16156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 15995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 16990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 15774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 13666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 13639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 13644,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 13299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 13294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 13649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 13541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 14972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 13348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 13595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28364:7",
										"nodeType": "YulBlock",
										"src": "0:28364:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "378:105:7",
													"nodeType": "YulBlock",
													"src": "378:105:7",
													"statements": [
														{
															"nativeSrc": "388:89:7",
															"nodeType": "YulAssignment",
															"src": "388:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:7",
																		"nodeType": "YulLiteral",
																		"src": "410:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nativeSrc": "399:78:7",
																"nodeType": "YulFunctionCall",
																"src": "399:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:7",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:7",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:149:7"
											},
											{
												"body": {
													"nativeSrc": "531:78:7",
													"nodeType": "YulBlock",
													"src": "531:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:7",
																"nodeType": "YulBlock",
																"src": "587:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:7",
																					"nodeType": "YulLiteral",
																					"src": "596:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "599:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:7"
																			},
																			"nativeSrc": "589:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:7"
																		},
																		"nativeSrc": "589:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:7"
																				},
																				"nativeSrc": "561:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:7"
																		},
																		"nativeSrc": "551:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:7"
																},
																"nativeSrc": "544:42:7",
																"nodeType": "YulFunctionCall",
																"src": "544:42:7"
															},
															"nativeSrc": "541:62:7",
															"nodeType": "YulIf",
															"src": "541:62:7"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:7",
														"nodeType": "YulTypedName",
														"src": "524:5:7",
														"type": ""
													}
												],
												"src": "489:120:7"
											},
											{
												"body": {
													"nativeSrc": "666:86:7",
													"nodeType": "YulBlock",
													"src": "666:86:7",
													"statements": [
														{
															"nativeSrc": "676:29:7",
															"nodeType": "YulAssignment",
															"src": "676:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:7"
																},
																"nativeSrc": "685:20:7",
																"nodeType": "YulFunctionCall",
																"src": "685:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:7"
																},
																"nativeSrc": "714:32:7",
																"nodeType": "YulFunctionCall",
																"src": "714:32:7"
															},
															"nativeSrc": "714:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:7",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:7",
														"nodeType": "YulTypedName",
														"src": "652:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:7",
														"nodeType": "YulTypedName",
														"src": "660:5:7",
														"type": ""
													}
												],
												"src": "615:137:7"
											},
											{
												"body": {
													"nativeSrc": "823:262:7",
													"nodeType": "YulBlock",
													"src": "823:262:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:7",
																"nodeType": "YulBlock",
																"src": "869:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:7"
																			},
																			"nativeSrc": "871:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:7"
																		},
																		"nativeSrc": "871:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:7"
																		},
																		"nativeSrc": "840:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:7",
																		"nodeType": "YulLiteral",
																		"src": "865:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:7"
																},
																"nativeSrc": "836:32:7",
																"nodeType": "YulFunctionCall",
																"src": "836:32:7"
															},
															"nativeSrc": "833:119:7",
															"nodeType": "YulIf",
															"src": "833:119:7"
														},
														{
															"nativeSrc": "962:116:7",
															"nodeType": "YulBlock",
															"src": "962:116:7",
															"statements": [
																{
																	"nativeSrc": "977:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:7",
																		"nodeType": "YulLiteral",
																		"src": "991:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:7",
																			"nodeType": "YulTypedName",
																			"src": "981:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:7",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:7"
																				},
																				"nativeSrc": "1036:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:7"
																		},
																		"nativeSrc": "1016:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:7",
														"nodeType": "YulTypedName",
														"src": "793:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:7",
														"nodeType": "YulTypedName",
														"src": "804:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:7",
														"nodeType": "YulTypedName",
														"src": "816:6:7",
														"type": ""
													}
												],
												"src": "758:327:7"
											},
											{
												"body": {
													"nativeSrc": "1133:48:7",
													"nodeType": "YulBlock",
													"src": "1133:48:7",
													"statements": [
														{
															"nativeSrc": "1143:32:7",
															"nodeType": "YulAssignment",
															"src": "1143:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:7"
																		},
																		"nativeSrc": "1161:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:7"
																},
																"nativeSrc": "1154:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:7",
														"nodeType": "YulTypedName",
														"src": "1115:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:7",
														"nodeType": "YulTypedName",
														"src": "1125:7:7",
														"type": ""
													}
												],
												"src": "1091:90:7"
											},
											{
												"body": {
													"nativeSrc": "1246:50:7",
													"nodeType": "YulBlock",
													"src": "1246:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:7"
																		},
																		"nativeSrc": "1268:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:7"
																},
																"nativeSrc": "1256:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:7"
															},
															"nativeSrc": "1256:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:7",
														"nodeType": "YulTypedName",
														"src": "1234:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:7",
														"nodeType": "YulTypedName",
														"src": "1241:3:7",
														"type": ""
													}
												],
												"src": "1187:109:7"
											},
											{
												"body": {
													"nativeSrc": "1394:118:7",
													"nodeType": "YulBlock",
													"src": "1394:118:7",
													"statements": [
														{
															"nativeSrc": "1404:26:7",
															"nodeType": "YulAssignment",
															"src": "1404:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:7"
																},
																"nativeSrc": "1412:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:7"
																		},
																		"nativeSrc": "1487:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:7"
																},
																"nativeSrc": "1440:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:7"
															},
															"nativeSrc": "1440:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:7",
														"nodeType": "YulTypedName",
														"src": "1366:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:7",
														"nodeType": "YulTypedName",
														"src": "1378:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:7",
														"nodeType": "YulTypedName",
														"src": "1389:4:7",
														"type": ""
													}
												],
												"src": "1302:210:7"
											},
											{
												"body": {
													"nativeSrc": "1563:81:7",
													"nodeType": "YulBlock",
													"src": "1563:81:7",
													"statements": [
														{
															"nativeSrc": "1573:65:7",
															"nodeType": "YulAssignment",
															"src": "1573:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:7"
																},
																"nativeSrc": "1584:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:7",
														"nodeType": "YulTypedName",
														"src": "1545:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:7",
														"nodeType": "YulTypedName",
														"src": "1555:7:7",
														"type": ""
													}
												],
												"src": "1518:126:7"
											},
											{
												"body": {
													"nativeSrc": "1695:51:7",
													"nodeType": "YulBlock",
													"src": "1695:51:7",
													"statements": [
														{
															"nativeSrc": "1705:35:7",
															"nodeType": "YulAssignment",
															"src": "1705:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:7"
																},
																"nativeSrc": "1716:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:7",
														"nodeType": "YulTypedName",
														"src": "1677:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:7",
														"nodeType": "YulTypedName",
														"src": "1687:7:7",
														"type": ""
													}
												],
												"src": "1650:96:7"
											},
											{
												"body": {
													"nativeSrc": "1795:79:7",
													"nodeType": "YulBlock",
													"src": "1795:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:7",
																"nodeType": "YulBlock",
																"src": "1852:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:7"
																			},
																			"nativeSrc": "1854:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:7"
																		},
																		"nativeSrc": "1854:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:7"
																				},
																				"nativeSrc": "1825:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:7"
																		},
																		"nativeSrc": "1815:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:7"
																},
																"nativeSrc": "1808:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:7"
															},
															"nativeSrc": "1805:63:7",
															"nodeType": "YulIf",
															"src": "1805:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:7",
														"nodeType": "YulTypedName",
														"src": "1788:5:7",
														"type": ""
													}
												],
												"src": "1752:122:7"
											},
											{
												"body": {
													"nativeSrc": "1932:87:7",
													"nodeType": "YulBlock",
													"src": "1932:87:7",
													"statements": [
														{
															"nativeSrc": "1942:29:7",
															"nodeType": "YulAssignment",
															"src": "1942:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:7"
																},
																"nativeSrc": "1951:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:7"
																},
																"nativeSrc": "1980:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:7"
															},
															"nativeSrc": "1980:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:7",
														"nodeType": "YulTypedName",
														"src": "1910:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:7",
														"nodeType": "YulTypedName",
														"src": "1918:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:7",
														"nodeType": "YulTypedName",
														"src": "1926:5:7",
														"type": ""
													}
												],
												"src": "1880:139:7"
											},
											{
												"body": {
													"nativeSrc": "2070:32:7",
													"nodeType": "YulBlock",
													"src": "2070:32:7",
													"statements": [
														{
															"nativeSrc": "2080:16:7",
															"nodeType": "YulAssignment",
															"src": "2080:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2091:5:7",
																"nodeType": "YulIdentifier",
																"src": "2091:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2080:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2025:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2052:5:7",
														"nodeType": "YulTypedName",
														"src": "2052:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2062:7:7",
														"nodeType": "YulTypedName",
														"src": "2062:7:7",
														"type": ""
													}
												],
												"src": "2025:77:7"
											},
											{
												"body": {
													"nativeSrc": "2151:79:7",
													"nodeType": "YulBlock",
													"src": "2151:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:7",
																"nodeType": "YulBlock",
																"src": "2208:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:7"
																			},
																			"nativeSrc": "2210:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:7"
																		},
																		"nativeSrc": "2210:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2181:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:7"
																				},
																				"nativeSrc": "2181:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:7"
																		},
																		"nativeSrc": "2171:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:7"
																},
																"nativeSrc": "2164:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:7"
															},
															"nativeSrc": "2161:63:7",
															"nodeType": "YulIf",
															"src": "2161:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2108:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:7",
														"nodeType": "YulTypedName",
														"src": "2144:5:7",
														"type": ""
													}
												],
												"src": "2108:122:7"
											},
											{
												"body": {
													"nativeSrc": "2288:87:7",
													"nodeType": "YulBlock",
													"src": "2288:87:7",
													"statements": [
														{
															"nativeSrc": "2298:29:7",
															"nodeType": "YulAssignment",
															"src": "2298:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:7"
																},
																"nativeSrc": "2307:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2336:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:7"
																},
																"nativeSrc": "2336:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:7"
															},
															"nativeSrc": "2336:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2236:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:7",
														"nodeType": "YulTypedName",
														"src": "2266:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:7",
														"nodeType": "YulTypedName",
														"src": "2274:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:7",
														"nodeType": "YulTypedName",
														"src": "2282:5:7",
														"type": ""
													}
												],
												"src": "2236:139:7"
											},
											{
												"body": {
													"nativeSrc": "2470:28:7",
													"nodeType": "YulBlock",
													"src": "2470:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2487:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2490:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2490:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2480:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:7"
																},
																"nativeSrc": "2480:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2480:12:7"
															},
															"nativeSrc": "2480:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2480:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2381:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2381:117:7"
											},
											{
												"body": {
													"nativeSrc": "2593:28:7",
													"nodeType": "YulBlock",
													"src": "2593:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2610:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:7"
																},
																"nativeSrc": "2603:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2603:12:7"
															},
															"nativeSrc": "2603:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2603:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "2504:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2504:117:7"
											},
											{
												"body": {
													"nativeSrc": "2675:54:7",
													"nodeType": "YulBlock",
													"src": "2675:54:7",
													"statements": [
														{
															"nativeSrc": "2685:38:7",
															"nodeType": "YulAssignment",
															"src": "2685:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2703:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2703:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2710:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2710:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2699:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2699:3:7"
																		},
																		"nativeSrc": "2699:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2699:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2719:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2719:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:7"
																		},
																		"nativeSrc": "2715:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2715:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2695:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:7"
																},
																"nativeSrc": "2695:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2695:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2685:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2685:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2627:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2658:5:7",
														"nodeType": "YulTypedName",
														"src": "2658:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2668:6:7",
														"nodeType": "YulTypedName",
														"src": "2668:6:7",
														"type": ""
													}
												],
												"src": "2627:102:7"
											},
											{
												"body": {
													"nativeSrc": "2763:152:7",
													"nodeType": "YulBlock",
													"src": "2763:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2780:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2783:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2783:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:7"
																},
																"nativeSrc": "2773:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2773:88:7"
															},
															"nativeSrc": "2773:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2773:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2877:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2880:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2880:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:7"
																},
																"nativeSrc": "2870:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2870:15:7"
															},
															"nativeSrc": "2870:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2870:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2901:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2901:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2904:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2904:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2894:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:7"
																},
																"nativeSrc": "2894:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2894:15:7"
															},
															"nativeSrc": "2894:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2894:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2735:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:180:7"
											},
											{
												"body": {
													"nativeSrc": "2964:238:7",
													"nodeType": "YulBlock",
													"src": "2964:238:7",
													"statements": [
														{
															"nativeSrc": "2974:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2974:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2996:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3026:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3026:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3004:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "3004:21:7"
																		},
																		"nativeSrc": "3004:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2992:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:7"
																},
																"nativeSrc": "2992:40:7",
																"nodeType": "YulFunctionCall",
																"src": "2992:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2978:10:7",
																	"nodeType": "YulTypedName",
																	"src": "2978:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3143:22:7",
																"nodeType": "YulBlock",
																"src": "3143:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3145:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3145:16:7"
																			},
																			"nativeSrc": "3145:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3145:18:7"
																		},
																		"nativeSrc": "3145:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3145:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3086:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "3086:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3098:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3098:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3083:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3083:2:7"
																		},
																		"nativeSrc": "3083:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3122:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "3122:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3134:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3119:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3119:2:7"
																		},
																		"nativeSrc": "3119:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3119:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3080:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3080:2:7"
																},
																"nativeSrc": "3080:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3080:62:7"
															},
															"nativeSrc": "3077:88:7",
															"nodeType": "YulIf",
															"src": "3077:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3181:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3181:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3185:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "3185:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3174:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3174:6:7"
																},
																"nativeSrc": "3174:22:7",
																"nodeType": "YulFunctionCall",
																"src": "3174:22:7"
															},
															"nativeSrc": "3174:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "3174:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2921:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2950:6:7",
														"nodeType": "YulTypedName",
														"src": "2950:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2958:4:7",
														"nodeType": "YulTypedName",
														"src": "2958:4:7",
														"type": ""
													}
												],
												"src": "2921:281:7"
											},
											{
												"body": {
													"nativeSrc": "3249:88:7",
													"nodeType": "YulBlock",
													"src": "3249:88:7",
													"statements": [
														{
															"nativeSrc": "3259:30:7",
															"nodeType": "YulAssignment",
															"src": "3259:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "3269:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3269:18:7"
																},
																"nativeSrc": "3269:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3269:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3259:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3318:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "3326:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3326:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "3298:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "3298:19:7"
																},
																"nativeSrc": "3298:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3298:33:7"
															},
															"nativeSrc": "3298:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3298:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3208:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3233:4:7",
														"nodeType": "YulTypedName",
														"src": "3233:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3242:6:7",
														"nodeType": "YulTypedName",
														"src": "3242:6:7",
														"type": ""
													}
												],
												"src": "3208:129:7"
											},
											{
												"body": {
													"nativeSrc": "3409:241:7",
													"nodeType": "YulBlock",
													"src": "3409:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3514:22:7",
																"nodeType": "YulBlock",
																"src": "3514:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3516:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3516:16:7"
																			},
																			"nativeSrc": "3516:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3516:18:7"
																		},
																		"nativeSrc": "3516:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3516:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3486:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3494:18:7",
																		"nodeType": "YulLiteral",
																		"src": "3494:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3483:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3483:2:7"
																},
																"nativeSrc": "3483:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3483:30:7"
															},
															"nativeSrc": "3480:56:7",
															"nodeType": "YulIf",
															"src": "3480:56:7"
														},
														{
															"nativeSrc": "3546:37:7",
															"nodeType": "YulAssignment",
															"src": "3546:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3576:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3576:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "3554:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "3554:21:7"
																},
																"nativeSrc": "3554:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3554:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3546:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3546:4:7"
																}
															]
														},
														{
															"nativeSrc": "3620:23:7",
															"nodeType": "YulAssignment",
															"src": "3620:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3632:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3632:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3638:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3638:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3628:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:7"
																},
																"nativeSrc": "3628:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3628:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3620:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "3343:307:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3393:6:7",
														"nodeType": "YulTypedName",
														"src": "3393:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3404:4:7",
														"nodeType": "YulTypedName",
														"src": "3404:4:7",
														"type": ""
													}
												],
												"src": "3343:307:7"
											},
											{
												"body": {
													"nativeSrc": "3720:82:7",
													"nodeType": "YulBlock",
													"src": "3720:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3743:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3743:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3748:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3748:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3753:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3753:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3730:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3730:12:7"
																},
																"nativeSrc": "3730:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3730:30:7"
															},
															"nativeSrc": "3730:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3730:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3780:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3780:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3785:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3776:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:7"
																		},
																		"nativeSrc": "3776:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3794:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3794:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:7"
																},
																"nativeSrc": "3769:27:7",
																"nodeType": "YulFunctionCall",
																"src": "3769:27:7"
															},
															"nativeSrc": "3769:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "3769:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "3656:146:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3702:3:7",
														"nodeType": "YulTypedName",
														"src": "3702:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3707:3:7",
														"nodeType": "YulTypedName",
														"src": "3707:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3712:6:7",
														"nodeType": "YulTypedName",
														"src": "3712:6:7",
														"type": ""
													}
												],
												"src": "3656:146:7"
											},
											{
												"body": {
													"nativeSrc": "3891:340:7",
													"nodeType": "YulBlock",
													"src": "3891:340:7",
													"statements": [
														{
															"nativeSrc": "3901:74:7",
															"nodeType": "YulAssignment",
															"src": "3901:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3967:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3967:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "3926:40:7",
																			"nodeType": "YulIdentifier",
																			"src": "3926:40:7"
																		},
																		"nativeSrc": "3926:48:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3926:48:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3910:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "3910:15:7"
																},
																"nativeSrc": "3910:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3910:65:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3901:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3991:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3991:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3998:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3998:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:7"
																},
																"nativeSrc": "3984:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3984:21:7"
															},
															"nativeSrc": "3984:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3984:21:7"
														},
														{
															"nativeSrc": "4014:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4014:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4029:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4029:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4036:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4036:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:7"
																},
																"nativeSrc": "4025:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4025:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4018:3:7",
																	"nodeType": "YulTypedName",
																	"src": "4018:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4079:83:7",
																"nodeType": "YulBlock",
																"src": "4079:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4081:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4081:77:7"
																			},
																			"nativeSrc": "4081:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4081:79:7"
																		},
																		"nativeSrc": "4081:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4081:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4060:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4060:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4065:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4065:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4056:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:7"
																		},
																		"nativeSrc": "4056:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4056:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4074:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4053:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4053:2:7"
																},
																"nativeSrc": "4053:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4053:25:7"
															},
															"nativeSrc": "4050:112:7",
															"nodeType": "YulIf",
															"src": "4050:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4208:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4208:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "4213:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4213:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4218:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4218:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "4171:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "4171:36:7"
																},
																"nativeSrc": "4171:54:7",
																"nodeType": "YulFunctionCall",
																"src": "4171:54:7"
															},
															"nativeSrc": "4171:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "4171:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "3808:423:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3864:3:7",
														"nodeType": "YulTypedName",
														"src": "3864:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3869:6:7",
														"nodeType": "YulTypedName",
														"src": "3869:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3877:3:7",
														"nodeType": "YulTypedName",
														"src": "3877:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3885:5:7",
														"nodeType": "YulTypedName",
														"src": "3885:5:7",
														"type": ""
													}
												],
												"src": "3808:423:7"
											},
											{
												"body": {
													"nativeSrc": "4311:277:7",
													"nodeType": "YulBlock",
													"src": "4311:277:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4360:83:7",
																"nodeType": "YulBlock",
																"src": "4360:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4362:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4362:77:7"
																			},
																			"nativeSrc": "4362:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4362:79:7"
																		},
																		"nativeSrc": "4362:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4339:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4339:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4347:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4347:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4335:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4335:3:7"
																				},
																				"nativeSrc": "4335:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4335:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4354:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4354:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4331:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:7"
																		},
																		"nativeSrc": "4331:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4331:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:7"
																},
																"nativeSrc": "4324:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4324:35:7"
															},
															"nativeSrc": "4321:122:7",
															"nodeType": "YulIf",
															"src": "4321:122:7"
														},
														{
															"nativeSrc": "4452:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4452:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4479:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4466:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4466:12:7"
																},
																"nativeSrc": "4466:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4466:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4456:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4456:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4495:87:7",
															"nodeType": "YulAssignment",
															"src": "4495:87:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4555:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4555:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4563:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4563:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4551:3:7"
																		},
																		"nativeSrc": "4551:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4551:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4570:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4570:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4578:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "4504:46:7",
																	"nodeType": "YulIdentifier",
																	"src": "4504:46:7"
																},
																"nativeSrc": "4504:78:7",
																"nodeType": "YulFunctionCall",
																"src": "4504:78:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4495:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4495:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "4250:338:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4289:6:7",
														"nodeType": "YulTypedName",
														"src": "4289:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4297:3:7",
														"nodeType": "YulTypedName",
														"src": "4297:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4305:5:7",
														"nodeType": "YulTypedName",
														"src": "4305:5:7",
														"type": ""
													}
												],
												"src": "4250:338:7"
											},
											{
												"body": {
													"nativeSrc": "4737:946:7",
													"nodeType": "YulBlock",
													"src": "4737:946:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4784:83:7",
																"nodeType": "YulBlock",
																"src": "4784:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4786:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4786:77:7"
																			},
																			"nativeSrc": "4786:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4786:79:7"
																		},
																		"nativeSrc": "4786:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4786:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4758:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4758:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4767:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4754:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4754:3:7"
																		},
																		"nativeSrc": "4754:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4754:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4779:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4779:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4750:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4750:3:7"
																},
																"nativeSrc": "4750:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4750:33:7"
															},
															"nativeSrc": "4747:120:7",
															"nodeType": "YulIf",
															"src": "4747:120:7"
														},
														{
															"nativeSrc": "4877:117:7",
															"nodeType": "YulBlock",
															"src": "4877:117:7",
															"statements": [
																{
																	"nativeSrc": "4892:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4892:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4906:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4906:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4896:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4896:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4921:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4921:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4956:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4956:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4967:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4967:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4952:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4952:3:7"
																				},
																				"nativeSrc": "4952:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4952:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4976:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4976:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4931:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4931:20:7"
																		},
																		"nativeSrc": "4931:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4921:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4921:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5004:118:7",
															"nodeType": "YulBlock",
															"src": "5004:118:7",
															"statements": [
																{
																	"nativeSrc": "5019:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5019:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5033:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5033:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5023:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5023:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5049:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5049:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5084:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5084:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5095:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5095:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5080:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5080:3:7"
																				},
																				"nativeSrc": "5080:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5080:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5104:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5104:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5059:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5059:20:7"
																		},
																		"nativeSrc": "5059:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5049:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5049:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5132:118:7",
															"nodeType": "YulBlock",
															"src": "5132:118:7",
															"statements": [
																{
																	"nativeSrc": "5147:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5147:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5161:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5151:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5151:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5177:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5177:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5212:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5212:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5223:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5223:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5208:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5208:3:7"
																				},
																				"nativeSrc": "5208:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5208:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5232:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5232:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5187:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5187:20:7"
																		},
																		"nativeSrc": "5187:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5187:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5177:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5177:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5260:118:7",
															"nodeType": "YulBlock",
															"src": "5260:118:7",
															"statements": [
																{
																	"nativeSrc": "5275:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5275:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5289:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5289:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5279:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5279:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5305:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5305:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5340:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5340:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5351:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5351:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5336:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5336:3:7"
																				},
																				"nativeSrc": "5336:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5336:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5360:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5360:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5315:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5315:20:7"
																		},
																		"nativeSrc": "5315:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5315:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5305:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5305:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5388:288:7",
															"nodeType": "YulBlock",
															"src": "5388:288:7",
															"statements": [
																{
																	"nativeSrc": "5403:47:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5403:47:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5434:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5434:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5445:3:7",
																						"nodeType": "YulLiteral",
																						"src": "5445:3:7",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5430:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5430:3:7"
																				},
																				"nativeSrc": "5430:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5430:19:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5417:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "5417:12:7"
																		},
																		"nativeSrc": "5417:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5417:33:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5407:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5407:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5497:83:7",
																		"nodeType": "YulBlock",
																		"src": "5497:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5499:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "5499:77:7"
																					},
																					"nativeSrc": "5499:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5499:79:7"
																				},
																				"nativeSrc": "5499:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5499:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5469:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5469:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5477:18:7",
																				"nodeType": "YulLiteral",
																				"src": "5477:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5466:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5466:2:7"
																		},
																		"nativeSrc": "5466:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5466:30:7"
																	},
																	"nativeSrc": "5463:117:7",
																	"nodeType": "YulIf",
																	"src": "5463:117:7"
																},
																{
																	"nativeSrc": "5594:72:7",
																	"nodeType": "YulAssignment",
																	"src": "5594:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5638:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5638:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5649:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5649:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5634:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:7"
																				},
																				"nativeSrc": "5634:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5658:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5658:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "5604:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "5604:29:7"
																		},
																		"nativeSrc": "5604:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5594:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5594:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "4594:1089:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4675:9:7",
														"nodeType": "YulTypedName",
														"src": "4675:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4698:6:7",
														"nodeType": "YulTypedName",
														"src": "4698:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4706:6:7",
														"nodeType": "YulTypedName",
														"src": "4706:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4714:6:7",
														"nodeType": "YulTypedName",
														"src": "4714:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4722:6:7",
														"nodeType": "YulTypedName",
														"src": "4722:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4730:6:7",
														"nodeType": "YulTypedName",
														"src": "4730:6:7",
														"type": ""
													}
												],
												"src": "4594:1089:7"
											},
											{
												"body": {
													"nativeSrc": "5755:263:7",
													"nodeType": "YulBlock",
													"src": "5755:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5801:83:7",
																"nodeType": "YulBlock",
																"src": "5801:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5803:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5803:77:7"
																			},
																			"nativeSrc": "5803:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5803:79:7"
																		},
																		"nativeSrc": "5803:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5803:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5776:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5776:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5785:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5785:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5772:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5772:3:7"
																		},
																		"nativeSrc": "5772:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5797:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5797:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5768:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:7"
																},
																"nativeSrc": "5768:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5768:32:7"
															},
															"nativeSrc": "5765:119:7",
															"nodeType": "YulIf",
															"src": "5765:119:7"
														},
														{
															"nativeSrc": "5894:117:7",
															"nodeType": "YulBlock",
															"src": "5894:117:7",
															"statements": [
																{
																	"nativeSrc": "5909:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5909:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5923:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5923:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5913:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5913:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5938:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5938:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5973:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5973:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5984:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5984:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5969:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5969:3:7"
																				},
																				"nativeSrc": "5969:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5969:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5993:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5993:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5948:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5948:20:7"
																		},
																		"nativeSrc": "5948:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5948:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5938:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5938:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5689:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5725:9:7",
														"nodeType": "YulTypedName",
														"src": "5725:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5736:7:7",
														"nodeType": "YulTypedName",
														"src": "5736:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5748:6:7",
														"nodeType": "YulTypedName",
														"src": "5748:6:7",
														"type": ""
													}
												],
												"src": "5689:329:7"
											},
											{
												"body": {
													"nativeSrc": "6089:53:7",
													"nodeType": "YulBlock",
													"src": "6089:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6106:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6106:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6129:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6129:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6111:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6111:17:7"
																		},
																		"nativeSrc": "6111:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6111:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6099:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6099:6:7"
																},
																"nativeSrc": "6099:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6099:37:7"
															},
															"nativeSrc": "6099:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6099:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6024:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6077:5:7",
														"nodeType": "YulTypedName",
														"src": "6077:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6084:3:7",
														"nodeType": "YulTypedName",
														"src": "6084:3:7",
														"type": ""
													}
												],
												"src": "6024:118:7"
											},
											{
												"body": {
													"nativeSrc": "6246:124:7",
													"nodeType": "YulBlock",
													"src": "6246:124:7",
													"statements": [
														{
															"nativeSrc": "6256:26:7",
															"nodeType": "YulAssignment",
															"src": "6256:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6268:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6268:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6279:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6279:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6264:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:7"
																},
																"nativeSrc": "6264:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6264:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6256:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6256:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6336:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6336:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6349:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6349:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6360:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6360:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6345:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:7"
																		},
																		"nativeSrc": "6345:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6292:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6292:43:7"
																},
																"nativeSrc": "6292:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6292:71:7"
															},
															"nativeSrc": "6292:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6292:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6148:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6218:9:7",
														"nodeType": "YulTypedName",
														"src": "6218:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6230:6:7",
														"nodeType": "YulTypedName",
														"src": "6230:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6241:4:7",
														"nodeType": "YulTypedName",
														"src": "6241:4:7",
														"type": ""
													}
												],
												"src": "6148:222:7"
											},
											{
												"body": {
													"nativeSrc": "6459:391:7",
													"nodeType": "YulBlock",
													"src": "6459:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6505:83:7",
																"nodeType": "YulBlock",
																"src": "6505:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6507:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6507:77:7"
																			},
																			"nativeSrc": "6507:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6507:79:7"
																		},
																		"nativeSrc": "6507:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6507:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6480:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6480:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6489:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6489:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6476:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6476:3:7"
																		},
																		"nativeSrc": "6476:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6476:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6501:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6501:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6472:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6472:3:7"
																},
																"nativeSrc": "6472:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6472:32:7"
															},
															"nativeSrc": "6469:119:7",
															"nodeType": "YulIf",
															"src": "6469:119:7"
														},
														{
															"nativeSrc": "6598:117:7",
															"nodeType": "YulBlock",
															"src": "6598:117:7",
															"statements": [
																{
																	"nativeSrc": "6613:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6613:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6627:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6627:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6617:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6617:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6642:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6642:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6677:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6677:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6688:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6688:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6673:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6673:3:7"
																				},
																				"nativeSrc": "6673:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6673:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6697:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6697:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6652:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6652:20:7"
																		},
																		"nativeSrc": "6652:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6642:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6642:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6725:118:7",
															"nodeType": "YulBlock",
															"src": "6725:118:7",
															"statements": [
																{
																	"nativeSrc": "6740:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6740:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6754:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6754:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6744:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6744:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6770:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6770:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6805:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6805:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6816:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6816:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6801:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6801:3:7"
																				},
																				"nativeSrc": "6801:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6801:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6825:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6825:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6780:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6780:20:7"
																		},
																		"nativeSrc": "6780:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6780:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6770:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "6376:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6421:9:7",
														"nodeType": "YulTypedName",
														"src": "6421:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6432:7:7",
														"nodeType": "YulTypedName",
														"src": "6432:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6444:6:7",
														"nodeType": "YulTypedName",
														"src": "6444:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6452:6:7",
														"nodeType": "YulTypedName",
														"src": "6452:6:7",
														"type": ""
													}
												],
												"src": "6376:474:7"
											},
											{
												"body": {
													"nativeSrc": "6956:519:7",
													"nodeType": "YulBlock",
													"src": "6956:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7002:83:7",
																"nodeType": "YulBlock",
																"src": "7002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7004:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7004:77:7"
																			},
																			"nativeSrc": "7004:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7004:79:7"
																		},
																		"nativeSrc": "7004:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:7"
																		},
																		"nativeSrc": "6973:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6973:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6998:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6969:3:7"
																},
																"nativeSrc": "6969:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6969:32:7"
															},
															"nativeSrc": "6966:119:7",
															"nodeType": "YulIf",
															"src": "6966:119:7"
														},
														{
															"nativeSrc": "7095:117:7",
															"nodeType": "YulBlock",
															"src": "7095:117:7",
															"statements": [
																{
																	"nativeSrc": "7110:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7110:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7114:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7139:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7139:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7174:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7174:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7185:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7185:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7170:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7170:3:7"
																				},
																				"nativeSrc": "7170:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7170:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7194:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7194:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7149:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7149:20:7"
																		},
																		"nativeSrc": "7149:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7149:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7139:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7222:118:7",
															"nodeType": "YulBlock",
															"src": "7222:118:7",
															"statements": [
																{
																	"nativeSrc": "7237:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7237:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7251:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7241:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7241:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7267:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7267:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7302:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7302:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7313:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7313:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7298:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7298:3:7"
																				},
																				"nativeSrc": "7298:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7298:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7322:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7322:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7277:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7277:20:7"
																		},
																		"nativeSrc": "7277:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7277:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7267:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7267:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7350:118:7",
															"nodeType": "YulBlock",
															"src": "7350:118:7",
															"statements": [
																{
																	"nativeSrc": "7365:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7365:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7379:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7379:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7369:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7369:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7395:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7395:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7430:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7430:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7441:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7441:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7426:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7426:3:7"
																				},
																				"nativeSrc": "7426:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7426:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7450:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7450:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7405:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7405:20:7"
																		},
																		"nativeSrc": "7405:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7405:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7395:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7395:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6856:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6910:9:7",
														"nodeType": "YulTypedName",
														"src": "6910:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6921:7:7",
														"nodeType": "YulTypedName",
														"src": "6921:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6933:6:7",
														"nodeType": "YulTypedName",
														"src": "6933:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6941:6:7",
														"nodeType": "YulTypedName",
														"src": "6941:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6949:6:7",
														"nodeType": "YulTypedName",
														"src": "6949:6:7",
														"type": ""
													}
												],
												"src": "6856:619:7"
											},
											{
												"body": {
													"nativeSrc": "7564:391:7",
													"nodeType": "YulBlock",
													"src": "7564:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7610:83:7",
																"nodeType": "YulBlock",
																"src": "7610:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7612:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7612:77:7"
																			},
																			"nativeSrc": "7612:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7612:79:7"
																		},
																		"nativeSrc": "7612:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7612:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7585:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7585:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7594:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7594:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7581:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7581:3:7"
																		},
																		"nativeSrc": "7581:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7581:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7606:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7606:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7577:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7577:3:7"
																},
																"nativeSrc": "7577:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7577:32:7"
															},
															"nativeSrc": "7574:119:7",
															"nodeType": "YulIf",
															"src": "7574:119:7"
														},
														{
															"nativeSrc": "7703:117:7",
															"nodeType": "YulBlock",
															"src": "7703:117:7",
															"statements": [
																{
																	"nativeSrc": "7718:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7718:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7732:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7732:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7722:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7722:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7747:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7747:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7782:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7782:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7793:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7793:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7778:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7778:3:7"
																				},
																				"nativeSrc": "7778:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7778:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7802:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7802:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7757:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7757:20:7"
																		},
																		"nativeSrc": "7757:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7757:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7747:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7747:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7830:118:7",
															"nodeType": "YulBlock",
															"src": "7830:118:7",
															"statements": [
																{
																	"nativeSrc": "7845:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7845:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7859:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7859:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7849:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7849:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7875:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7875:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7910:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7910:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7921:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7921:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7906:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7906:3:7"
																				},
																				"nativeSrc": "7906:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7906:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7930:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7930:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7885:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7885:20:7"
																		},
																		"nativeSrc": "7885:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7885:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7875:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7875:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7481:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7526:9:7",
														"nodeType": "YulTypedName",
														"src": "7526:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7537:7:7",
														"nodeType": "YulTypedName",
														"src": "7537:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7549:6:7",
														"nodeType": "YulTypedName",
														"src": "7549:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7557:6:7",
														"nodeType": "YulTypedName",
														"src": "7557:6:7",
														"type": ""
													}
												],
												"src": "7481:474:7"
											},
											{
												"body": {
													"nativeSrc": "8016:53:7",
													"nodeType": "YulBlock",
													"src": "8016:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8033:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8033:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8056:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8056:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8038:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8038:17:7"
																		},
																		"nativeSrc": "8038:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8038:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8026:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8026:6:7"
																},
																"nativeSrc": "8026:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8026:37:7"
															},
															"nativeSrc": "8026:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8026:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7961:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8004:5:7",
														"nodeType": "YulTypedName",
														"src": "8004:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8011:3:7",
														"nodeType": "YulTypedName",
														"src": "8011:3:7",
														"type": ""
													}
												],
												"src": "7961:108:7"
											},
											{
												"body": {
													"nativeSrc": "8130:53:7",
													"nodeType": "YulBlock",
													"src": "8130:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8147:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8170:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8170:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8152:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8152:17:7"
																		},
																		"nativeSrc": "8152:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8152:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8140:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8140:6:7"
																},
																"nativeSrc": "8140:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8140:37:7"
															},
															"nativeSrc": "8140:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8140:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "8075:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8118:5:7",
														"nodeType": "YulTypedName",
														"src": "8118:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8125:3:7",
														"nodeType": "YulTypedName",
														"src": "8125:3:7",
														"type": ""
													}
												],
												"src": "8075:108:7"
											},
											{
												"body": {
													"nativeSrc": "8353:405:7",
													"nodeType": "YulBlock",
													"src": "8353:405:7",
													"statements": [
														{
															"nativeSrc": "8363:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8363:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8379:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8379:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8384:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8384:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8375:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8375:3:7"
																},
																"nativeSrc": "8375:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8375:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "8367:4:7",
																	"nodeType": "YulTypedName",
																	"src": "8367:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8399:167:7",
															"nodeType": "YulBlock",
															"src": "8399:167:7",
															"statements": [
																{
																	"nativeSrc": "8437:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8437:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8467:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8467:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8474:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8474:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8463:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8463:3:7"
																				},
																				"nativeSrc": "8463:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8463:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8457:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8457:5:7"
																		},
																		"nativeSrc": "8457:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8457:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8441:12:7",
																			"nodeType": "YulTypedName",
																			"src": "8441:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8527:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "8527:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8545:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8545:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8550:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8550:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8541:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8541:3:7"
																				},
																				"nativeSrc": "8541:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8541:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8493:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "8493:33:7"
																		},
																		"nativeSrc": "8493:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8493:63:7"
																	},
																	"nativeSrc": "8493:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "8493:63:7"
																}
															]
														},
														{
															"nativeSrc": "8576:175:7",
															"nodeType": "YulBlock",
															"src": "8576:175:7",
															"statements": [
																{
																	"nativeSrc": "8622:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8622:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8652:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8652:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8659:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8659:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8648:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8648:3:7"
																				},
																				"nativeSrc": "8648:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8648:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8642:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8642:5:7"
																		},
																		"nativeSrc": "8642:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8642:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8626:12:7",
																			"nodeType": "YulTypedName",
																			"src": "8626:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8712:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "8712:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8730:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8730:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8735:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8735:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8726:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8726:3:7"
																				},
																				"nativeSrc": "8726:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8726:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "8678:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "8678:33:7"
																		},
																		"nativeSrc": "8678:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8678:63:7"
																	},
																	"nativeSrc": "8678:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "8678:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr_fromStack",
												"nativeSrc": "8243:515:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8340:5:7",
														"nodeType": "YulTypedName",
														"src": "8340:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8347:3:7",
														"nodeType": "YulTypedName",
														"src": "8347:3:7",
														"type": ""
													}
												],
												"src": "8243:515:7"
											},
											{
												"body": {
													"nativeSrc": "8906:168:7",
													"nodeType": "YulBlock",
													"src": "8906:168:7",
													"statements": [
														{
															"nativeSrc": "8916:26:7",
															"nodeType": "YulAssignment",
															"src": "8916:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8928:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8928:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8939:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8939:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8924:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8924:3:7"
																},
																"nativeSrc": "8924:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8924:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8916:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8916:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9040:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9040:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9053:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9064:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:7"
																		},
																		"nativeSrc": "9049:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9049:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr_fromStack",
																	"nativeSrc": "8952:87:7",
																	"nodeType": "YulIdentifier",
																	"src": "8952:87:7"
																},
																"nativeSrc": "8952:115:7",
																"nodeType": "YulFunctionCall",
																"src": "8952:115:7"
															},
															"nativeSrc": "8952:115:7",
															"nodeType": "YulExpressionStatement",
															"src": "8952:115:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Child_$592_memory_ptr__to_t_struct$_Child_$592_memory_ptr__fromStack_reversed",
												"nativeSrc": "8764:310:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8878:9:7",
														"nodeType": "YulTypedName",
														"src": "8878:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8890:6:7",
														"nodeType": "YulTypedName",
														"src": "8890:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8901:4:7",
														"nodeType": "YulTypedName",
														"src": "8901:4:7",
														"type": ""
													}
												],
												"src": "8764:310:7"
											},
											{
												"body": {
													"nativeSrc": "9176:40:7",
													"nodeType": "YulBlock",
													"src": "9176:40:7",
													"statements": [
														{
															"nativeSrc": "9187:22:7",
															"nodeType": "YulAssignment",
															"src": "9187:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9203:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9203:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9197:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9197:5:7"
																},
																"nativeSrc": "9197:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9197:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9187:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9080:136:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9159:5:7",
														"nodeType": "YulTypedName",
														"src": "9159:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9169:6:7",
														"nodeType": "YulTypedName",
														"src": "9169:6:7",
														"type": ""
													}
												],
												"src": "9080:136:7"
											},
											{
												"body": {
													"nativeSrc": "9355:73:7",
													"nodeType": "YulBlock",
													"src": "9355:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9372:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9372:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9377:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9365:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9365:6:7"
																},
																"nativeSrc": "9365:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9365:19:7"
															},
															"nativeSrc": "9365:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9365:19:7"
														},
														{
															"nativeSrc": "9393:29:7",
															"nodeType": "YulAssignment",
															"src": "9393:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9412:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9412:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9417:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9417:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9408:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9408:3:7"
																},
																"nativeSrc": "9408:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9408:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9393:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9393:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9222:206:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9327:3:7",
														"nodeType": "YulTypedName",
														"src": "9327:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9332:6:7",
														"nodeType": "YulTypedName",
														"src": "9332:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9343:11:7",
														"nodeType": "YulTypedName",
														"src": "9343:11:7",
														"type": ""
													}
												],
												"src": "9222:206:7"
											},
											{
												"body": {
													"nativeSrc": "9528:60:7",
													"nodeType": "YulBlock",
													"src": "9528:60:7",
													"statements": [
														{
															"nativeSrc": "9538:11:7",
															"nodeType": "YulAssignment",
															"src": "9538:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "9546:3:7",
																"nodeType": "YulIdentifier",
																"src": "9546:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9538:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9538:4:7"
																}
															]
														},
														{
															"nativeSrc": "9559:22:7",
															"nodeType": "YulAssignment",
															"src": "9559:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9571:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9571:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9576:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9576:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9567:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9567:3:7"
																},
																"nativeSrc": "9567:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9567:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9559:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9559:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9434:154:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9515:3:7",
														"nodeType": "YulTypedName",
														"src": "9515:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9523:4:7",
														"nodeType": "YulTypedName",
														"src": "9523:4:7",
														"type": ""
													}
												],
												"src": "9434:154:7"
											},
											{
												"body": {
													"nativeSrc": "9748:405:7",
													"nodeType": "YulBlock",
													"src": "9748:405:7",
													"statements": [
														{
															"nativeSrc": "9758:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9758:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9774:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9774:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9779:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9779:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9770:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9770:3:7"
																},
																"nativeSrc": "9770:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9770:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "9762:4:7",
																	"nodeType": "YulTypedName",
																	"src": "9762:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9794:167:7",
															"nodeType": "YulBlock",
															"src": "9794:167:7",
															"statements": [
																{
																	"nativeSrc": "9832:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9832:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9862:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9862:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9869:4:7",
																						"nodeType": "YulLiteral",
																						"src": "9869:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9858:3:7"
																				},
																				"nativeSrc": "9858:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9858:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9852:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9852:5:7"
																		},
																		"nativeSrc": "9852:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9852:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9836:12:7",
																			"nodeType": "YulTypedName",
																			"src": "9836:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9922:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "9922:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9940:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9940:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9945:4:7",
																						"nodeType": "YulLiteral",
																						"src": "9945:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:7"
																				},
																				"nativeSrc": "9936:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9888:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "9888:33:7"
																		},
																		"nativeSrc": "9888:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9888:63:7"
																	},
																	"nativeSrc": "9888:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "9888:63:7"
																}
															]
														},
														{
															"nativeSrc": "9971:175:7",
															"nodeType": "YulBlock",
															"src": "9971:175:7",
															"statements": [
																{
																	"nativeSrc": "10017:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10017:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10047:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10047:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10054:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10054:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10043:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10043:3:7"
																				},
																				"nativeSrc": "10043:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10043:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10037:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "10037:5:7"
																		},
																		"nativeSrc": "10037:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10037:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10021:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10021:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10107:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "10107:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10125:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10125:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10130:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10130:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10121:3:7"
																				},
																				"nativeSrc": "10121:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10121:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "10073:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "10073:33:7"
																		},
																		"nativeSrc": "10073:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10073:63:7"
																	},
																	"nativeSrc": "10073:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "10073:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr",
												"nativeSrc": "9648:505:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9735:5:7",
														"nodeType": "YulTypedName",
														"src": "9735:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9742:3:7",
														"nodeType": "YulTypedName",
														"src": "9742:3:7",
														"type": ""
													}
												],
												"src": "9648:505:7"
											},
											{
												"body": {
													"nativeSrc": "10283:143:7",
													"nodeType": "YulBlock",
													"src": "10283:143:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10371:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10379:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10379:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr",
																	"nativeSrc": "10293:77:7",
																	"nodeType": "YulIdentifier",
																	"src": "10293:77:7"
																},
																"nativeSrc": "10293:90:7",
																"nodeType": "YulFunctionCall",
																"src": "10293:90:7"
															},
															"nativeSrc": "10293:90:7",
															"nodeType": "YulExpressionStatement",
															"src": "10293:90:7"
														},
														{
															"nativeSrc": "10392:28:7",
															"nodeType": "YulAssignment",
															"src": "10392:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10410:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10410:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10415:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10415:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10406:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:7"
																},
																"nativeSrc": "10406:14:7",
																"nodeType": "YulFunctionCall",
																"src": "10406:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "10392:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "10392:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr",
												"nativeSrc": "10159:267:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "10256:6:7",
														"nodeType": "YulTypedName",
														"src": "10256:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10264:3:7",
														"nodeType": "YulTypedName",
														"src": "10264:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "10272:10:7",
														"nodeType": "YulTypedName",
														"src": "10272:10:7",
														"type": ""
													}
												],
												"src": "10159:267:7"
											},
											{
												"body": {
													"nativeSrc": "10529:38:7",
													"nodeType": "YulBlock",
													"src": "10529:38:7",
													"statements": [
														{
															"nativeSrc": "10539:22:7",
															"nodeType": "YulAssignment",
															"src": "10539:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "10551:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10551:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10556:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10556:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10547:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:7"
																},
																"nativeSrc": "10547:14:7",
																"nodeType": "YulFunctionCall",
																"src": "10547:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "10539:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10539:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10432:135:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10516:3:7",
														"nodeType": "YulTypedName",
														"src": "10516:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "10524:4:7",
														"nodeType": "YulTypedName",
														"src": "10524:4:7",
														"type": ""
													}
												],
												"src": "10432:135:7"
											},
											{
												"body": {
													"nativeSrc": "10799:740:7",
													"nodeType": "YulBlock",
													"src": "10799:740:7",
													"statements": [
														{
															"nativeSrc": "10809:90:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10809:90:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10893:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10893:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "10823:69:7",
																	"nodeType": "YulIdentifier",
																	"src": "10823:69:7"
																},
																"nativeSrc": "10823:76:7",
																"nodeType": "YulFunctionCall",
																"src": "10823:76:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10813:6:7",
																	"nodeType": "YulTypedName",
																	"src": "10813:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10908:115:7",
															"nodeType": "YulAssignment",
															"src": "10908:115:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11011:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11011:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11016:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11016:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10915:95:7",
																	"nodeType": "YulIdentifier",
																	"src": "10915:95:7"
																},
																"nativeSrc": "10915:108:7",
																"nodeType": "YulFunctionCall",
																"src": "10915:108:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10908:3:7"
																}
															]
														},
														{
															"nativeSrc": "11032:93:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11032:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11119:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11119:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "11047:71:7",
																	"nodeType": "YulIdentifier",
																	"src": "11047:71:7"
																},
																"nativeSrc": "11047:78:7",
																"nodeType": "YulFunctionCall",
																"src": "11047:78:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "11036:7:7",
																	"nodeType": "YulTypedName",
																	"src": "11036:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11134:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11134:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "11148:7:7",
																"nodeType": "YulIdentifier",
																"src": "11148:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "11138:6:7",
																	"nodeType": "YulTypedName",
																	"src": "11138:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11224:290:7",
																"nodeType": "YulBlock",
																"src": "11224:290:7",
																"statements": [
																	{
																		"nativeSrc": "11238:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11238:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "11265:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11265:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "11259:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11259:5:7"
																			},
																			"nativeSrc": "11259:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11259:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "11242:13:7",
																				"nodeType": "YulTypedName",
																				"src": "11242:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11285:114:7",
																		"nodeType": "YulAssignment",
																		"src": "11285:114:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "11380:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "11380:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "11395:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11395:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr",
																				"nativeSrc": "11292:87:7",
																				"nodeType": "YulIdentifier",
																				"src": "11292:87:7"
																			},
																			"nativeSrc": "11292:107:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11292:107:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "11285:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11285:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11412:92:7",
																		"nodeType": "YulAssignment",
																		"src": "11412:92:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "11497:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11497:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "11422:74:7",
																				"nodeType": "YulIdentifier",
																				"src": "11422:74:7"
																			},
																			"nativeSrc": "11422:82:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11422:82:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "11412:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11412:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "11186:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11186:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11189:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11189:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11183:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11183:2:7"
																},
																"nativeSrc": "11183:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11183:13:7"
															},
															"nativeSrc": "11164:350:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11197:18:7",
																"nodeType": "YulBlock",
																"src": "11197:18:7",
																"statements": [
																	{
																		"nativeSrc": "11199:14:7",
																		"nodeType": "YulAssignment",
																		"src": "11199:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "11208:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "11208:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11211:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11211:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11204:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11204:3:7"
																			},
																			"nativeSrc": "11204:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11204:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "11199:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "11199:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11168:14:7",
																"nodeType": "YulBlock",
																"src": "11168:14:7",
																"statements": [
																	{
																		"nativeSrc": "11170:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11170:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11179:1:7",
																			"nodeType": "YulLiteral",
																			"src": "11179:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "11174:1:7",
																				"nodeType": "YulTypedName",
																				"src": "11174:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11164:350:7"
														},
														{
															"nativeSrc": "11523:10:7",
															"nodeType": "YulAssignment",
															"src": "11523:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "11530:3:7",
																"nodeType": "YulIdentifier",
																"src": "11530:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11523:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11523:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "10631:908:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10778:5:7",
														"nodeType": "YulTypedName",
														"src": "10778:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10785:3:7",
														"nodeType": "YulTypedName",
														"src": "10785:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10794:3:7",
														"nodeType": "YulTypedName",
														"src": "10794:3:7",
														"type": ""
													}
												],
												"src": "10631:908:7"
											},
											{
												"body": {
													"nativeSrc": "11737:269:7",
													"nodeType": "YulBlock",
													"src": "11737:269:7",
													"statements": [
														{
															"nativeSrc": "11747:26:7",
															"nodeType": "YulAssignment",
															"src": "11747:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11759:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11759:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11770:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11770:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11755:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11755:3:7"
																},
																"nativeSrc": "11755:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11755:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11747:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11794:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11794:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11805:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11805:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11790:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11790:3:7"
																		},
																		"nativeSrc": "11790:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11790:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11813:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11813:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11819:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11819:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11809:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11809:3:7"
																		},
																		"nativeSrc": "11809:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11809:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11783:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11783:6:7"
																},
																"nativeSrc": "11783:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11783:47:7"
															},
															"nativeSrc": "11783:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11783:47:7"
														},
														{
															"nativeSrc": "11839:160:7",
															"nodeType": "YulAssignment",
															"src": "11839:160:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11985:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11985:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11994:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11994:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "11847:137:7",
																	"nodeType": "YulIdentifier",
																	"src": "11847:137:7"
																},
																"nativeSrc": "11847:152:7",
																"nodeType": "YulFunctionCall",
																"src": "11847:152:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11839:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11839:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "11545:461:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11709:9:7",
														"nodeType": "YulTypedName",
														"src": "11709:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11721:6:7",
														"nodeType": "YulTypedName",
														"src": "11721:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11732:4:7",
														"nodeType": "YulTypedName",
														"src": "11732:4:7",
														"type": ""
													}
												],
												"src": "11545:461:7"
											},
											{
												"body": {
													"nativeSrc": "12121:688:7",
													"nodeType": "YulBlock",
													"src": "12121:688:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12167:83:7",
																"nodeType": "YulBlock",
																"src": "12167:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12169:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12169:77:7"
																			},
																			"nativeSrc": "12169:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12169:79:7"
																		},
																		"nativeSrc": "12169:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12169:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12142:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12142:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12151:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12151:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12138:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12138:3:7"
																		},
																		"nativeSrc": "12138:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12138:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12163:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12163:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12134:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12134:3:7"
																},
																"nativeSrc": "12134:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12134:32:7"
															},
															"nativeSrc": "12131:119:7",
															"nodeType": "YulIf",
															"src": "12131:119:7"
														},
														{
															"nativeSrc": "12260:117:7",
															"nodeType": "YulBlock",
															"src": "12260:117:7",
															"statements": [
																{
																	"nativeSrc": "12275:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12275:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12289:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12289:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12279:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12279:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12304:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12304:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12339:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12339:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12350:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12350:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12335:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12335:3:7"
																				},
																				"nativeSrc": "12335:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12335:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12359:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12359:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12314:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12314:20:7"
																		},
																		"nativeSrc": "12314:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12314:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12304:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12304:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12387:118:7",
															"nodeType": "YulBlock",
															"src": "12387:118:7",
															"statements": [
																{
																	"nativeSrc": "12402:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12402:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12416:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12416:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12406:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12406:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12432:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12432:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12467:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12467:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12478:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12478:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12463:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12463:3:7"
																				},
																				"nativeSrc": "12463:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12463:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12487:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12487:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12442:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12442:20:7"
																		},
																		"nativeSrc": "12442:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12442:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12432:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12432:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12515:287:7",
															"nodeType": "YulBlock",
															"src": "12515:287:7",
															"statements": [
																{
																	"nativeSrc": "12530:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12530:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12561:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12561:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12572:2:7",
																						"nodeType": "YulLiteral",
																						"src": "12572:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12557:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12557:3:7"
																				},
																				"nativeSrc": "12557:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12557:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12544:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "12544:12:7"
																		},
																		"nativeSrc": "12544:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12544:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12534:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12534:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12623:83:7",
																		"nodeType": "YulBlock",
																		"src": "12623:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12625:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "12625:77:7"
																					},
																					"nativeSrc": "12625:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12625:79:7"
																				},
																				"nativeSrc": "12625:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "12625:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12595:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12595:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12603:18:7",
																				"nodeType": "YulLiteral",
																				"src": "12603:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12592:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12592:2:7"
																		},
																		"nativeSrc": "12592:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12592:30:7"
																	},
																	"nativeSrc": "12589:117:7",
																	"nodeType": "YulIf",
																	"src": "12589:117:7"
																},
																{
																	"nativeSrc": "12720:72:7",
																	"nodeType": "YulAssignment",
																	"src": "12720:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12764:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12764:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12775:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12775:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12760:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12760:3:7"
																				},
																				"nativeSrc": "12760:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12760:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12784:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12784:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12730:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "12730:29:7"
																		},
																		"nativeSrc": "12730:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12730:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12720:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12720:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "12012:797:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12075:9:7",
														"nodeType": "YulTypedName",
														"src": "12075:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12086:7:7",
														"nodeType": "YulTypedName",
														"src": "12086:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12098:6:7",
														"nodeType": "YulTypedName",
														"src": "12098:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12106:6:7",
														"nodeType": "YulTypedName",
														"src": "12106:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12114:6:7",
														"nodeType": "YulTypedName",
														"src": "12114:6:7",
														"type": ""
													}
												],
												"src": "12012:797:7"
											},
											{
												"body": {
													"nativeSrc": "12881:263:7",
													"nodeType": "YulBlock",
													"src": "12881:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12927:83:7",
																"nodeType": "YulBlock",
																"src": "12927:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12929:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12929:77:7"
																			},
																			"nativeSrc": "12929:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12929:79:7"
																		},
																		"nativeSrc": "12929:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12929:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12902:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12902:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12911:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12911:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12898:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12898:3:7"
																		},
																		"nativeSrc": "12898:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12898:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12923:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12923:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12894:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12894:3:7"
																},
																"nativeSrc": "12894:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12894:32:7"
															},
															"nativeSrc": "12891:119:7",
															"nodeType": "YulIf",
															"src": "12891:119:7"
														},
														{
															"nativeSrc": "13020:117:7",
															"nodeType": "YulBlock",
															"src": "13020:117:7",
															"statements": [
																{
																	"nativeSrc": "13035:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13035:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13049:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13049:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13039:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13039:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13064:63:7",
																	"nodeType": "YulAssignment",
																	"src": "13064:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13099:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13099:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13110:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13110:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13095:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13095:3:7"
																				},
																				"nativeSrc": "13095:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13095:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13119:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13119:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13074:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "13074:20:7"
																		},
																		"nativeSrc": "13074:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13074:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13064:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13064:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "12815:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12851:9:7",
														"nodeType": "YulTypedName",
														"src": "12851:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12862:7:7",
														"nodeType": "YulTypedName",
														"src": "12862:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12874:6:7",
														"nodeType": "YulTypedName",
														"src": "12874:6:7",
														"type": ""
													}
												],
												"src": "12815:329:7"
											},
											{
												"body": {
													"nativeSrc": "13215:53:7",
													"nodeType": "YulBlock",
													"src": "13215:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13232:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13232:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13255:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13255:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13237:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "13237:17:7"
																		},
																		"nativeSrc": "13237:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13237:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13225:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13225:6:7"
																},
																"nativeSrc": "13225:37:7",
																"nodeType": "YulFunctionCall",
																"src": "13225:37:7"
															},
															"nativeSrc": "13225:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "13225:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13150:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13203:5:7",
														"nodeType": "YulTypedName",
														"src": "13203:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13210:3:7",
														"nodeType": "YulTypedName",
														"src": "13210:3:7",
														"type": ""
													}
												],
												"src": "13150:118:7"
											},
											{
												"body": {
													"nativeSrc": "13372:124:7",
													"nodeType": "YulBlock",
													"src": "13372:124:7",
													"statements": [
														{
															"nativeSrc": "13382:26:7",
															"nodeType": "YulAssignment",
															"src": "13382:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13394:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13394:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13405:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13405:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13390:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13390:3:7"
																},
																"nativeSrc": "13390:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13390:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13382:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13382:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13462:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13462:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13475:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13475:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13486:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13486:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13471:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13471:3:7"
																		},
																		"nativeSrc": "13471:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13471:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13418:43:7"
																},
																"nativeSrc": "13418:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13418:71:7"
															},
															"nativeSrc": "13418:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13418:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13274:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13344:9:7",
														"nodeType": "YulTypedName",
														"src": "13344:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13356:6:7",
														"nodeType": "YulTypedName",
														"src": "13356:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13367:4:7",
														"nodeType": "YulTypedName",
														"src": "13367:4:7",
														"type": ""
													}
												],
												"src": "13274:222:7"
											},
											{
												"body": {
													"nativeSrc": "13542:76:7",
													"nodeType": "YulBlock",
													"src": "13542:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13596:16:7",
																"nodeType": "YulBlock",
																"src": "13596:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13605:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13605:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13608:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13608:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13598:6:7"
																			},
																			"nativeSrc": "13598:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13598:12:7"
																		},
																		"nativeSrc": "13598:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13598:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13565:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13565:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13587:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "13587:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13572:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "13572:14:7"
																				},
																				"nativeSrc": "13572:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13572:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13562:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13562:2:7"
																		},
																		"nativeSrc": "13562:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13562:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13555:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13555:6:7"
																},
																"nativeSrc": "13555:40:7",
																"nodeType": "YulFunctionCall",
																"src": "13555:40:7"
															},
															"nativeSrc": "13552:60:7",
															"nodeType": "YulIf",
															"src": "13552:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13502:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13535:5:7",
														"nodeType": "YulTypedName",
														"src": "13535:5:7",
														"type": ""
													}
												],
												"src": "13502:116:7"
											},
											{
												"body": {
													"nativeSrc": "13673:84:7",
													"nodeType": "YulBlock",
													"src": "13673:84:7",
													"statements": [
														{
															"nativeSrc": "13683:29:7",
															"nodeType": "YulAssignment",
															"src": "13683:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13705:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13705:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13692:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "13692:12:7"
																},
																"nativeSrc": "13692:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13692:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13683:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13683:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13745:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13745:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13721:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "13721:23:7"
																},
																"nativeSrc": "13721:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13721:30:7"
															},
															"nativeSrc": "13721:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13721:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "13624:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13651:6:7",
														"nodeType": "YulTypedName",
														"src": "13651:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13659:3:7",
														"nodeType": "YulTypedName",
														"src": "13659:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13667:5:7",
														"nodeType": "YulTypedName",
														"src": "13667:5:7",
														"type": ""
													}
												],
												"src": "13624:133:7"
											},
											{
												"body": {
													"nativeSrc": "13843:388:7",
													"nodeType": "YulBlock",
													"src": "13843:388:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13889:83:7",
																"nodeType": "YulBlock",
																"src": "13889:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13891:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "13891:77:7"
																			},
																			"nativeSrc": "13891:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13891:79:7"
																		},
																		"nativeSrc": "13891:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13891:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13864:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13864:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13860:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13860:3:7"
																		},
																		"nativeSrc": "13860:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13860:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13885:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13885:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13856:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:7"
																},
																"nativeSrc": "13856:32:7",
																"nodeType": "YulFunctionCall",
																"src": "13856:32:7"
															},
															"nativeSrc": "13853:119:7",
															"nodeType": "YulIf",
															"src": "13853:119:7"
														},
														{
															"nativeSrc": "13982:117:7",
															"nodeType": "YulBlock",
															"src": "13982:117:7",
															"statements": [
																{
																	"nativeSrc": "13997:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13997:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14011:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14011:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14001:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14001:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14026:63:7",
																	"nodeType": "YulAssignment",
																	"src": "14026:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14061:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14061:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14072:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14072:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14057:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14057:3:7"
																				},
																				"nativeSrc": "14057:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14057:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14081:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14081:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14036:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "14036:20:7"
																		},
																		"nativeSrc": "14036:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14036:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14026:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14026:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14109:115:7",
															"nodeType": "YulBlock",
															"src": "14109:115:7",
															"statements": [
																{
																	"nativeSrc": "14124:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14124:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14138:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14138:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14128:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14128:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14154:60:7",
																	"nodeType": "YulAssignment",
																	"src": "14154:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14186:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14186:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14197:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14197:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14182:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14182:3:7"
																				},
																				"nativeSrc": "14182:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14182:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14206:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14206:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "14164:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "14164:17:7"
																		},
																		"nativeSrc": "14164:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14164:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14154:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14154:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "13763:468:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13805:9:7",
														"nodeType": "YulTypedName",
														"src": "13805:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13816:7:7",
														"nodeType": "YulTypedName",
														"src": "13816:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13828:6:7",
														"nodeType": "YulTypedName",
														"src": "13828:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13836:6:7",
														"nodeType": "YulTypedName",
														"src": "13836:6:7",
														"type": ""
													}
												],
												"src": "13763:468:7"
											},
											{
												"body": {
													"nativeSrc": "14363:817:7",
													"nodeType": "YulBlock",
													"src": "14363:817:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "14410:83:7",
																"nodeType": "YulBlock",
																"src": "14410:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14412:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "14412:77:7"
																			},
																			"nativeSrc": "14412:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14412:79:7"
																		},
																		"nativeSrc": "14412:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14412:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14384:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14384:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14393:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14393:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14380:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14380:3:7"
																		},
																		"nativeSrc": "14380:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14380:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14405:3:7",
																		"nodeType": "YulLiteral",
																		"src": "14405:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14376:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14376:3:7"
																},
																"nativeSrc": "14376:33:7",
																"nodeType": "YulFunctionCall",
																"src": "14376:33:7"
															},
															"nativeSrc": "14373:120:7",
															"nodeType": "YulIf",
															"src": "14373:120:7"
														},
														{
															"nativeSrc": "14503:117:7",
															"nodeType": "YulBlock",
															"src": "14503:117:7",
															"statements": [
																{
																	"nativeSrc": "14518:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14518:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14532:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14532:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14522:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14522:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14547:63:7",
																	"nodeType": "YulAssignment",
																	"src": "14547:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14582:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14582:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14593:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14593:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14578:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14578:3:7"
																				},
																				"nativeSrc": "14578:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14578:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14602:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14602:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14557:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "14557:20:7"
																		},
																		"nativeSrc": "14557:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14557:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14547:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14547:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14630:118:7",
															"nodeType": "YulBlock",
															"src": "14630:118:7",
															"statements": [
																{
																	"nativeSrc": "14645:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14645:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14659:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14659:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14649:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14649:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14675:63:7",
																	"nodeType": "YulAssignment",
																	"src": "14675:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14710:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14710:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14721:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14721:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14706:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14706:3:7"
																				},
																				"nativeSrc": "14706:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14706:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14730:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14730:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14685:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "14685:20:7"
																		},
																		"nativeSrc": "14685:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14685:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14675:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14675:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14758:118:7",
															"nodeType": "YulBlock",
															"src": "14758:118:7",
															"statements": [
																{
																	"nativeSrc": "14773:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14773:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14787:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14787:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14777:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14777:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14803:63:7",
																	"nodeType": "YulAssignment",
																	"src": "14803:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14838:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14838:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14849:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14849:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14834:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14834:3:7"
																				},
																				"nativeSrc": "14834:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14834:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14858:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14858:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "14813:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "14813:20:7"
																		},
																		"nativeSrc": "14813:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14813:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14803:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14803:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14886:287:7",
															"nodeType": "YulBlock",
															"src": "14886:287:7",
															"statements": [
																{
																	"nativeSrc": "14901:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14901:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14932:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14932:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14943:2:7",
																						"nodeType": "YulLiteral",
																						"src": "14943:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14928:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14928:3:7"
																				},
																				"nativeSrc": "14928:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14928:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "14915:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "14915:12:7"
																		},
																		"nativeSrc": "14915:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14915:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14905:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14905:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14994:83:7",
																		"nodeType": "YulBlock",
																		"src": "14994:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14996:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "14996:77:7"
																					},
																					"nativeSrc": "14996:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14996:79:7"
																				},
																				"nativeSrc": "14996:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "14996:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14966:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14966:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14974:18:7",
																				"nodeType": "YulLiteral",
																				"src": "14974:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "14963:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "14963:2:7"
																		},
																		"nativeSrc": "14963:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14963:30:7"
																	},
																	"nativeSrc": "14960:117:7",
																	"nodeType": "YulIf",
																	"src": "14960:117:7"
																},
																{
																	"nativeSrc": "15091:72:7",
																	"nodeType": "YulAssignment",
																	"src": "15091:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15135:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "15135:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15146:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15146:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15131:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15131:3:7"
																				},
																				"nativeSrc": "15131:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15131:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15155:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15155:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "15101:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "15101:29:7"
																		},
																		"nativeSrc": "15101:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15101:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "15091:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "15091:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "14237:943:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14309:9:7",
														"nodeType": "YulTypedName",
														"src": "14309:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14320:7:7",
														"nodeType": "YulTypedName",
														"src": "14320:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14332:6:7",
														"nodeType": "YulTypedName",
														"src": "14332:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14340:6:7",
														"nodeType": "YulTypedName",
														"src": "14340:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14348:6:7",
														"nodeType": "YulTypedName",
														"src": "14348:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14356:6:7",
														"nodeType": "YulTypedName",
														"src": "14356:6:7",
														"type": ""
													}
												],
												"src": "14237:943:7"
											},
											{
												"body": {
													"nativeSrc": "15377:1330:7",
													"nodeType": "YulBlock",
													"src": "15377:1330:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "15424:83:7",
																"nodeType": "YulBlock",
																"src": "15424:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15426:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "15426:77:7"
																			},
																			"nativeSrc": "15426:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15426:79:7"
																		},
																		"nativeSrc": "15426:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15426:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15398:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15398:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15407:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15407:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15394:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15394:3:7"
																		},
																		"nativeSrc": "15394:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15394:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15419:3:7",
																		"nodeType": "YulLiteral",
																		"src": "15419:3:7",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15390:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15390:3:7"
																},
																"nativeSrc": "15390:33:7",
																"nodeType": "YulFunctionCall",
																"src": "15390:33:7"
															},
															"nativeSrc": "15387:120:7",
															"nodeType": "YulIf",
															"src": "15387:120:7"
														},
														{
															"nativeSrc": "15517:117:7",
															"nodeType": "YulBlock",
															"src": "15517:117:7",
															"statements": [
																{
																	"nativeSrc": "15532:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15532:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15546:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15546:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15536:6:7",
																			"nodeType": "YulTypedName",
																			"src": "15536:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15561:63:7",
																	"nodeType": "YulAssignment",
																	"src": "15561:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15596:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "15596:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15607:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15607:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15592:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15592:3:7"
																				},
																				"nativeSrc": "15592:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15592:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15616:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15616:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "15571:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "15571:20:7"
																		},
																		"nativeSrc": "15571:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15571:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15561:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "15561:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15644:118:7",
															"nodeType": "YulBlock",
															"src": "15644:118:7",
															"statements": [
																{
																	"nativeSrc": "15659:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15659:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15673:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15673:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15663:6:7",
																			"nodeType": "YulTypedName",
																			"src": "15663:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15689:63:7",
																	"nodeType": "YulAssignment",
																	"src": "15689:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15724:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "15724:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15735:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15735:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15720:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15720:3:7"
																				},
																				"nativeSrc": "15720:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15720:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15744:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15744:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15699:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "15699:20:7"
																		},
																		"nativeSrc": "15699:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15699:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15689:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "15689:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15772:118:7",
															"nodeType": "YulBlock",
															"src": "15772:118:7",
															"statements": [
																{
																	"nativeSrc": "15787:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15787:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15801:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15801:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15791:6:7",
																			"nodeType": "YulTypedName",
																			"src": "15791:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15817:63:7",
																	"nodeType": "YulAssignment",
																	"src": "15817:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15852:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "15852:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15863:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15863:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15848:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15848:3:7"
																				},
																				"nativeSrc": "15848:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15848:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15872:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "15827:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "15827:20:7"
																		},
																		"nativeSrc": "15827:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15827:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "15817:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "15817:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15900:118:7",
															"nodeType": "YulBlock",
															"src": "15900:118:7",
															"statements": [
																{
																	"nativeSrc": "15915:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15915:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15929:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15929:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15919:6:7",
																			"nodeType": "YulTypedName",
																			"src": "15919:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15945:63:7",
																	"nodeType": "YulAssignment",
																	"src": "15945:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15980:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "15980:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15991:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15991:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15976:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15976:3:7"
																				},
																				"nativeSrc": "15976:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15976:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16000:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16000:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "15955:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "15955:20:7"
																		},
																		"nativeSrc": "15955:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15955:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "15945:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "15945:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16028:119:7",
															"nodeType": "YulBlock",
															"src": "16028:119:7",
															"statements": [
																{
																	"nativeSrc": "16043:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16043:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16057:3:7",
																		"nodeType": "YulLiteral",
																		"src": "16057:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16047:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16047:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16074:63:7",
																	"nodeType": "YulAssignment",
																	"src": "16074:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16109:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16109:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16120:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "16120:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16105:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16105:3:7"
																				},
																				"nativeSrc": "16105:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16105:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16129:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16129:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16084:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "16084:20:7"
																		},
																		"nativeSrc": "16084:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16084:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16074:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "16074:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16157:119:7",
															"nodeType": "YulBlock",
															"src": "16157:119:7",
															"statements": [
																{
																	"nativeSrc": "16172:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16172:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16186:3:7",
																		"nodeType": "YulLiteral",
																		"src": "16186:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16176:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16176:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16203:63:7",
																	"nodeType": "YulAssignment",
																	"src": "16203:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16238:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16238:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16249:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "16249:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16234:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16234:3:7"
																				},
																				"nativeSrc": "16234:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16234:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16258:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16258:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16213:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "16213:20:7"
																		},
																		"nativeSrc": "16213:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16213:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "16203:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "16203:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16286:116:7",
															"nodeType": "YulBlock",
															"src": "16286:116:7",
															"statements": [
																{
																	"nativeSrc": "16301:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16301:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16315:3:7",
																		"nodeType": "YulLiteral",
																		"src": "16315:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16305:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16305:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16332:60:7",
																	"nodeType": "YulAssignment",
																	"src": "16332:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16364:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16364:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16375:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "16375:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16360:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16360:3:7"
																				},
																				"nativeSrc": "16360:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16360:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16384:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16384:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "16342:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "16342:17:7"
																		},
																		"nativeSrc": "16342:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16342:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "16332:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "16332:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16412:288:7",
															"nodeType": "YulBlock",
															"src": "16412:288:7",
															"statements": [
																{
																	"nativeSrc": "16427:47:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16427:47:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16458:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16458:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16469:3:7",
																						"nodeType": "YulLiteral",
																						"src": "16469:3:7",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16454:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16454:3:7"
																				},
																				"nativeSrc": "16454:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16454:19:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16441:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "16441:12:7"
																		},
																		"nativeSrc": "16441:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16441:33:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16431:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16431:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16521:83:7",
																		"nodeType": "YulBlock",
																		"src": "16521:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16523:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "16523:77:7"
																					},
																					"nativeSrc": "16523:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16523:79:7"
																				},
																				"nativeSrc": "16523:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "16523:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16493:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16493:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16501:18:7",
																				"nodeType": "YulLiteral",
																				"src": "16501:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16490:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "16490:2:7"
																		},
																		"nativeSrc": "16490:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16490:30:7"
																	},
																	"nativeSrc": "16487:117:7",
																	"nodeType": "YulIf",
																	"src": "16487:117:7"
																},
																{
																	"nativeSrc": "16618:72:7",
																	"nodeType": "YulAssignment",
																	"src": "16618:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16662:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16662:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16673:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "16673:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16658:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16658:3:7"
																				},
																				"nativeSrc": "16658:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16658:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16682:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16682:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "16628:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "16628:29:7"
																		},
																		"nativeSrc": "16628:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16628:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "16618:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "16618:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_addresst_uint256t_boolt_bytes_memory_ptr",
												"nativeSrc": "15186:1521:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15291:9:7",
														"nodeType": "YulTypedName",
														"src": "15291:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15302:7:7",
														"nodeType": "YulTypedName",
														"src": "15302:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15314:6:7",
														"nodeType": "YulTypedName",
														"src": "15314:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15322:6:7",
														"nodeType": "YulTypedName",
														"src": "15322:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15330:6:7",
														"nodeType": "YulTypedName",
														"src": "15330:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15338:6:7",
														"nodeType": "YulTypedName",
														"src": "15338:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15346:6:7",
														"nodeType": "YulTypedName",
														"src": "15346:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "15354:6:7",
														"nodeType": "YulTypedName",
														"src": "15354:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "15362:6:7",
														"nodeType": "YulTypedName",
														"src": "15362:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "15370:6:7",
														"nodeType": "YulTypedName",
														"src": "15370:6:7",
														"type": ""
													}
												],
												"src": "15186:1521:7"
											},
											{
												"body": {
													"nativeSrc": "16830:648:7",
													"nodeType": "YulBlock",
													"src": "16830:648:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16877:83:7",
																"nodeType": "YulBlock",
																"src": "16877:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16879:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "16879:77:7"
																			},
																			"nativeSrc": "16879:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16879:79:7"
																		},
																		"nativeSrc": "16879:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16879:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16851:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16851:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16860:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16860:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16847:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16847:3:7"
																		},
																		"nativeSrc": "16847:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16847:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16872:3:7",
																		"nodeType": "YulLiteral",
																		"src": "16872:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16843:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16843:3:7"
																},
																"nativeSrc": "16843:33:7",
																"nodeType": "YulFunctionCall",
																"src": "16843:33:7"
															},
															"nativeSrc": "16840:120:7",
															"nodeType": "YulIf",
															"src": "16840:120:7"
														},
														{
															"nativeSrc": "16970:117:7",
															"nodeType": "YulBlock",
															"src": "16970:117:7",
															"statements": [
																{
																	"nativeSrc": "16985:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16985:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16999:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16999:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16989:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16989:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17014:63:7",
																	"nodeType": "YulAssignment",
																	"src": "17014:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17049:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "17049:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17060:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17060:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17045:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17045:3:7"
																				},
																				"nativeSrc": "17045:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17045:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17069:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17069:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17024:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "17024:20:7"
																		},
																		"nativeSrc": "17024:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17024:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17014:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "17014:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17097:118:7",
															"nodeType": "YulBlock",
															"src": "17097:118:7",
															"statements": [
																{
																	"nativeSrc": "17112:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17112:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17126:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17126:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17116:6:7",
																			"nodeType": "YulTypedName",
																			"src": "17116:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17142:63:7",
																	"nodeType": "YulAssignment",
																	"src": "17142:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17177:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "17177:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17188:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17188:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17173:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17173:3:7"
																				},
																				"nativeSrc": "17173:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17173:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17197:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17197:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17152:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "17152:20:7"
																		},
																		"nativeSrc": "17152:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17152:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17142:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "17142:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17225:118:7",
															"nodeType": "YulBlock",
															"src": "17225:118:7",
															"statements": [
																{
																	"nativeSrc": "17240:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17240:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17254:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17254:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17244:6:7",
																			"nodeType": "YulTypedName",
																			"src": "17244:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17270:63:7",
																	"nodeType": "YulAssignment",
																	"src": "17270:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17305:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "17305:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17316:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17316:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17301:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17301:3:7"
																				},
																				"nativeSrc": "17301:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17301:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17325:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17325:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17280:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "17280:20:7"
																		},
																		"nativeSrc": "17280:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17280:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17270:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "17270:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17353:118:7",
															"nodeType": "YulBlock",
															"src": "17353:118:7",
															"statements": [
																{
																	"nativeSrc": "17368:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17368:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17382:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17382:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17372:6:7",
																			"nodeType": "YulTypedName",
																			"src": "17372:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17398:63:7",
																	"nodeType": "YulAssignment",
																	"src": "17398:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17433:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "17433:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17444:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17444:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17429:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17429:3:7"
																				},
																				"nativeSrc": "17429:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17429:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17453:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17453:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17408:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "17408:20:7"
																		},
																		"nativeSrc": "17408:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17408:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "17398:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "17398:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "16713:765:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16776:9:7",
														"nodeType": "YulTypedName",
														"src": "16776:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16787:7:7",
														"nodeType": "YulTypedName",
														"src": "16787:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16799:6:7",
														"nodeType": "YulTypedName",
														"src": "16799:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16807:6:7",
														"nodeType": "YulTypedName",
														"src": "16807:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16815:6:7",
														"nodeType": "YulTypedName",
														"src": "16815:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16823:6:7",
														"nodeType": "YulTypedName",
														"src": "16823:6:7",
														"type": ""
													}
												],
												"src": "16713:765:7"
											},
											{
												"body": {
													"nativeSrc": "17567:391:7",
													"nodeType": "YulBlock",
													"src": "17567:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "17613:83:7",
																"nodeType": "YulBlock",
																"src": "17613:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17615:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "17615:77:7"
																			},
																			"nativeSrc": "17615:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17615:79:7"
																		},
																		"nativeSrc": "17615:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17615:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17588:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17588:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17597:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17597:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17584:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17584:3:7"
																		},
																		"nativeSrc": "17584:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17584:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17609:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17609:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17580:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17580:3:7"
																},
																"nativeSrc": "17580:32:7",
																"nodeType": "YulFunctionCall",
																"src": "17580:32:7"
															},
															"nativeSrc": "17577:119:7",
															"nodeType": "YulIf",
															"src": "17577:119:7"
														},
														{
															"nativeSrc": "17706:117:7",
															"nodeType": "YulBlock",
															"src": "17706:117:7",
															"statements": [
																{
																	"nativeSrc": "17721:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17721:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17735:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17735:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17725:6:7",
																			"nodeType": "YulTypedName",
																			"src": "17725:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17750:63:7",
																	"nodeType": "YulAssignment",
																	"src": "17750:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17785:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "17785:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17796:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17796:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17781:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17781:3:7"
																				},
																				"nativeSrc": "17781:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17781:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17805:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17805:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17760:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "17760:20:7"
																		},
																		"nativeSrc": "17760:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17760:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17750:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "17750:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17833:118:7",
															"nodeType": "YulBlock",
															"src": "17833:118:7",
															"statements": [
																{
																	"nativeSrc": "17848:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17848:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17862:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17862:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17852:6:7",
																			"nodeType": "YulTypedName",
																			"src": "17852:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17878:63:7",
																	"nodeType": "YulAssignment",
																	"src": "17878:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17913:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "17913:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17924:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17924:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17909:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17909:3:7"
																				},
																				"nativeSrc": "17909:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17909:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17933:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17933:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17888:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "17888:20:7"
																		},
																		"nativeSrc": "17888:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17888:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17878:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "17878:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "17484:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17529:9:7",
														"nodeType": "YulTypedName",
														"src": "17529:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17540:7:7",
														"nodeType": "YulTypedName",
														"src": "17540:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17552:6:7",
														"nodeType": "YulTypedName",
														"src": "17552:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17560:6:7",
														"nodeType": "YulTypedName",
														"src": "17560:6:7",
														"type": ""
													}
												],
												"src": "17484:474:7"
											},
											{
												"body": {
													"nativeSrc": "18090:817:7",
													"nodeType": "YulBlock",
													"src": "18090:817:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "18137:83:7",
																"nodeType": "YulBlock",
																"src": "18137:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18139:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "18139:77:7"
																			},
																			"nativeSrc": "18139:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18139:79:7"
																		},
																		"nativeSrc": "18139:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18139:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18111:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18111:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18120:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18120:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18107:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18107:3:7"
																		},
																		"nativeSrc": "18107:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18107:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18132:3:7",
																		"nodeType": "YulLiteral",
																		"src": "18132:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18103:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18103:3:7"
																},
																"nativeSrc": "18103:33:7",
																"nodeType": "YulFunctionCall",
																"src": "18103:33:7"
															},
															"nativeSrc": "18100:120:7",
															"nodeType": "YulIf",
															"src": "18100:120:7"
														},
														{
															"nativeSrc": "18230:117:7",
															"nodeType": "YulBlock",
															"src": "18230:117:7",
															"statements": [
																{
																	"nativeSrc": "18245:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18245:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18259:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18259:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18249:6:7",
																			"nodeType": "YulTypedName",
																			"src": "18249:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18274:63:7",
																	"nodeType": "YulAssignment",
																	"src": "18274:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18309:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "18309:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18320:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18320:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18305:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18305:3:7"
																				},
																				"nativeSrc": "18305:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18305:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18329:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18329:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18284:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "18284:20:7"
																		},
																		"nativeSrc": "18284:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18284:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18274:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "18274:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18357:118:7",
															"nodeType": "YulBlock",
															"src": "18357:118:7",
															"statements": [
																{
																	"nativeSrc": "18372:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18372:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18386:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18386:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18376:6:7",
																			"nodeType": "YulTypedName",
																			"src": "18376:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18402:63:7",
																	"nodeType": "YulAssignment",
																	"src": "18402:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18437:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "18437:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18448:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18448:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18433:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18433:3:7"
																				},
																				"nativeSrc": "18433:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18433:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18457:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18457:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18412:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "18412:20:7"
																		},
																		"nativeSrc": "18412:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18412:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18402:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "18402:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18485:118:7",
															"nodeType": "YulBlock",
															"src": "18485:118:7",
															"statements": [
																{
																	"nativeSrc": "18500:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18500:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18514:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18504:6:7",
																			"nodeType": "YulTypedName",
																			"src": "18504:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18530:63:7",
																	"nodeType": "YulAssignment",
																	"src": "18530:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18565:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "18565:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18576:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18576:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18561:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18561:3:7"
																				},
																				"nativeSrc": "18561:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18561:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18585:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18585:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18540:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "18540:20:7"
																		},
																		"nativeSrc": "18540:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18540:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "18530:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "18530:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18613:287:7",
															"nodeType": "YulBlock",
															"src": "18613:287:7",
															"statements": [
																{
																	"nativeSrc": "18628:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18628:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18659:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "18659:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18670:2:7",
																						"nodeType": "YulLiteral",
																						"src": "18670:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18655:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18655:3:7"
																				},
																				"nativeSrc": "18655:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18655:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "18642:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "18642:12:7"
																		},
																		"nativeSrc": "18642:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18642:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18632:6:7",
																			"nodeType": "YulTypedName",
																			"src": "18632:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "18721:83:7",
																		"nodeType": "YulBlock",
																		"src": "18721:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "18723:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "18723:77:7"
																					},
																					"nativeSrc": "18723:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18723:79:7"
																				},
																				"nativeSrc": "18723:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18723:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "18693:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18693:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18701:18:7",
																				"nodeType": "YulLiteral",
																				"src": "18701:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "18690:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "18690:2:7"
																		},
																		"nativeSrc": "18690:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18690:30:7"
																	},
																	"nativeSrc": "18687:117:7",
																	"nodeType": "YulIf",
																	"src": "18687:117:7"
																},
																{
																	"nativeSrc": "18818:72:7",
																	"nodeType": "YulAssignment",
																	"src": "18818:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "18862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18858:3:7"
																				},
																				"nativeSrc": "18858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "18828:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "18828:29:7"
																		},
																		"nativeSrc": "18828:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18828:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "18818:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "18818:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "17964:943:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18036:9:7",
														"nodeType": "YulTypedName",
														"src": "18036:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18047:7:7",
														"nodeType": "YulTypedName",
														"src": "18047:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18059:6:7",
														"nodeType": "YulTypedName",
														"src": "18059:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18067:6:7",
														"nodeType": "YulTypedName",
														"src": "18067:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18075:6:7",
														"nodeType": "YulTypedName",
														"src": "18075:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18083:6:7",
														"nodeType": "YulTypedName",
														"src": "18083:6:7",
														"type": ""
													}
												],
												"src": "17964:943:7"
											},
											{
												"body": {
													"nativeSrc": "19061:282:7",
													"nodeType": "YulBlock",
													"src": "19061:282:7",
													"statements": [
														{
															"nativeSrc": "19071:26:7",
															"nodeType": "YulAssignment",
															"src": "19071:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19083:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19083:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19094:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19094:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19079:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19079:3:7"
																},
																"nativeSrc": "19079:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19079:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19071:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19071:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19151:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19151:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19164:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19164:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19175:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19175:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19160:3:7"
																		},
																		"nativeSrc": "19160:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19160:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19107:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19107:43:7"
																},
																"nativeSrc": "19107:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19107:71:7"
															},
															"nativeSrc": "19107:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19107:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19232:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19232:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19245:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19245:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19256:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19256:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19241:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19241:3:7"
																		},
																		"nativeSrc": "19241:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19241:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19188:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19188:43:7"
																},
																"nativeSrc": "19188:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19188:72:7"
															},
															"nativeSrc": "19188:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19188:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19308:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19308:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19321:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19321:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19332:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19332:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19317:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19317:3:7"
																		},
																		"nativeSrc": "19317:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19317:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "19270:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "19270:37:7"
																},
																"nativeSrc": "19270:66:7",
																"nodeType": "YulFunctionCall",
																"src": "19270:66:7"
															},
															"nativeSrc": "19270:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "19270:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "18913:430:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19017:9:7",
														"nodeType": "YulTypedName",
														"src": "19017:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19029:6:7",
														"nodeType": "YulTypedName",
														"src": "19029:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19037:6:7",
														"nodeType": "YulTypedName",
														"src": "19037:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19045:6:7",
														"nodeType": "YulTypedName",
														"src": "19045:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19056:4:7",
														"nodeType": "YulTypedName",
														"src": "19056:4:7",
														"type": ""
													}
												],
												"src": "18913:430:7"
											},
											{
												"body": {
													"nativeSrc": "19377:152:7",
													"nodeType": "YulBlock",
													"src": "19377:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19394:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19394:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19397:77:7",
																		"nodeType": "YulLiteral",
																		"src": "19397:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19387:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19387:6:7"
																},
																"nativeSrc": "19387:88:7",
																"nodeType": "YulFunctionCall",
																"src": "19387:88:7"
															},
															"nativeSrc": "19387:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "19387:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19491:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19491:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19494:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19494:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19484:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19484:6:7"
																},
																"nativeSrc": "19484:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19484:15:7"
															},
															"nativeSrc": "19484:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19484:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19515:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19515:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19518:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19518:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19508:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19508:6:7"
																},
																"nativeSrc": "19508:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19508:15:7"
															},
															"nativeSrc": "19508:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19508:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "19349:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "19349:180:7"
											},
											{
												"body": {
													"nativeSrc": "19598:80:7",
													"nodeType": "YulBlock",
													"src": "19598:80:7",
													"statements": [
														{
															"nativeSrc": "19608:22:7",
															"nodeType": "YulAssignment",
															"src": "19608:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19623:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19623:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19617:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19617:5:7"
																},
																"nativeSrc": "19617:13:7",
																"nodeType": "YulFunctionCall",
																"src": "19617:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19608:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19608:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19666:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19666:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "19639:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "19639:26:7"
																},
																"nativeSrc": "19639:33:7",
																"nodeType": "YulFunctionCall",
																"src": "19639:33:7"
															},
															"nativeSrc": "19639:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "19639:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "19535:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19576:6:7",
														"nodeType": "YulTypedName",
														"src": "19576:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19584:3:7",
														"nodeType": "YulTypedName",
														"src": "19584:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19592:5:7",
														"nodeType": "YulTypedName",
														"src": "19592:5:7",
														"type": ""
													}
												],
												"src": "19535:143:7"
											},
											{
												"body": {
													"nativeSrc": "19761:274:7",
													"nodeType": "YulBlock",
													"src": "19761:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "19807:83:7",
																"nodeType": "YulBlock",
																"src": "19807:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19809:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "19809:77:7"
																			},
																			"nativeSrc": "19809:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19809:79:7"
																		},
																		"nativeSrc": "19809:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19809:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19782:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "19782:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19791:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19791:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19778:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19778:3:7"
																		},
																		"nativeSrc": "19778:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19778:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19803:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19803:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19774:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19774:3:7"
																},
																"nativeSrc": "19774:32:7",
																"nodeType": "YulFunctionCall",
																"src": "19774:32:7"
															},
															"nativeSrc": "19771:119:7",
															"nodeType": "YulIf",
															"src": "19771:119:7"
														},
														{
															"nativeSrc": "19900:128:7",
															"nodeType": "YulBlock",
															"src": "19900:128:7",
															"statements": [
																{
																	"nativeSrc": "19915:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19915:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19929:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19929:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19919:6:7",
																			"nodeType": "YulTypedName",
																			"src": "19919:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19944:74:7",
																	"nodeType": "YulAssignment",
																	"src": "19944:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19990:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "19990:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20001:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "20001:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19986:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19986:3:7"
																				},
																				"nativeSrc": "19986:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19986:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20010:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "20010:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "19954:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "19954:31:7"
																		},
																		"nativeSrc": "19954:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19954:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19944:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "19944:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "19684:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19731:9:7",
														"nodeType": "YulTypedName",
														"src": "19731:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19742:7:7",
														"nodeType": "YulTypedName",
														"src": "19742:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19754:6:7",
														"nodeType": "YulTypedName",
														"src": "19754:6:7",
														"type": ""
													}
												],
												"src": "19684:351:7"
											},
											{
												"body": {
													"nativeSrc": "20104:52:7",
													"nodeType": "YulBlock",
													"src": "20104:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20121:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20121:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20143:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "20143:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "20126:16:7",
																			"nodeType": "YulIdentifier",
																			"src": "20126:16:7"
																		},
																		"nativeSrc": "20126:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20126:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20114:6:7"
																},
																"nativeSrc": "20114:36:7",
																"nodeType": "YulFunctionCall",
																"src": "20114:36:7"
															},
															"nativeSrc": "20114:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "20114:36:7"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "20041:115:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20092:5:7",
														"nodeType": "YulTypedName",
														"src": "20092:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20099:3:7",
														"nodeType": "YulTypedName",
														"src": "20099:3:7",
														"type": ""
													}
												],
												"src": "20041:115:7"
											},
											{
												"body": {
													"nativeSrc": "20258:122:7",
													"nodeType": "YulBlock",
													"src": "20258:122:7",
													"statements": [
														{
															"nativeSrc": "20268:26:7",
															"nodeType": "YulAssignment",
															"src": "20268:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20280:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20280:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20291:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20291:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20276:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20276:3:7"
																},
																"nativeSrc": "20276:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20276:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20268:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20268:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20346:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20346:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20359:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20359:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20370:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20370:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20355:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20355:3:7"
																		},
																		"nativeSrc": "20355:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20355:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "20304:41:7",
																	"nodeType": "YulIdentifier",
																	"src": "20304:41:7"
																},
																"nativeSrc": "20304:69:7",
																"nodeType": "YulFunctionCall",
																"src": "20304:69:7"
															},
															"nativeSrc": "20304:69:7",
															"nodeType": "YulExpressionStatement",
															"src": "20304:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "20162:218:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20230:9:7",
														"nodeType": "YulTypedName",
														"src": "20230:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20242:6:7",
														"nodeType": "YulTypedName",
														"src": "20242:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20253:4:7",
														"nodeType": "YulTypedName",
														"src": "20253:4:7",
														"type": ""
													}
												],
												"src": "20162:218:7"
											},
											{
												"body": {
													"nativeSrc": "20446:77:7",
													"nodeType": "YulBlock",
													"src": "20446:77:7",
													"statements": [
														{
															"nativeSrc": "20456:22:7",
															"nodeType": "YulAssignment",
															"src": "20456:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20471:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20471:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20465:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "20465:5:7"
																},
																"nativeSrc": "20465:13:7",
																"nodeType": "YulFunctionCall",
																"src": "20465:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20456:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "20456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20511:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "20511:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20487:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "20487:23:7"
																},
																"nativeSrc": "20487:30:7",
																"nodeType": "YulFunctionCall",
																"src": "20487:30:7"
															},
															"nativeSrc": "20487:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "20487:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20386:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20424:6:7",
														"nodeType": "YulTypedName",
														"src": "20424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20432:3:7",
														"nodeType": "YulTypedName",
														"src": "20432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20440:5:7",
														"nodeType": "YulTypedName",
														"src": "20440:5:7",
														"type": ""
													}
												],
												"src": "20386:137:7"
											},
											{
												"body": {
													"nativeSrc": "20603:271:7",
													"nodeType": "YulBlock",
													"src": "20603:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "20649:83:7",
																"nodeType": "YulBlock",
																"src": "20649:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20651:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "20651:77:7"
																			},
																			"nativeSrc": "20651:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20651:79:7"
																		},
																		"nativeSrc": "20651:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20651:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20624:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "20624:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20633:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20633:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20620:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20620:3:7"
																		},
																		"nativeSrc": "20620:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20620:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20645:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20616:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20616:3:7"
																},
																"nativeSrc": "20616:32:7",
																"nodeType": "YulFunctionCall",
																"src": "20616:32:7"
															},
															"nativeSrc": "20613:119:7",
															"nodeType": "YulIf",
															"src": "20613:119:7"
														},
														{
															"nativeSrc": "20742:125:7",
															"nodeType": "YulBlock",
															"src": "20742:125:7",
															"statements": [
																{
																	"nativeSrc": "20757:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20757:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20771:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20771:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20761:6:7",
																			"nodeType": "YulTypedName",
																			"src": "20761:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20786:71:7",
																	"nodeType": "YulAssignment",
																	"src": "20786:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20829:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "20829:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20840:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "20840:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20825:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "20825:3:7"
																				},
																				"nativeSrc": "20825:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "20825:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20849:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "20849:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "20796:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "20796:28:7"
																		},
																		"nativeSrc": "20796:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20796:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20786:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "20786:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20529:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20573:9:7",
														"nodeType": "YulTypedName",
														"src": "20573:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20584:7:7",
														"nodeType": "YulTypedName",
														"src": "20584:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20596:6:7",
														"nodeType": "YulTypedName",
														"src": "20596:6:7",
														"type": ""
													}
												],
												"src": "20529:345:7"
											},
											{
												"body": {
													"nativeSrc": "20908:152:7",
													"nodeType": "YulBlock",
													"src": "20908:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20925:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20925:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20928:77:7",
																		"nodeType": "YulLiteral",
																		"src": "20928:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20918:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20918:6:7"
																},
																"nativeSrc": "20918:88:7",
																"nodeType": "YulFunctionCall",
																"src": "20918:88:7"
															},
															"nativeSrc": "20918:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "20918:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21022:1:7",
																		"nodeType": "YulLiteral",
																		"src": "21022:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21025:4:7",
																		"nodeType": "YulLiteral",
																		"src": "21025:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21015:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21015:6:7"
																},
																"nativeSrc": "21015:15:7",
																"nodeType": "YulFunctionCall",
																"src": "21015:15:7"
															},
															"nativeSrc": "21015:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "21015:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21046:1:7",
																		"nodeType": "YulLiteral",
																		"src": "21046:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21049:4:7",
																		"nodeType": "YulLiteral",
																		"src": "21049:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21039:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21039:6:7"
																},
																"nativeSrc": "21039:15:7",
																"nodeType": "YulFunctionCall",
																"src": "21039:15:7"
															},
															"nativeSrc": "21039:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "21039:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "20880:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "20880:180:7"
											},
											{
												"body": {
													"nativeSrc": "21111:149:7",
													"nodeType": "YulBlock",
													"src": "21111:149:7",
													"statements": [
														{
															"nativeSrc": "21121:25:7",
															"nodeType": "YulAssignment",
															"src": "21121:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21144:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21144:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21126:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21126:17:7"
																},
																"nativeSrc": "21126:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21126:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21121:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21121:1:7"
																}
															]
														},
														{
															"nativeSrc": "21155:25:7",
															"nodeType": "YulAssignment",
															"src": "21155:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21178:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21178:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21160:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21160:17:7"
																},
																"nativeSrc": "21160:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21160:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21155:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21155:1:7"
																}
															]
														},
														{
															"nativeSrc": "21189:17:7",
															"nodeType": "YulAssignment",
															"src": "21189:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21201:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21201:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21204:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21204:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21197:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21197:3:7"
																},
																"nativeSrc": "21197:9:7",
																"nodeType": "YulFunctionCall",
																"src": "21197:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21189:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21189:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21231:22:7",
																"nodeType": "YulBlock",
																"src": "21231:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21233:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21233:16:7"
																			},
																			"nativeSrc": "21233:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21233:18:7"
																		},
																		"nativeSrc": "21233:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21233:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21222:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21222:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "21228:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21228:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21219:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21219:2:7"
																},
																"nativeSrc": "21219:11:7",
																"nodeType": "YulFunctionCall",
																"src": "21219:11:7"
															},
															"nativeSrc": "21216:37:7",
															"nodeType": "YulIf",
															"src": "21216:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "21066:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21097:1:7",
														"nodeType": "YulTypedName",
														"src": "21097:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21100:1:7",
														"nodeType": "YulTypedName",
														"src": "21100:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "21106:4:7",
														"nodeType": "YulTypedName",
														"src": "21106:4:7",
														"type": ""
													}
												],
												"src": "21066:194:7"
											},
											{
												"body": {
													"nativeSrc": "21310:147:7",
													"nodeType": "YulBlock",
													"src": "21310:147:7",
													"statements": [
														{
															"nativeSrc": "21320:25:7",
															"nodeType": "YulAssignment",
															"src": "21320:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21343:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21343:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21325:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21325:17:7"
																},
																"nativeSrc": "21325:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21325:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21320:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21320:1:7"
																}
															]
														},
														{
															"nativeSrc": "21354:25:7",
															"nodeType": "YulAssignment",
															"src": "21354:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21377:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21377:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21359:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21359:17:7"
																},
																"nativeSrc": "21359:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21359:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21354:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21354:1:7"
																}
															]
														},
														{
															"nativeSrc": "21388:16:7",
															"nodeType": "YulAssignment",
															"src": "21388:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21399:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21399:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21402:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21402:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21395:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21395:3:7"
																},
																"nativeSrc": "21395:9:7",
																"nodeType": "YulFunctionCall",
																"src": "21395:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21388:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21388:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21428:22:7",
																"nodeType": "YulBlock",
																"src": "21428:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21430:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21430:16:7"
																			},
																			"nativeSrc": "21430:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21430:18:7"
																		},
																		"nativeSrc": "21430:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21430:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21420:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21420:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21423:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21423:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21417:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21417:2:7"
																},
																"nativeSrc": "21417:10:7",
																"nodeType": "YulFunctionCall",
																"src": "21417:10:7"
															},
															"nativeSrc": "21414:36:7",
															"nodeType": "YulIf",
															"src": "21414:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21266:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21297:1:7",
														"nodeType": "YulTypedName",
														"src": "21297:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21300:1:7",
														"nodeType": "YulTypedName",
														"src": "21300:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21306:3:7",
														"nodeType": "YulTypedName",
														"src": "21306:3:7",
														"type": ""
													}
												],
												"src": "21266:191:7"
											},
											{
												"body": {
													"nativeSrc": "21516:32:7",
													"nodeType": "YulBlock",
													"src": "21516:32:7",
													"statements": [
														{
															"nativeSrc": "21526:16:7",
															"nodeType": "YulAssignment",
															"src": "21526:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "21537:5:7",
																"nodeType": "YulIdentifier",
																"src": "21537:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21526:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "21526:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "21463:85:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21498:5:7",
														"nodeType": "YulTypedName",
														"src": "21498:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21508:7:7",
														"nodeType": "YulTypedName",
														"src": "21508:7:7",
														"type": ""
													}
												],
												"src": "21463:85:7"
											},
											{
												"body": {
													"nativeSrc": "21586:28:7",
													"nodeType": "YulBlock",
													"src": "21586:28:7",
													"statements": [
														{
															"nativeSrc": "21596:12:7",
															"nodeType": "YulAssignment",
															"src": "21596:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "21603:5:7",
																"nodeType": "YulIdentifier",
																"src": "21603:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21596:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21596:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "21554:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21572:5:7",
														"nodeType": "YulTypedName",
														"src": "21572:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21582:3:7",
														"nodeType": "YulTypedName",
														"src": "21582:3:7",
														"type": ""
													}
												],
												"src": "21554:60:7"
											},
											{
												"body": {
													"nativeSrc": "21688:90:7",
													"nodeType": "YulBlock",
													"src": "21688:90:7",
													"statements": [
														{
															"nativeSrc": "21698:74:7",
															"nodeType": "YulAssignment",
															"src": "21698:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21764:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "21764:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "21738:25:7",
																					"nodeType": "YulIdentifier",
																					"src": "21738:25:7"
																				},
																				"nativeSrc": "21738:32:7",
																				"nodeType": "YulFunctionCall",
																				"src": "21738:32:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "21729:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "21729:8:7"
																		},
																		"nativeSrc": "21729:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21729:42:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21711:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21711:17:7"
																},
																"nativeSrc": "21711:61:7",
																"nodeType": "YulFunctionCall",
																"src": "21711:61:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21698:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "21698:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "21620:158:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21668:5:7",
														"nodeType": "YulTypedName",
														"src": "21668:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21678:9:7",
														"nodeType": "YulTypedName",
														"src": "21678:9:7",
														"type": ""
													}
												],
												"src": "21620:158:7"
											},
											{
												"body": {
													"nativeSrc": "21857:74:7",
													"nodeType": "YulBlock",
													"src": "21857:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21874:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21874:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21918:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "21918:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "21879:38:7",
																			"nodeType": "YulIdentifier",
																			"src": "21879:38:7"
																		},
																		"nativeSrc": "21879:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21879:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21867:6:7"
																},
																"nativeSrc": "21867:58:7",
																"nodeType": "YulFunctionCall",
																"src": "21867:58:7"
															},
															"nativeSrc": "21867:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "21867:58:7"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "21784:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21845:5:7",
														"nodeType": "YulTypedName",
														"src": "21845:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21852:3:7",
														"nodeType": "YulTypedName",
														"src": "21852:3:7",
														"type": ""
													}
												],
												"src": "21784:147:7"
											},
											{
												"body": {
													"nativeSrc": "22071:214:7",
													"nodeType": "YulBlock",
													"src": "22071:214:7",
													"statements": [
														{
															"nativeSrc": "22081:26:7",
															"nodeType": "YulAssignment",
															"src": "22081:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22093:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22093:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22104:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22104:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22089:3:7"
																},
																"nativeSrc": "22089:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22089:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22081:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22081:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22161:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22161:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22174:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22174:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22185:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22185:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22170:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22170:3:7"
																		},
																		"nativeSrc": "22170:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22170:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22117:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22117:43:7"
																},
																"nativeSrc": "22117:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22117:71:7"
															},
															"nativeSrc": "22117:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22117:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22250:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22250:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22263:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22263:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22274:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22274:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22259:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22259:3:7"
																		},
																		"nativeSrc": "22259:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22259:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "22198:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "22198:51:7"
																},
																"nativeSrc": "22198:80:7",
																"nodeType": "YulFunctionCall",
																"src": "22198:80:7"
															},
															"nativeSrc": "22198:80:7",
															"nodeType": "YulExpressionStatement",
															"src": "22198:80:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21937:348:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22035:9:7",
														"nodeType": "YulTypedName",
														"src": "22035:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22047:6:7",
														"nodeType": "YulTypedName",
														"src": "22047:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22055:6:7",
														"nodeType": "YulTypedName",
														"src": "22055:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22066:4:7",
														"nodeType": "YulTypedName",
														"src": "22066:4:7",
														"type": ""
													}
												],
												"src": "21937:348:7"
											},
											{
												"body": {
													"nativeSrc": "22417:206:7",
													"nodeType": "YulBlock",
													"src": "22417:206:7",
													"statements": [
														{
															"nativeSrc": "22427:26:7",
															"nodeType": "YulAssignment",
															"src": "22427:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22439:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22439:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22450:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22450:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22435:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22435:3:7"
																},
																"nativeSrc": "22435:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22435:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22427:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22427:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22507:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22507:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22520:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22520:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22531:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22531:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22516:3:7"
																		},
																		"nativeSrc": "22516:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22516:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22463:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22463:43:7"
																},
																"nativeSrc": "22463:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22463:71:7"
															},
															"nativeSrc": "22463:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22463:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22588:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22588:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22601:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22601:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22612:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22612:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22597:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22597:3:7"
																		},
																		"nativeSrc": "22597:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22597:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22544:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22544:43:7"
																},
																"nativeSrc": "22544:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22544:72:7"
															},
															"nativeSrc": "22544:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22544:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22291:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22381:9:7",
														"nodeType": "YulTypedName",
														"src": "22381:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22393:6:7",
														"nodeType": "YulTypedName",
														"src": "22393:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22401:6:7",
														"nodeType": "YulTypedName",
														"src": "22401:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22412:4:7",
														"nodeType": "YulTypedName",
														"src": "22412:4:7",
														"type": ""
													}
												],
												"src": "22291:332:7"
											},
											{
												"body": {
													"nativeSrc": "22755:206:7",
													"nodeType": "YulBlock",
													"src": "22755:206:7",
													"statements": [
														{
															"nativeSrc": "22765:26:7",
															"nodeType": "YulAssignment",
															"src": "22765:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22777:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22777:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22788:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22773:3:7"
																},
																"nativeSrc": "22773:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22773:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22765:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22765:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22845:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22845:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22858:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22858:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22869:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22869:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22854:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22854:3:7"
																		},
																		"nativeSrc": "22854:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22854:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22801:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22801:43:7"
																},
																"nativeSrc": "22801:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22801:71:7"
															},
															"nativeSrc": "22801:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22801:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22926:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22926:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22939:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22939:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22950:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22950:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22935:3:7"
																		},
																		"nativeSrc": "22935:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22935:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22882:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22882:43:7"
																},
																"nativeSrc": "22882:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22882:72:7"
															},
															"nativeSrc": "22882:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22882:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22629:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22719:9:7",
														"nodeType": "YulTypedName",
														"src": "22719:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22731:6:7",
														"nodeType": "YulTypedName",
														"src": "22731:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22739:6:7",
														"nodeType": "YulTypedName",
														"src": "22739:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22750:4:7",
														"nodeType": "YulTypedName",
														"src": "22750:4:7",
														"type": ""
													}
												],
												"src": "22629:332:7"
											},
											{
												"body": {
													"nativeSrc": "23030:80:7",
													"nodeType": "YulBlock",
													"src": "23030:80:7",
													"statements": [
														{
															"nativeSrc": "23040:22:7",
															"nodeType": "YulAssignment",
															"src": "23040:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23055:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23055:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23049:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "23049:5:7"
																},
																"nativeSrc": "23049:13:7",
																"nodeType": "YulFunctionCall",
																"src": "23049:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23040:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "23040:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23098:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "23098:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "23071:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "23071:26:7"
																},
																"nativeSrc": "23071:33:7",
																"nodeType": "YulFunctionCall",
																"src": "23071:33:7"
															},
															"nativeSrc": "23071:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "23071:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "22967:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23008:6:7",
														"nodeType": "YulTypedName",
														"src": "23008:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23016:3:7",
														"nodeType": "YulTypedName",
														"src": "23016:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23024:5:7",
														"nodeType": "YulTypedName",
														"src": "23024:5:7",
														"type": ""
													}
												],
												"src": "22967:143:7"
											},
											{
												"body": {
													"nativeSrc": "23193:274:7",
													"nodeType": "YulBlock",
													"src": "23193:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "23239:83:7",
																"nodeType": "YulBlock",
																"src": "23239:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23241:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "23241:77:7"
																			},
																			"nativeSrc": "23241:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "23241:79:7"
																		},
																		"nativeSrc": "23241:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "23241:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23214:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "23214:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23223:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23223:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23210:3:7"
																		},
																		"nativeSrc": "23210:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23210:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23235:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23235:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23206:3:7"
																},
																"nativeSrc": "23206:32:7",
																"nodeType": "YulFunctionCall",
																"src": "23206:32:7"
															},
															"nativeSrc": "23203:119:7",
															"nodeType": "YulIf",
															"src": "23203:119:7"
														},
														{
															"nativeSrc": "23332:128:7",
															"nodeType": "YulBlock",
															"src": "23332:128:7",
															"statements": [
																{
																	"nativeSrc": "23347:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23347:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23361:1:7",
																		"nodeType": "YulLiteral",
																		"src": "23361:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23351:6:7",
																			"nodeType": "YulTypedName",
																			"src": "23351:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23376:74:7",
																	"nodeType": "YulAssignment",
																	"src": "23376:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23422:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "23422:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23433:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "23433:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23418:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "23418:3:7"
																				},
																				"nativeSrc": "23418:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "23418:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23442:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "23442:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "23386:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "23386:31:7"
																		},
																		"nativeSrc": "23386:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23386:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23376:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "23376:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "23116:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23163:9:7",
														"nodeType": "YulTypedName",
														"src": "23163:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23174:7:7",
														"nodeType": "YulTypedName",
														"src": "23174:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23186:6:7",
														"nodeType": "YulTypedName",
														"src": "23186:6:7",
														"type": ""
													}
												],
												"src": "23116:351:7"
											},
											{
												"body": {
													"nativeSrc": "23531:40:7",
													"nodeType": "YulBlock",
													"src": "23531:40:7",
													"statements": [
														{
															"nativeSrc": "23542:22:7",
															"nodeType": "YulAssignment",
															"src": "23542:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23558:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "23558:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23552:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "23552:5:7"
																},
																"nativeSrc": "23552:12:7",
																"nodeType": "YulFunctionCall",
																"src": "23552:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23542:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23542:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "23473:98:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23514:5:7",
														"nodeType": "YulTypedName",
														"src": "23514:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23524:6:7",
														"nodeType": "YulTypedName",
														"src": "23524:6:7",
														"type": ""
													}
												],
												"src": "23473:98:7"
											},
											{
												"body": {
													"nativeSrc": "23672:73:7",
													"nodeType": "YulBlock",
													"src": "23672:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23689:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23694:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23694:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23682:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23682:6:7"
																},
																"nativeSrc": "23682:19:7",
																"nodeType": "YulFunctionCall",
																"src": "23682:19:7"
															},
															"nativeSrc": "23682:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "23682:19:7"
														},
														{
															"nativeSrc": "23710:29:7",
															"nodeType": "YulAssignment",
															"src": "23710:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23729:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23729:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23734:4:7",
																		"nodeType": "YulLiteral",
																		"src": "23734:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23725:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23725:3:7"
																},
																"nativeSrc": "23725:14:7",
																"nodeType": "YulFunctionCall",
																"src": "23725:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23710:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "23710:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "23577:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23644:3:7",
														"nodeType": "YulTypedName",
														"src": "23644:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23649:6:7",
														"nodeType": "YulTypedName",
														"src": "23649:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23660:11:7",
														"nodeType": "YulTypedName",
														"src": "23660:11:7",
														"type": ""
													}
												],
												"src": "23577:168:7"
											},
											{
												"body": {
													"nativeSrc": "23813:184:7",
													"nodeType": "YulBlock",
													"src": "23813:184:7",
													"statements": [
														{
															"nativeSrc": "23823:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "23823:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "23832:1:7",
																"nodeType": "YulLiteral",
																"src": "23832:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "23827:1:7",
																	"nodeType": "YulTypedName",
																	"src": "23827:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23892:63:7",
																"nodeType": "YulBlock",
																"src": "23892:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "23917:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "23917:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "23922:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "23922:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "23913:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "23913:3:7"
																					},
																					"nativeSrc": "23913:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "23913:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "23936:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "23936:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "23941:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "23941:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "23932:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "23932:3:7"
																							},
																							"nativeSrc": "23932:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "23932:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "23926:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "23926:5:7"
																					},
																					"nativeSrc": "23926:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "23926:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "23906:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "23906:6:7"
																			},
																			"nativeSrc": "23906:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "23906:39:7"
																		},
																		"nativeSrc": "23906:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "23906:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "23853:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "23853:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23856:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23856:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23850:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "23850:2:7"
																},
																"nativeSrc": "23850:13:7",
																"nodeType": "YulFunctionCall",
																"src": "23850:13:7"
															},
															"nativeSrc": "23842:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23864:19:7",
																"nodeType": "YulBlock",
																"src": "23864:19:7",
																"statements": [
																	{
																		"nativeSrc": "23866:15:7",
																		"nodeType": "YulAssignment",
																		"src": "23866:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "23875:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "23875:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23878:2:7",
																					"nodeType": "YulLiteral",
																					"src": "23878:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23871:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "23871:3:7"
																			},
																			"nativeSrc": "23871:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "23871:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "23866:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "23866:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23846:3:7",
																"nodeType": "YulBlock",
																"src": "23846:3:7",
																"statements": []
															},
															"src": "23842:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "23975:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "23975:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "23980:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "23980:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23971:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23971:3:7"
																		},
																		"nativeSrc": "23971:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23971:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23989:1:7",
																		"nodeType": "YulLiteral",
																		"src": "23989:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23964:6:7"
																},
																"nativeSrc": "23964:27:7",
																"nodeType": "YulFunctionCall",
																"src": "23964:27:7"
															},
															"nativeSrc": "23964:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "23964:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "23751:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "23795:3:7",
														"nodeType": "YulTypedName",
														"src": "23795:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "23800:3:7",
														"nodeType": "YulTypedName",
														"src": "23800:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23805:6:7",
														"nodeType": "YulTypedName",
														"src": "23805:6:7",
														"type": ""
													}
												],
												"src": "23751:246:7"
											},
											{
												"body": {
													"nativeSrc": "24093:283:7",
													"nodeType": "YulBlock",
													"src": "24093:283:7",
													"statements": [
														{
															"nativeSrc": "24103:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "24103:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24149:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "24149:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "24117:31:7",
																	"nodeType": "YulIdentifier",
																	"src": "24117:31:7"
																},
																"nativeSrc": "24117:38:7",
																"nodeType": "YulFunctionCall",
																"src": "24117:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24107:6:7",
																	"nodeType": "YulTypedName",
																	"src": "24107:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24164:77:7",
															"nodeType": "YulAssignment",
															"src": "24164:77:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24229:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24229:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24234:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24234:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24171:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "24171:57:7"
																},
																"nativeSrc": "24171:70:7",
																"nodeType": "YulFunctionCall",
																"src": "24171:70:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24164:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24289:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "24289:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24296:4:7",
																				"nodeType": "YulLiteral",
																				"src": "24296:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24285:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24285:3:7"
																		},
																		"nativeSrc": "24285:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24285:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24303:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24303:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24308:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24308:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "24250:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "24250:34:7"
																},
																"nativeSrc": "24250:65:7",
																"nodeType": "YulFunctionCall",
																"src": "24250:65:7"
															},
															"nativeSrc": "24250:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "24250:65:7"
														},
														{
															"nativeSrc": "24324:46:7",
															"nodeType": "YulAssignment",
															"src": "24324:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24335:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24335:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "24362:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "24362:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "24340:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "24340:21:7"
																		},
																		"nativeSrc": "24340:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24340:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24331:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24331:3:7"
																},
																"nativeSrc": "24331:39:7",
																"nodeType": "YulFunctionCall",
																"src": "24331:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24324:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24324:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24003:373:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24074:5:7",
														"nodeType": "YulTypedName",
														"src": "24074:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24081:3:7",
														"nodeType": "YulTypedName",
														"src": "24081:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24089:3:7",
														"nodeType": "YulTypedName",
														"src": "24089:3:7",
														"type": ""
													}
												],
												"src": "24003:373:7"
											},
											{
												"body": {
													"nativeSrc": "24582:440:7",
													"nodeType": "YulBlock",
													"src": "24582:440:7",
													"statements": [
														{
															"nativeSrc": "24592:27:7",
															"nodeType": "YulAssignment",
															"src": "24592:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24604:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "24604:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24615:3:7",
																		"nodeType": "YulLiteral",
																		"src": "24615:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24600:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24600:3:7"
																},
																"nativeSrc": "24600:19:7",
																"nodeType": "YulFunctionCall",
																"src": "24600:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24592:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24592:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24673:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24673:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24686:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24686:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24697:1:7",
																				"nodeType": "YulLiteral",
																				"src": "24697:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24682:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24682:3:7"
																		},
																		"nativeSrc": "24682:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24682:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24629:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24629:43:7"
																},
																"nativeSrc": "24629:71:7",
																"nodeType": "YulFunctionCall",
																"src": "24629:71:7"
															},
															"nativeSrc": "24629:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "24629:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24754:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24754:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24767:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24767:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24778:2:7",
																				"nodeType": "YulLiteral",
																				"src": "24778:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24763:3:7"
																		},
																		"nativeSrc": "24763:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24763:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24710:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24710:43:7"
																},
																"nativeSrc": "24710:72:7",
																"nodeType": "YulFunctionCall",
																"src": "24710:72:7"
															},
															"nativeSrc": "24710:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "24710:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24836:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24836:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24849:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24849:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24860:2:7",
																				"nodeType": "YulLiteral",
																				"src": "24860:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24845:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24845:3:7"
																		},
																		"nativeSrc": "24845:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24845:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24792:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24792:43:7"
																},
																"nativeSrc": "24792:72:7",
																"nodeType": "YulFunctionCall",
																"src": "24792:72:7"
															},
															"nativeSrc": "24792:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "24792:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24885:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24885:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24896:2:7",
																				"nodeType": "YulLiteral",
																				"src": "24896:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24881:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24881:3:7"
																		},
																		"nativeSrc": "24881:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24881:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24905:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "24905:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24911:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24911:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24901:3:7"
																		},
																		"nativeSrc": "24901:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24901:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24874:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24874:6:7"
																},
																"nativeSrc": "24874:48:7",
																"nodeType": "YulFunctionCall",
																"src": "24874:48:7"
															},
															"nativeSrc": "24874:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "24874:48:7"
														},
														{
															"nativeSrc": "24931:84:7",
															"nodeType": "YulAssignment",
															"src": "24931:84:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25001:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25001:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25010:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "25010:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24939:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "24939:61:7"
																},
																"nativeSrc": "24939:76:7",
																"nodeType": "YulFunctionCall",
																"src": "24939:76:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24931:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24931:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "24382:640:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24530:9:7",
														"nodeType": "YulTypedName",
														"src": "24530:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24542:6:7",
														"nodeType": "YulTypedName",
														"src": "24542:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24550:6:7",
														"nodeType": "YulTypedName",
														"src": "24550:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24558:6:7",
														"nodeType": "YulTypedName",
														"src": "24558:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24566:6:7",
														"nodeType": "YulTypedName",
														"src": "24566:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24577:4:7",
														"nodeType": "YulTypedName",
														"src": "24577:4:7",
														"type": ""
													}
												],
												"src": "24382:640:7"
											},
											{
												"body": {
													"nativeSrc": "25256:523:7",
													"nodeType": "YulBlock",
													"src": "25256:523:7",
													"statements": [
														{
															"nativeSrc": "25266:27:7",
															"nodeType": "YulAssignment",
															"src": "25266:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25278:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "25278:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25289:3:7",
																		"nodeType": "YulLiteral",
																		"src": "25289:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25274:3:7"
																},
																"nativeSrc": "25274:19:7",
																"nodeType": "YulFunctionCall",
																"src": "25274:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25266:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "25266:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25347:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25347:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25360:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25360:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25371:1:7",
																				"nodeType": "YulLiteral",
																				"src": "25371:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25356:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25356:3:7"
																		},
																		"nativeSrc": "25356:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25356:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25303:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25303:43:7"
																},
																"nativeSrc": "25303:71:7",
																"nodeType": "YulFunctionCall",
																"src": "25303:71:7"
															},
															"nativeSrc": "25303:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "25303:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25428:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25428:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25441:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25441:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25452:2:7",
																				"nodeType": "YulLiteral",
																				"src": "25452:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25437:3:7"
																		},
																		"nativeSrc": "25437:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25437:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25384:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25384:43:7"
																},
																"nativeSrc": "25384:72:7",
																"nodeType": "YulFunctionCall",
																"src": "25384:72:7"
															},
															"nativeSrc": "25384:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "25384:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25510:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25510:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25523:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25523:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25534:2:7",
																				"nodeType": "YulLiteral",
																				"src": "25534:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25519:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25519:3:7"
																		},
																		"nativeSrc": "25519:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25519:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25466:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25466:43:7"
																},
																"nativeSrc": "25466:72:7",
																"nodeType": "YulFunctionCall",
																"src": "25466:72:7"
															},
															"nativeSrc": "25466:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "25466:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25592:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25592:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25605:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25605:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25616:2:7",
																				"nodeType": "YulLiteral",
																				"src": "25616:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25601:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25601:3:7"
																		},
																		"nativeSrc": "25601:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25601:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25548:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25548:43:7"
																},
																"nativeSrc": "25548:72:7",
																"nodeType": "YulFunctionCall",
																"src": "25548:72:7"
															},
															"nativeSrc": "25548:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "25548:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25641:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25641:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25652:3:7",
																				"nodeType": "YulLiteral",
																				"src": "25652:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25637:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25637:3:7"
																		},
																		"nativeSrc": "25637:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25637:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25662:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "25662:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25668:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25668:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25658:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25658:3:7"
																		},
																		"nativeSrc": "25658:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25658:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25630:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "25630:6:7"
																},
																"nativeSrc": "25630:49:7",
																"nodeType": "YulFunctionCall",
																"src": "25630:49:7"
															},
															"nativeSrc": "25630:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "25630:49:7"
														},
														{
															"nativeSrc": "25688:84:7",
															"nodeType": "YulAssignment",
															"src": "25688:84:7",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "25758:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25758:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25767:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "25767:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25696:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "25696:61:7"
																},
																"nativeSrc": "25696:76:7",
																"nodeType": "YulFunctionCall",
																"src": "25696:76:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25688:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "25688:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "25028:751:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25196:9:7",
														"nodeType": "YulTypedName",
														"src": "25196:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "25208:6:7",
														"nodeType": "YulTypedName",
														"src": "25208:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "25216:6:7",
														"nodeType": "YulTypedName",
														"src": "25216:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25224:6:7",
														"nodeType": "YulTypedName",
														"src": "25224:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25232:6:7",
														"nodeType": "YulTypedName",
														"src": "25232:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25240:6:7",
														"nodeType": "YulTypedName",
														"src": "25240:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25251:4:7",
														"nodeType": "YulTypedName",
														"src": "25251:4:7",
														"type": ""
													}
												],
												"src": "25028:751:7"
											},
											{
												"body": {
													"nativeSrc": "25905:200:7",
													"nodeType": "YulBlock",
													"src": "25905:200:7",
													"statements": [
														{
															"nativeSrc": "25915:26:7",
															"nodeType": "YulAssignment",
															"src": "25915:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25927:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "25927:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25938:2:7",
																		"nodeType": "YulLiteral",
																		"src": "25938:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25923:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25923:3:7"
																},
																"nativeSrc": "25923:18:7",
																"nodeType": "YulFunctionCall",
																"src": "25923:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25915:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "25915:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25995:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25995:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26008:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26008:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26019:1:7",
																				"nodeType": "YulLiteral",
																				"src": "26019:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26004:3:7"
																		},
																		"nativeSrc": "26004:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26004:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25951:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25951:43:7"
																},
																"nativeSrc": "25951:71:7",
																"nodeType": "YulFunctionCall",
																"src": "25951:71:7"
															},
															"nativeSrc": "25951:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "25951:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26070:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "26070:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26083:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26083:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26094:2:7",
																				"nodeType": "YulLiteral",
																				"src": "26094:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26079:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26079:3:7"
																		},
																		"nativeSrc": "26079:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26079:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "26032:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "26032:37:7"
																},
																"nativeSrc": "26032:66:7",
																"nodeType": "YulFunctionCall",
																"src": "26032:66:7"
															},
															"nativeSrc": "26032:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "26032:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "25785:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25869:9:7",
														"nodeType": "YulTypedName",
														"src": "25869:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25881:6:7",
														"nodeType": "YulTypedName",
														"src": "25881:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25889:6:7",
														"nodeType": "YulTypedName",
														"src": "25889:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25900:4:7",
														"nodeType": "YulTypedName",
														"src": "25900:4:7",
														"type": ""
													}
												],
												"src": "25785:320:7"
											},
											{
												"body": {
													"nativeSrc": "26283:357:7",
													"nodeType": "YulBlock",
													"src": "26283:357:7",
													"statements": [
														{
															"nativeSrc": "26293:26:7",
															"nodeType": "YulAssignment",
															"src": "26293:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26305:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "26305:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26316:2:7",
																		"nodeType": "YulLiteral",
																		"src": "26316:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26301:3:7"
																},
																"nativeSrc": "26301:18:7",
																"nodeType": "YulFunctionCall",
																"src": "26301:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26293:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "26293:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26373:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "26373:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26386:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26386:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26397:1:7",
																				"nodeType": "YulLiteral",
																				"src": "26397:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26382:3:7"
																		},
																		"nativeSrc": "26382:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26382:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26329:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "26329:43:7"
																},
																"nativeSrc": "26329:71:7",
																"nodeType": "YulFunctionCall",
																"src": "26329:71:7"
															},
															"nativeSrc": "26329:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "26329:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26454:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "26454:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26467:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26467:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26478:2:7",
																				"nodeType": "YulLiteral",
																				"src": "26478:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26463:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26463:3:7"
																		},
																		"nativeSrc": "26463:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26463:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26410:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "26410:43:7"
																},
																"nativeSrc": "26410:72:7",
																"nodeType": "YulFunctionCall",
																"src": "26410:72:7"
															},
															"nativeSrc": "26410:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "26410:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26503:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26503:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26514:2:7",
																				"nodeType": "YulLiteral",
																				"src": "26514:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26499:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26499:3:7"
																		},
																		"nativeSrc": "26499:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26499:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26523:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "26523:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26529:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26529:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26519:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26519:3:7"
																		},
																		"nativeSrc": "26519:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26519:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26492:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "26492:6:7"
																},
																"nativeSrc": "26492:48:7",
																"nodeType": "YulFunctionCall",
																"src": "26492:48:7"
															},
															"nativeSrc": "26492:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "26492:48:7"
														},
														{
															"nativeSrc": "26549:84:7",
															"nodeType": "YulAssignment",
															"src": "26549:84:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26619:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "26619:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26628:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "26628:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26557:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "26557:61:7"
																},
																"nativeSrc": "26557:76:7",
																"nodeType": "YulFunctionCall",
																"src": "26557:76:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26549:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "26549:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "26111:529:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26239:9:7",
														"nodeType": "YulTypedName",
														"src": "26239:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26251:6:7",
														"nodeType": "YulTypedName",
														"src": "26251:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26259:6:7",
														"nodeType": "YulTypedName",
														"src": "26259:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26267:6:7",
														"nodeType": "YulTypedName",
														"src": "26267:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26278:4:7",
														"nodeType": "YulTypedName",
														"src": "26278:4:7",
														"type": ""
													}
												],
												"src": "26111:529:7"
											},
											{
												"body": {
													"nativeSrc": "26754:549:7",
													"nodeType": "YulBlock",
													"src": "26754:549:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "26800:83:7",
																"nodeType": "YulBlock",
																"src": "26800:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "26802:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "26802:77:7"
																			},
																			"nativeSrc": "26802:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "26802:79:7"
																		},
																		"nativeSrc": "26802:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "26802:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26775:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "26775:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26784:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26784:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26771:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26771:3:7"
																		},
																		"nativeSrc": "26771:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26771:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26796:2:7",
																		"nodeType": "YulLiteral",
																		"src": "26796:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26767:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26767:3:7"
																},
																"nativeSrc": "26767:32:7",
																"nodeType": "YulFunctionCall",
																"src": "26767:32:7"
															},
															"nativeSrc": "26764:119:7",
															"nodeType": "YulIf",
															"src": "26764:119:7"
														},
														{
															"nativeSrc": "26893:128:7",
															"nodeType": "YulBlock",
															"src": "26893:128:7",
															"statements": [
																{
																	"nativeSrc": "26908:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26908:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26922:1:7",
																		"nodeType": "YulLiteral",
																		"src": "26922:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "26912:6:7",
																			"nodeType": "YulTypedName",
																			"src": "26912:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "26937:74:7",
																	"nodeType": "YulAssignment",
																	"src": "26937:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "26983:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "26983:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "26994:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "26994:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26979:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "26979:3:7"
																				},
																				"nativeSrc": "26979:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "26979:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27003:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "27003:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "26947:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "26947:31:7"
																		},
																		"nativeSrc": "26947:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26947:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "26937:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "26937:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "27031:129:7",
															"nodeType": "YulBlock",
															"src": "27031:129:7",
															"statements": [
																{
																	"nativeSrc": "27046:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "27046:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27060:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27060:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "27050:6:7",
																			"nodeType": "YulTypedName",
																			"src": "27050:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "27076:74:7",
																	"nodeType": "YulAssignment",
																	"src": "27076:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "27122:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "27122:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "27133:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "27133:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27118:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "27118:3:7"
																				},
																				"nativeSrc": "27118:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "27118:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27142:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "27142:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "27086:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "27086:31:7"
																		},
																		"nativeSrc": "27086:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27086:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "27076:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "27076:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "27170:126:7",
															"nodeType": "YulBlock",
															"src": "27170:126:7",
															"statements": [
																{
																	"nativeSrc": "27185:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "27185:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27199:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27199:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "27189:6:7",
																			"nodeType": "YulTypedName",
																			"src": "27189:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "27215:71:7",
																	"nodeType": "YulAssignment",
																	"src": "27215:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "27258:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "27258:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "27269:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "27269:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27254:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "27254:3:7"
																				},
																				"nativeSrc": "27254:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "27254:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27278:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "27278:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "27225:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "27225:28:7"
																		},
																		"nativeSrc": "27225:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27225:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "27215:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "27215:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bool_fromMemory",
												"nativeSrc": "26646:657:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26708:9:7",
														"nodeType": "YulTypedName",
														"src": "26708:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26719:7:7",
														"nodeType": "YulTypedName",
														"src": "26719:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26731:6:7",
														"nodeType": "YulTypedName",
														"src": "26731:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26739:6:7",
														"nodeType": "YulTypedName",
														"src": "26739:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26747:6:7",
														"nodeType": "YulTypedName",
														"src": "26747:6:7",
														"type": ""
													}
												],
												"src": "26646:657:7"
											},
											{
												"body": {
													"nativeSrc": "27451:222:7",
													"nodeType": "YulBlock",
													"src": "27451:222:7",
													"statements": [
														{
															"nativeSrc": "27461:26:7",
															"nodeType": "YulAssignment",
															"src": "27461:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27473:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "27473:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27484:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27484:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27469:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27469:3:7"
																},
																"nativeSrc": "27469:18:7",
																"nodeType": "YulFunctionCall",
																"src": "27469:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27461:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "27461:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27549:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "27549:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27562:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "27562:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27573:1:7",
																				"nodeType": "YulLiteral",
																				"src": "27573:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27558:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27558:3:7"
																		},
																		"nativeSrc": "27558:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27558:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "27497:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "27497:51:7"
																},
																"nativeSrc": "27497:79:7",
																"nodeType": "YulFunctionCall",
																"src": "27497:79:7"
															},
															"nativeSrc": "27497:79:7",
															"nodeType": "YulExpressionStatement",
															"src": "27497:79:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27638:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "27638:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27651:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "27651:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27662:2:7",
																				"nodeType": "YulLiteral",
																				"src": "27662:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27647:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27647:3:7"
																		},
																		"nativeSrc": "27647:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27647:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "27586:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "27586:51:7"
																},
																"nativeSrc": "27586:80:7",
																"nodeType": "YulFunctionCall",
																"src": "27586:80:7"
															},
															"nativeSrc": "27586:80:7",
															"nodeType": "YulExpressionStatement",
															"src": "27586:80:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "27309:364:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27415:9:7",
														"nodeType": "YulTypedName",
														"src": "27415:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27427:6:7",
														"nodeType": "YulTypedName",
														"src": "27427:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27435:6:7",
														"nodeType": "YulTypedName",
														"src": "27435:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27446:4:7",
														"nodeType": "YulTypedName",
														"src": "27446:4:7",
														"type": ""
													}
												],
												"src": "27309:364:7"
											},
											{
												"body": {
													"nativeSrc": "27741:79:7",
													"nodeType": "YulBlock",
													"src": "27741:79:7",
													"statements": [
														{
															"nativeSrc": "27751:22:7",
															"nodeType": "YulAssignment",
															"src": "27751:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "27766:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "27766:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27760:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "27760:5:7"
																},
																"nativeSrc": "27760:13:7",
																"nodeType": "YulFunctionCall",
																"src": "27760:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27751:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "27751:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27808:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "27808:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "27782:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "27782:25:7"
																},
																"nativeSrc": "27782:32:7",
																"nodeType": "YulFunctionCall",
																"src": "27782:32:7"
															},
															"nativeSrc": "27782:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "27782:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "27679:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27719:6:7",
														"nodeType": "YulTypedName",
														"src": "27719:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27727:3:7",
														"nodeType": "YulTypedName",
														"src": "27727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27735:5:7",
														"nodeType": "YulTypedName",
														"src": "27735:5:7",
														"type": ""
													}
												],
												"src": "27679:141:7"
											},
											{
												"body": {
													"nativeSrc": "27902:273:7",
													"nodeType": "YulBlock",
													"src": "27902:273:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "27948:83:7",
																"nodeType": "YulBlock",
																"src": "27948:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "27950:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "27950:77:7"
																			},
																			"nativeSrc": "27950:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "27950:79:7"
																		},
																		"nativeSrc": "27950:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "27950:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27923:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "27923:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27932:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "27932:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27919:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27919:3:7"
																		},
																		"nativeSrc": "27919:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27919:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27944:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27944:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "27915:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27915:3:7"
																},
																"nativeSrc": "27915:32:7",
																"nodeType": "YulFunctionCall",
																"src": "27915:32:7"
															},
															"nativeSrc": "27912:119:7",
															"nodeType": "YulIf",
															"src": "27912:119:7"
														},
														{
															"nativeSrc": "28041:127:7",
															"nodeType": "YulBlock",
															"src": "28041:127:7",
															"statements": [
																{
																	"nativeSrc": "28056:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28056:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28070:1:7",
																		"nodeType": "YulLiteral",
																		"src": "28070:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28060:6:7",
																			"nodeType": "YulTypedName",
																			"src": "28060:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28085:73:7",
																	"nodeType": "YulAssignment",
																	"src": "28085:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28130:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "28130:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28141:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "28141:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28126:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "28126:3:7"
																				},
																				"nativeSrc": "28126:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "28126:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28150:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "28150:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "28095:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "28095:30:7"
																		},
																		"nativeSrc": "28095:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28095:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "28085:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "28085:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "27826:349:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27872:9:7",
														"nodeType": "YulTypedName",
														"src": "27872:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "27883:7:7",
														"nodeType": "YulTypedName",
														"src": "27883:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "27895:6:7",
														"nodeType": "YulTypedName",
														"src": "27895:6:7",
														"type": ""
													}
												],
												"src": "27826:349:7"
											},
											{
												"body": {
													"nativeSrc": "28209:152:7",
													"nodeType": "YulBlock",
													"src": "28209:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28226:1:7",
																		"nodeType": "YulLiteral",
																		"src": "28226:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28229:77:7",
																		"nodeType": "YulLiteral",
																		"src": "28229:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28219:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "28219:6:7"
																},
																"nativeSrc": "28219:88:7",
																"nodeType": "YulFunctionCall",
																"src": "28219:88:7"
															},
															"nativeSrc": "28219:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "28219:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28323:1:7",
																		"nodeType": "YulLiteral",
																		"src": "28323:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28326:4:7",
																		"nodeType": "YulLiteral",
																		"src": "28326:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "28316:6:7"
																},
																"nativeSrc": "28316:15:7",
																"nodeType": "YulFunctionCall",
																"src": "28316:15:7"
															},
															"nativeSrc": "28316:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "28316:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28347:1:7",
																		"nodeType": "YulLiteral",
																		"src": "28347:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28350:4:7",
																		"nodeType": "YulLiteral",
																		"src": "28350:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "28340:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "28340:6:7"
																},
																"nativeSrc": "28340:15:7",
																"nodeType": "YulFunctionCall",
																"src": "28340:15:7"
															},
															"nativeSrc": "28340:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "28340:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "28181:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "28181:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct IERC6059.Child -> struct IERC6059.Child\n    function abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // contractAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Child_$592_memory_ptr__to_t_struct$_Child_$592_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct IERC6059.Child -> struct IERC6059.Child\n    function abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // contractAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct IERC6059.Child[] -> struct IERC6059.Child[]\n    function abi_encode_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Child_$592_memory_ptr_to_t_struct$_Child_$592_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_addresst_uint256t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 224))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value7 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c80636f19951c116100de578063b3e1c71811610097578063e97ceaa811610071578063e97ceaa81461048c578063e985e9c5146104a8578063eb043606146104d8578063fb25fb7a146104f457610173565b8063b3e1c71814610438578063b88d4fde14610454578063defa80c31461047057610173565b80636f19951c1461034057806370a082311461037057806397961336146103a0578063a22cb465146103bc578063a898e364146103d8578063b390c0ab1461040857610173565b80634182e4a3116101305780634182e4a31461025c57806342842e0e1461028c57806342966c68146102a857806344ec9344146102c45780636352211e146102f4578063635490cc1461032457610173565b806301ffc9a714610178578063064c0a3a146101a8578063081812fc146101c4578063095ea7b3146101f457806323b872dd146102105780632f32f9371461022c575b600080fd5b610192600480360381019061018d9190613450565b610526565b60405161019f9190613498565b60405180910390f35b6101c260048036038101906101bd919061368d565b6106c8565b005b6101de60048036038101906101d99190613724565b6106e7565b6040516101eb9190613760565b60405180910390f35b61020e6004803603810190610209919061377b565b610772565b005b61022a600480360381019061022591906137bb565b61087b565b005b6102466004803603810190610241919061380e565b610896565b604051610253919061389b565b60405180910390f35b6102766004803603810190610271919061377b565b61098c565b6040516102839190613498565b60405180910390f35b6102a660048036038101906102a191906137bb565b6109ea565b005b6102c260048036038101906102bd9190613724565b610a0a565b005b6102de60048036038101906102d99190613724565b610a19565b6040516102eb9190613994565b60405180910390f35b61030e60048036038101906103099190613724565b610af1565b60405161031b9190613760565b60405180910390f35b61033e600480360381019061033991906139b6565b610b94565b005b61035a60048036038101906103559190613724565b610d79565b6040516103679190613994565b60405180910390f35b61038a60048036038101906103859190613a25565b610e51565b6040516103979190613a61565b60405180910390f35b6103ba60048036038101906103b5919061380e565b610efe565b005b6103d660048036038101906103d19190613aa8565b610f17565b005b6103f260048036038101906103ed919061380e565b61108e565b6040516103ff919061389b565b60405180910390f35b610422600480360381019061041d919061380e565b611184565b60405161042f9190613a61565b60405180910390f35b610452600480360381019061044d919061377b565b6111a3565b005b61046e60048036038101906104699190613ae8565b6111c1565b005b61048a60048036038101906104859190613b6b565b6111de565b005b6104a660048036038101906104a19190613c3d565b611203565b005b6104c260048036038101906104bd9190613ca4565b611220565b6040516104cf9190613498565b60405180910390f35b6104f260048036038101906104ed9190613ce4565b6112b4565b005b61050e60048036038101906105099190613724565b6113fa565b60405161051d93929190613d67565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105f157507f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061065957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106c157507f42b0e56f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b826106d28161150b565b6106df8686868686611555565b505050505050565b60006106f2826118b8565b60016000838152602001908152602001600020600061071084610af1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061077d82610af1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107e4576040517f0591db6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108036118fa565b73ffffffffffffffffffffffffffffffffffffffff161415801561083557506108338161082e6118fa565b611220565b155b1561086c576040517f982462b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108768383611902565b505050565b806108858161150b565b6108908484846119fe565b50505050565b61089e61334a565b816108a884610d79565b51116108e0576040517fca755cc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060046000858152602001908152602001600020838154811061090757610906613d9e565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508091505092915050565b600080600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415905092915050565b610a05838383604051806020016040528060008152506111c1565b505050565b610a15816000611184565b5050565b6060600060056000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ae25783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610a50565b50505050905080915050919050565b600080600080610b00856113fa565b9250925092508015610b89578273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610b459190613a61565b602060405180830381865afa158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b869190613de2565b92505b829350505050919050565b610b9d836118b8565b6000610ba76118fa565b9050610bc88173ffffffffffffffffffffffffffffffffffffffff16611c8f565b610bfe576040517f80275d3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180604001604052808581526020018373ffffffffffffffffffffffffffffffffffffffff168152509050610c38858386611cb2565b6000610c4386610a19565b5190506080811015610ce457600560008781526020019081526020016000208290806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610d16565b6040517f98674b3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848373ffffffffffffffffffffffffffffffffffffffff16877fe65085e689b77b126ba0bac3b079aa8288f19f4d5445af11c76003f8ab3075dd84604051610d5e9190613a61565b60405180910390a4610d71868487611cb7565b505050505050565b6060600060046000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610e425783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610db0565b50505050905080915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eb8576040517f7772286600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b81610f0881611cbc565b610f128383611d06565b505050565b8173ffffffffffffffffffffffffffffffffffffffff16610f366118fa565b73ffffffffffffffffffffffffffffffffffffffff1603610f83576040517f2dee66e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060026000610f906118fa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661103d6118fa565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110829190613498565b60405180910390a35050565b61109661334a565b816110a084610a19565b51116110d8576040517f9136d24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005600085815260200190815260200160002083815481106110ff576110fe613d9e565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508091505092915050565b6000826111908161150b565b61119a8484611db8565b91505092915050565b6111bd828260405180602001604052806000815250612267565b5050565b816111cb8161150b565b6111d7858585856122b9565b5050505050565b876111e881611cbc565b6111f8898989898989898961230c565b505050505050505050565b8361120d81611cbc565b61121985858585612581565b5050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6112d38473ffffffffffffffffffffffffffffffffffffffff16611c8f565b611309576040517f80275d3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f42b0e56f000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016113629190613e1e565b602060405180830381865afa15801561137f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a39190613e4e565b6113d9576040517f850cccef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113e48484846127d7565b6113f460008560008587866129bf565b50505050565b60008060008060036000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16036114ea576040517f89ba7e1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80602001518160000151600083600001511415935093509350509193909250565b61151c6115166118fa565b82612b17565b611552576040517f35d12e3f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080611561856113fa565b50915091508673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146115cb576040517fe146af6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611631576040517fe3d91bfc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614801561166b57508385145b156116a2576040517f5eeb0df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116c18673ffffffffffffffffffffffffffffffffffffffff16611c8f565b6116f7576040517f80275d3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f42b0e56f000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016117509190613e1e565b602060405180830381865afa15801561176d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117919190613e4e565b6117c7576040517ff413cf9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117d2858786612bf3565b6117dd878787612d4f565b6117ea8287838789612d54565b60016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118399190613eaa565b9250508190555061184b858588612d5b565b60016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461189a9190613ede565b925050819055506118af8287838789886129bf565b50505050505050565b6118c181612e06565b6118f7576040517f89ba7e1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600033905090565b600061190d82610af1565b9050826001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600080611a0a836113fa565b50915091508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611a74576040517fe146af6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611ada576040517fe3d91bfc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ae5858585612d4f565b611af3828583600087612d54565b60016000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b429190613eaa565b92505081905550611b5583600086612d5b565b60016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ba49190613ede565b92505081905550828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4828473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d846000604051611c67929190613f57565b60405180910390a4611c7a858585612e75565b611c88828583600087612e7a565b5050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b505050565b505050565b611ccd611cc76118fa565b82612e81565b611d03576040517f2728a9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b8060056000848152602001908152602001600020805490501115611d56576040517f8ac3cb1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d5f82612f16565b600560008381526020019081526020016000206000611d7e919061337a565b817f8ac4a0d65950c3e40448afb2260e2e0ec36ea15644d9b39e37e85472e5f9445160405160405180910390a2611db482612f19565b5050565b6000806000611dc6856113fa565b50915091506000611dd686610af1565b905060016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e279190613eaa565b92505081905550611e3a81600088612d4f565b611e498360008460008a612d54565b611e54600087611902565b611e5d86612f1c565b6000611e6887610d79565b9050600460008881526020019081526020016000206000611e89919061337a565b600560008881526020019081526020016000206000611ea8919061337a565b6001600088815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560008060008351905060005b8181101561213057898310611fb157848181518110611f4957611f48613d9e565b5b602002602001015160200151858281518110611f6857611f67613d9e565b5b6020026020010151600001516040517f4cb93ad9000000000000000000000000000000000000000000000000000000008152600401611fa8929190613f80565b60405180910390fd5b60066000868381518110611fc857611fc7613d9e565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086838151811061202357612022613d9e565b5b602002602001015160000151815260200190815260200160002060009055828a039350600185828151811061205b5761205a613d9e565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1663b390c0ab87848151811061209557612094613d9e565b5b6020026020010151600001516001886120ae9190613eaa565b6040518363ffffffff1660e01b81526004016120cb929190613fa9565b6020604051808303816000875af11580156120ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210e9190613fe7565b6121189190613ede565b836121239190613ede565b9250806001019050611f27565b50600360008b81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550506121828560008c612e75565b6121918760008860008e612e7a565b89600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a489600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d89600060405161224f929190613f57565b60405180910390a48197505050505050505092915050565b6122718383612f1f565b61227e6000848484613010565b6122b4576040517fbcb5663700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6122c48484846119fe565b6122d084848484613010565b612306576040517fbcb5663700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b61231461334a565b821561232b57612324898761108e565b9050612338565b6123358987610896565b90505b61234381868661318e565b612350898787878761320d565b821561237757612372600560008b815260200190815260200160002087613214565b6123e8565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600090556123e7600460008b815260200190815260200160002087613214565b5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614612517576000870361249a578473ffffffffffffffffffffffffffffffffffffffff1663b88d4fde308a87866040518563ffffffff1660e01b81526004016124639493929190614093565b600060405180830381600087803b15801561247d57600080fd5b505af1158015612491573d6000803e3d6000fd5b50505050612516565b806020015173ffffffffffffffffffffffffffffffffffffffff1663064c0a3a308a84600001518b876040518663ffffffff1660e01b81526004016124e39594939291906140df565b600060405180830381600087803b1580156124fd57600080fd5b505af1158015612511573d6000803e3d6000fd5b505050505b5b838573ffffffffffffffffffffffffffffffffffffffff168a7f2bedee38cdb22411c14554191243c0e117c0088ddae3459876acd46a0fd538158987604051612561929190614139565b60405180910390a46125768987878787613337565b505050505050505050565b8261258b85610a19565b51116125c3576040517f9136d24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006125cf858561108e565b90506125dc81848461318e565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414612666576040517fff33650c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6126728585858561333e565b61268e6005600087815260200190815260200160002085613214565b600460008681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550818373ffffffffffffffffffffffffffffffffffffffff16867f29486b9e2ae569b440933a9b1b421467306fa21f3dcad439c262910a634963a9876040516127bc9190613a61565b60405180910390a46127d085858585613344565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361283d576040517f25bd6bd300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61284682612e06565b1561287d576040517fc5a8d37100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082036128b7576040517f238924d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128c360008484612d4f565b6128d260008460008486612d54565b60016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546129219190613ede565b9250508190555060405180604001604052808281526020018473ffffffffffffffffffffffffffffffffffffffff16815250600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b60008590508073ffffffffffffffffffffffffffffffffffffffff1663635490cc8585856040518463ffffffff1660e01b8152600401612a0193929190614162565b600060405180830381600087803b158015612a1b57600080fd5b505af1158015612a2f573d6000803e3d6000fd5b50505050612a3e878785612e75565b612a4b8787878787612e7a565b828673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4828673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d8888604051612b06929190613fa9565b60405180910390a450505050505050565b6000806000612b25846113fa565b509150915060008114612b6a578173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161492505050612bed565b8173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480612baa5750612ba98286611220565b5b80612be857508473ffffffffffffffffffffffffffffffffffffffff16612bd0856106e7565b73ffffffffffffffffffffffffffffffffffffffff16145b925050505b92915050565b60005b6064811015612d175760008060008573ffffffffffffffffffffffffffffffffffffffff1663fb25fb7a866040518263ffffffff1660e01b8152600401612c3d9190613a61565b606060405180830381865afa158015612c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c7e91906141a0565b92509250925080612c925750505050612d4a565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015612ccc57508682145b15612d03576040517ff911968900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b829550819450836001019350505050612bf6565b506040517feb20c44200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b505050565b5050505050565b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600360008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050612df8600084611902565b612e0183612f1c565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b5050505050565b600080612e8d83610af1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612ecf5750612ece8185611220565b5b80612f0d57508373ffffffffffffffffffffffffffffffffffffffff16612ef5846106e7565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b50565b50565b50565b612f2b828260006127d7565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d600080604051612fe99291906141f3565b60405180910390a4612ffd60008383612e75565b61300c60008360008085612e7a565b5050565b60006130318473ffffffffffffffffffffffffffffffffffffffff16611c8f565b15613181578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261305a6118fa565b8786866040518563ffffffff1660e01b815260040161307c9493929190614093565b6020604051808303816000875af19250505080156130b857506040513d601f19601f820116820180604052508101906130b59190614231565b60015b613131573d80600081146130e8576040519150601f19603f3d011682016040523d82523d6000602084013e6130ed565b606091505b506000815103613129576040517fbcb5663700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050613186565b600190505b949350505050565b826020015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415806131d1575082600001518114155b15613208576040517f37d6ce9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b5050505050565b81600183805490506132269190613eaa565b8154811061323757613236613d9e565b5b906000526020600020906002020182828154811061325857613257613d9e565b5b9060005260206000209060020201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050818054806132eb576132ea61425e565b5b60019003818190600052602060002090600202016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505090555050565b5050505050565b50505050565b50505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b508054600082556002029060005260206000209081019061339b919061339e565b50565b5b808211156133e0576000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060020161339f565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61342d816133f8565b811461343857600080fd5b50565b60008135905061344a81613424565b92915050565b600060208284031215613466576134656133ee565b5b60006134748482850161343b565b91505092915050565b60008115159050919050565b6134928161347d565b82525050565b60006020820190506134ad6000830184613489565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134de826134b3565b9050919050565b6134ee816134d3565b81146134f957600080fd5b50565b60008135905061350b816134e5565b92915050565b6000819050919050565b61352481613511565b811461352f57600080fd5b50565b6000813590506135418161351b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61359a82613551565b810181811067ffffffffffffffff821117156135b9576135b8613562565b5b80604052505050565b60006135cc6133e4565b90506135d88282613591565b919050565b600067ffffffffffffffff8211156135f8576135f7613562565b5b61360182613551565b9050602081019050919050565b82818337600083830152505050565b600061363061362b846135dd565b6135c2565b90508281526020810184848401111561364c5761364b61354c565b5b61365784828561360e565b509392505050565b600082601f83011261367457613673613547565b5b813561368484826020860161361d565b91505092915050565b600080600080600060a086880312156136a9576136a86133ee565b5b60006136b7888289016134fc565b95505060206136c8888289016134fc565b94505060406136d988828901613532565b93505060606136ea88828901613532565b925050608086013567ffffffffffffffff81111561370b5761370a6133f3565b5b6137178882890161365f565b9150509295509295909350565b60006020828403121561373a576137396133ee565b5b600061374884828501613532565b91505092915050565b61375a816134d3565b82525050565b60006020820190506137756000830184613751565b92915050565b60008060408385031215613792576137916133ee565b5b60006137a0858286016134fc565b92505060206137b185828601613532565b9150509250929050565b6000806000606084860312156137d4576137d36133ee565b5b60006137e2868287016134fc565b93505060206137f3868287016134fc565b925050604061380486828701613532565b9150509250925092565b60008060408385031215613825576138246133ee565b5b600061383385828601613532565b925050602061384485828601613532565b9150509250929050565b61385781613511565b82525050565b613866816134d3565b82525050565b604082016000820151613882600085018261384e565b506020820151613895602085018261385d565b50505050565b60006040820190506138b0600083018461386c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6040820160008201516138f8600085018261384e565b50602082015161390b602085018261385d565b50505050565b600061391d83836138e2565b60408301905092915050565b6000602082019050919050565b6000613941826138b6565b61394b81856138c1565b9350613956836138d2565b8060005b8381101561398757815161396e8882613911565b975061397983613929565b92505060018101905061395a565b5085935050505092915050565b600060208201905081810360008301526139ae8184613936565b905092915050565b6000806000606084860312156139cf576139ce6133ee565b5b60006139dd86828701613532565b93505060206139ee86828701613532565b925050604084013567ffffffffffffffff811115613a0f57613a0e6133f3565b5b613a1b8682870161365f565b9150509250925092565b600060208284031215613a3b57613a3a6133ee565b5b6000613a49848285016134fc565b91505092915050565b613a5b81613511565b82525050565b6000602082019050613a766000830184613a52565b92915050565b613a858161347d565b8114613a9057600080fd5b50565b600081359050613aa281613a7c565b92915050565b60008060408385031215613abf57613abe6133ee565b5b6000613acd858286016134fc565b9250506020613ade85828601613a93565b9150509250929050565b60008060008060808587031215613b0257613b016133ee565b5b6000613b10878288016134fc565b9450506020613b21878288016134fc565b9350506040613b3287828801613532565b925050606085013567ffffffffffffffff811115613b5357613b526133f3565b5b613b5f8782880161365f565b91505092959194509250565b600080600080600080600080610100898b031215613b8c57613b8b6133ee565b5b6000613b9a8b828c01613532565b9850506020613bab8b828c016134fc565b9750506040613bbc8b828c01613532565b9650506060613bcd8b828c01613532565b9550506080613bde8b828c016134fc565b94505060a0613bef8b828c01613532565b93505060c0613c008b828c01613a93565b92505060e089013567ffffffffffffffff811115613c2157613c206133f3565b5b613c2d8b828c0161365f565b9150509295985092959890939650565b60008060008060808587031215613c5757613c566133ee565b5b6000613c6587828801613532565b9450506020613c7687828801613532565b9350506040613c87878288016134fc565b9250506060613c9887828801613532565b91505092959194509250565b60008060408385031215613cbb57613cba6133ee565b5b6000613cc9858286016134fc565b9250506020613cda858286016134fc565b9150509250929050565b60008060008060808587031215613cfe57613cfd6133ee565b5b6000613d0c878288016134fc565b9450506020613d1d87828801613532565b9350506040613d2e87828801613532565b925050606085013567ffffffffffffffff811115613d4f57613d4e6133f3565b5b613d5b8782880161365f565b91505092959194509250565b6000606082019050613d7c6000830186613751565b613d896020830185613a52565b613d966040830184613489565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050613ddc816134e5565b92915050565b600060208284031215613df857613df76133ee565b5b6000613e0684828501613dcd565b91505092915050565b613e18816133f8565b82525050565b6000602082019050613e336000830184613e0f565b92915050565b600081519050613e4881613a7c565b92915050565b600060208284031215613e6457613e636133ee565b5b6000613e7284828501613e39565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613eb582613511565b9150613ec083613511565b9250828203905081811115613ed857613ed7613e7b565b5b92915050565b6000613ee982613511565b9150613ef483613511565b9250828201905080821115613f0c57613f0b613e7b565b5b92915050565b6000819050919050565b6000819050919050565b6000613f41613f3c613f3784613f12565b613f1c565b613511565b9050919050565b613f5181613f26565b82525050565b6000604082019050613f6c6000830185613a52565b613f796020830184613f48565b9392505050565b6000604082019050613f956000830185613751565b613fa26020830184613a52565b9392505050565b6000604082019050613fbe6000830185613a52565b613fcb6020830184613a52565b9392505050565b600081519050613fe18161351b565b92915050565b600060208284031215613ffd57613ffc6133ee565b5b600061400b84828501613fd2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561404e578082015181840152602081019050614033565b60008484015250505050565b600061406582614014565b61406f818561401f565b935061407f818560208601614030565b61408881613551565b840191505092915050565b60006080820190506140a86000830187613751565b6140b56020830186613751565b6140c26040830185613a52565b81810360608301526140d4818461405a565b905095945050505050565b600060a0820190506140f46000830188613751565b6141016020830187613751565b61410e6040830186613a52565b61411b6060830185613a52565b818103608083015261412d818461405a565b90509695505050505050565b600060408201905061414e6000830185613a52565b61415b6020830184613489565b9392505050565b60006060820190506141776000830186613a52565b6141846020830185613a52565b8181036040830152614196818461405a565b9050949350505050565b6000806000606084860312156141b9576141b86133ee565b5b60006141c786828701613dcd565b93505060206141d886828701613fd2565b92505060406141e986828701613e39565b9150509250925092565b60006040820190506142086000830185613f48565b6142156020830184613f48565b9392505050565b60008151905061422b81613424565b92915050565b600060208284031215614247576142466133ee565b5b60006142558482850161421c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212207f4d210640773c466a835b430e56fb71bdbe1af0b872d0e77f56c1dfbd854dfc64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F19951C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB3E1C718 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE97CEAA8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE97CEAA8 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xEB043606 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xFB25FB7A EQ PUSH2 0x4F4 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xB3E1C718 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xDEFA80C3 EQ PUSH2 0x470 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6F19951C EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x97961336 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xA898E364 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xB390C0AB EQ PUSH2 0x408 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x4182E4A3 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x4182E4A3 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x44EC9344 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x635490CC EQ PUSH2 0x324 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x64C0A3A EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x2F32F937 EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x368D JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x389B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x3994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x39B6 JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x3994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x3A25 JUMP JUMPDEST PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0xF17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x389B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x11A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x3AE8 JUMP JUMPDEST PUSH2 0x11C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x3B6B JUMP JUMPDEST PUSH2 0x11DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x3C3D JUMP JUMPDEST PUSH2 0x1203 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x3CA4 JUMP JUMPDEST PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x12B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5F1 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x659 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x6C1 JUMPI POP PUSH32 0x42B0E56F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 PUSH2 0x6D2 DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x6DF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1555 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 DUP3 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x710 DUP5 PUSH2 0xAF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP3 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x591DB6D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x803 PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI POP PUSH2 0x833 DUP2 PUSH2 0x82E PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x1220 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x982462B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x876 DUP4 DUP4 PUSH2 0x1902 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x885 DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x890 DUP5 DUP5 DUP5 PUSH2 0x19FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x89E PUSH2 0x334A JUMP JUMPDEST DUP2 PUSH2 0x8A8 DUP5 PUSH2 0xD79 JUMP JUMPDEST MLOAD GT PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA755CC000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA15 DUP2 PUSH1 0x0 PUSH2 0x1184 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xAE2 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA50 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB00 DUP6 PUSH2 0x13FA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP1 ISZERO PUSH2 0xB89 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9D DUP4 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP PUSH2 0xBC8 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x80275D3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0xC38 DUP6 DUP4 DUP7 PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC43 DUP7 PUSH2 0xA19 JUMP JUMPDEST MLOAD SWAP1 POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x98674B3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH32 0xE65085E689B77B126BA0BAC3B079AA8288F19F4D5445AF11C76003F8AB3075DD DUP5 PUSH1 0x40 MLOAD PUSH2 0xD5E SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xD71 DUP7 DUP5 DUP8 PUSH2 0x1CB7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xE42 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xDB0 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7772286600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0xF08 DUP2 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0xF12 DUP4 DUP4 PUSH2 0x1D06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF36 PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2DEE66E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0xF90 PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x103D PUSH2 0x18FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1096 PUSH2 0x334A JUMP JUMPDEST DUP2 PUSH2 0x10A0 DUP5 PUSH2 0xA19 JUMP JUMPDEST MLOAD GT PUSH2 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9136D24F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10FF JUMPI PUSH2 0x10FE PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1190 DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x119A DUP5 DUP5 PUSH2 0x1DB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11BD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2267 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH2 0x11CB DUP2 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x11D7 DUP6 DUP6 DUP6 DUP6 PUSH2 0x22B9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP8 PUSH2 0x11E8 DUP2 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x11F8 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x230C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x120D DUP2 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x1219 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2581 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80275D3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x42B0E56F00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1362 SWAP2 SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x137F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x3E4E JUMP JUMPDEST PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x850CCCEF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E4 DUP5 DUP5 DUP5 PUSH2 0x27D7 JUMP JUMPDEST PUSH2 0x13F4 PUSH1 0x0 DUP6 PUSH1 0x0 DUP6 DUP8 DUP7 PUSH2 0x29BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x89BA7E1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD EQ ISZERO SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x151C PUSH2 0x1516 PUSH2 0x18FA JUMP JUMPDEST DUP3 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x1552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x35D12E3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1561 DUP6 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xE146AF6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE3D91BFC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x166B JUMPI POP DUP4 DUP6 EQ JUMPDEST ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EEB0DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0x16F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80275D3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x42B0E56F00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1750 SWAP2 SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1791 SWAP2 SWAP1 PUSH2 0x3E4E JUMP JUMPDEST PUSH2 0x17C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF413CF9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D2 DUP6 DUP8 DUP7 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0x17DD DUP8 DUP8 DUP8 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x17EA DUP3 DUP8 DUP4 DUP8 DUP10 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x184B DUP6 DUP6 DUP9 PUSH2 0x2D5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x189A SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18AF DUP3 DUP8 DUP4 DUP8 DUP10 DUP9 PUSH2 0x29BF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x2E06 JUMP JUMPDEST PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x89BA7E1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190D DUP3 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A0A DUP4 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A74 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE146AF6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ADA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE3D91BFC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AE5 DUP6 DUP6 DUP6 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x1AF3 DUP3 DUP6 DUP4 PUSH1 0x0 DUP8 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B42 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B55 DUP4 PUSH1 0x0 DUP7 PUSH2 0x2D5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BA4 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1C67 SWAP3 SWAP2 SWAP1 PUSH2 0x3F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C7A DUP6 DUP6 DUP6 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x1C88 DUP3 DUP6 DUP4 PUSH1 0x0 DUP8 PUSH2 0x2E7A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1CCD PUSH2 0x1CC7 PUSH2 0x18FA JUMP JUMPDEST DUP3 PUSH2 0x2E81 JUMP JUMPDEST PUSH2 0x1D03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2728A9D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x1D56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8AC3CB1400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D5F DUP3 PUSH2 0x2F16 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x337A JUMP JUMPDEST DUP2 PUSH32 0x8AC4A0D65950C3E40448AFB2260E2E0EC36EA15644D9B39E37E85472E5F94451 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1DB4 DUP3 PUSH2 0x2F19 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DC6 DUP6 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1DD6 DUP7 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E27 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E3A DUP2 PUSH1 0x0 DUP9 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x1E49 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP11 PUSH2 0x2D54 JUMP JUMPDEST PUSH2 0x1E54 PUSH1 0x0 DUP8 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x1E5D DUP7 PUSH2 0x2F1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E68 DUP8 PUSH2 0xD79 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1E89 SWAP2 SWAP1 PUSH2 0x337A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1EA8 SWAP2 SWAP1 PUSH2 0x337A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2130 JUMPI DUP10 DUP4 LT PUSH2 0x1FB1 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F68 JUMPI PUSH2 0x1F67 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x4CB93AD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA8 SWAP3 SWAP2 SWAP1 PUSH2 0x3F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FC8 JUMPI PUSH2 0x1FC7 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP3 DUP11 SUB SWAP4 POP PUSH1 0x1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x205B JUMPI PUSH2 0x205A PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB390C0AB DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2095 JUMPI PUSH2 0x2094 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 DUP9 PUSH2 0x20AE SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20CB SWAP3 SWAP2 SWAP1 PUSH2 0x3FA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x210E SWAP2 SWAP1 PUSH2 0x3FE7 JUMP JUMPDEST PUSH2 0x2118 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST DUP4 PUSH2 0x2123 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1F27 JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x2182 DUP6 PUSH1 0x0 DUP13 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x2191 DUP8 PUSH1 0x0 DUP9 PUSH1 0x0 DUP15 PUSH2 0x2E7A JUMP JUMPDEST DUP10 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP10 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x224F SWAP3 SWAP2 SWAP1 PUSH2 0x3F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP8 POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2271 DUP4 DUP4 PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x227E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x3010 JUMP JUMPDEST PUSH2 0x22B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB5663700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22C4 DUP5 DUP5 DUP5 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x22D0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3010 JUMP JUMPDEST PUSH2 0x2306 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB5663700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2314 PUSH2 0x334A JUMP JUMPDEST DUP3 ISZERO PUSH2 0x232B JUMPI PUSH2 0x2324 DUP10 DUP8 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP PUSH2 0x2338 JUMP JUMPDEST PUSH2 0x2335 DUP10 DUP8 PUSH2 0x896 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2343 DUP2 DUP7 DUP7 PUSH2 0x318E JUMP JUMPDEST PUSH2 0x2350 DUP10 DUP8 DUP8 DUP8 DUP8 PUSH2 0x320D JUMP JUMPDEST DUP3 ISZERO PUSH2 0x2377 JUMPI PUSH2 0x2372 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH2 0x3214 JUMP JUMPDEST PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH2 0x23E7 PUSH1 0x4 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH2 0x3214 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2517 JUMPI PUSH1 0x0 DUP8 SUB PUSH2 0x249A JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP11 DUP8 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2463 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4093 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x247D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2491 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2516 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x64C0A3A ADDRESS DUP11 DUP5 PUSH1 0x0 ADD MLOAD DUP12 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2511 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH32 0x2BEDEE38CDB22411C14554191243C0E117C0088DDAE3459876ACD46A0FD53815 DUP10 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2561 SWAP3 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2576 DUP10 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3337 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x258B DUP6 PUSH2 0xA19 JUMP JUMPDEST MLOAD GT PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9136D24F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25CF DUP6 DUP6 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP PUSH2 0x25DC DUP2 DUP5 DUP5 PUSH2 0x318E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2666 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFF33650C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2672 DUP6 DUP6 DUP6 DUP6 PUSH2 0x333E JUMP JUMPDEST PUSH2 0x268E PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH2 0x3214 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0x29486B9E2AE569B440933A9B1B421467306FA21F3DCAD439C262910A634963A9 DUP8 PUSH1 0x40 MLOAD PUSH2 0x27BC SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x27D0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3344 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x283D JUMPI PUSH1 0x40 MLOAD PUSH32 0x25BD6BD300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2846 DUP3 PUSH2 0x2E06 JUMP JUMPDEST ISZERO PUSH2 0x287D JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5A8D37100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x28B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x238924D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28C3 PUSH1 0x0 DUP5 DUP5 PUSH2 0x2D4F JUMP JUMPDEST PUSH2 0x28D2 PUSH1 0x0 DUP5 PUSH1 0x0 DUP5 DUP7 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2921 SWAP2 SWAP1 PUSH2 0x3EDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x635490CC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A01 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4162 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2A3E DUP8 DUP8 DUP6 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x2A4B DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2E7A JUMP JUMPDEST DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2B06 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2B25 DUP5 PUSH2 0x13FA JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2B6A JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP PUSH2 0x2BED JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2BAA JUMPI POP PUSH2 0x2BA9 DUP3 DUP7 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2BE8 JUMPI POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BD0 DUP6 PUSH2 0x6E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x2D17 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB25FB7A DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C3D SWAP2 SWAP1 PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x41A0 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP1 PUSH2 0x2C92 JUMPI POP POP POP POP PUSH2 0x2D4A JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2CCC JUMPI POP DUP7 DUP3 EQ JUMPDEST ISZERO PUSH2 0x2D03 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF911968900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SWAP6 POP DUP2 SWAP5 POP DUP4 PUSH1 0x1 ADD SWAP4 POP POP POP POP PUSH2 0x2BF6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xEB20C44200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x2DF8 PUSH1 0x0 DUP5 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x2E01 DUP4 PUSH2 0x2F1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E8D DUP4 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2ECF JUMPI POP PUSH2 0x2ECE DUP2 DUP6 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2F0D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EF5 DUP5 PUSH2 0x6E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F2B DUP3 DUP3 PUSH1 0x0 PUSH2 0x27D7 JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0x2FE9 SWAP3 SWAP2 SWAP1 PUSH2 0x41F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2FFD PUSH1 0x0 DUP4 DUP4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x300C PUSH1 0x0 DUP4 PUSH1 0x0 DUP1 DUP6 PUSH2 0x2E7A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C8F JUMP JUMPDEST ISZERO PUSH2 0x3181 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x305A PUSH2 0x18FA JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4093 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x30B8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30B5 SWAP2 SWAP1 PUSH2 0x4231 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3131 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x30E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x3129 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB5663700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x31D1 JUMPI POP DUP3 PUSH1 0x0 ADD MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x3208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37D6CE9000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x3226 SWAP2 SWAP1 PUSH2 0x3EAA JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3237 JUMPI PUSH2 0x3236 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3258 JUMPI PUSH2 0x3257 PUSH2 0x3D9E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x32EB JUMPI PUSH2 0x32EA PUSH2 0x425E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x339B SWAP2 SWAP1 PUSH2 0x339E JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x33E0 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0x2 ADD PUSH2 0x339F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x342D DUP2 PUSH2 0x33F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x344A DUP2 PUSH2 0x3424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3466 JUMPI PUSH2 0x3465 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3474 DUP5 DUP3 DUP6 ADD PUSH2 0x343B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3492 DUP2 PUSH2 0x347D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DE DUP3 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34EE DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x350B DUP2 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3524 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP2 EQ PUSH2 0x352F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3541 DUP2 PUSH2 0x351B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x359A DUP3 PUSH2 0x3551 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x35B9 JUMPI PUSH2 0x35B8 PUSH2 0x3562 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CC PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x35D8 DUP3 DUP3 PUSH2 0x3591 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35F8 JUMPI PUSH2 0x35F7 PUSH2 0x3562 JUMP JUMPDEST JUMPDEST PUSH2 0x3601 DUP3 PUSH2 0x3551 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3630 PUSH2 0x362B DUP5 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x35C2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x364C JUMPI PUSH2 0x364B PUSH2 0x354C JUMP JUMPDEST JUMPDEST PUSH2 0x3657 DUP5 DUP3 DUP6 PUSH2 0x360E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3674 JUMPI PUSH2 0x3673 PUSH2 0x3547 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3684 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x361D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x36A9 JUMPI PUSH2 0x36A8 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36B7 DUP9 DUP3 DUP10 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C8 DUP9 DUP3 DUP10 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x36D9 DUP9 DUP3 DUP10 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x36EA DUP9 DUP3 DUP10 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x370B JUMPI PUSH2 0x370A PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3717 DUP9 DUP3 DUP10 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x373A JUMPI PUSH2 0x3739 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3748 DUP5 DUP3 DUP6 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x375A DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3792 JUMPI PUSH2 0x3791 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37A0 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37B1 DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37D4 JUMPI PUSH2 0x37D3 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37E2 DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x37F3 DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3804 DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3825 JUMPI PUSH2 0x3824 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3833 DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3844 DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3857 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3866 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3882 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x384E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3895 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x385D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x38B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x386C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38F8 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x384E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x390B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x385D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391D DUP4 DUP4 PUSH2 0x38E2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3941 DUP3 PUSH2 0x38B6 JUMP JUMPDEST PUSH2 0x394B DUP2 DUP6 PUSH2 0x38C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3956 DUP4 PUSH2 0x38D2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3987 JUMPI DUP2 MLOAD PUSH2 0x396E DUP9 DUP3 PUSH2 0x3911 JUMP JUMPDEST SWAP8 POP PUSH2 0x3979 DUP4 PUSH2 0x3929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x395A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39AE DUP2 DUP5 PUSH2 0x3936 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39CF JUMPI PUSH2 0x39CE PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39DD DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x39EE DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A0F JUMPI PUSH2 0x3A0E PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3A1B DUP7 DUP3 DUP8 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3B JUMPI PUSH2 0x3A3A PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A49 DUP5 DUP3 DUP6 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A5B DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A85 DUP2 PUSH2 0x347D JUMP JUMPDEST DUP2 EQ PUSH2 0x3A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AA2 DUP2 PUSH2 0x3A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3ABF JUMPI PUSH2 0x3ABE PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ACD DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3ADE DUP6 DUP3 DUP7 ADD PUSH2 0x3A93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3B02 JUMPI PUSH2 0x3B01 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B10 DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3B21 DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3B32 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B53 JUMPI PUSH2 0x3B52 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3B5F DUP8 DUP3 DUP9 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3B8C JUMPI PUSH2 0x3B8B PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B9A DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x3BAB DUP12 DUP3 DUP13 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x3BBC DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x3BCD DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x3BDE DUP12 DUP3 DUP13 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x3BEF DUP12 DUP3 DUP13 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x3C00 DUP12 DUP3 DUP13 ADD PUSH2 0x3A93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C21 JUMPI PUSH2 0x3C20 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3C2D DUP12 DUP3 DUP13 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C57 JUMPI PUSH2 0x3C56 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C65 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3C76 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3C87 DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3C98 DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CBB JUMPI PUSH2 0x3CBA PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CC9 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3CDA DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CFE JUMPI PUSH2 0x3CFD PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D0C DUP8 DUP3 DUP9 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D1D DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D2E DUP8 DUP3 DUP9 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D4F JUMPI PUSH2 0x3D4E PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH2 0x3D5B DUP8 DUP3 DUP9 ADD PUSH2 0x365F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D7C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x3D89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x3D96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3489 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3DDC DUP2 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DF8 JUMPI PUSH2 0x3DF7 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E06 DUP5 DUP3 DUP6 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E18 DUP2 PUSH2 0x33F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E48 DUP2 PUSH2 0x3A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E64 JUMPI PUSH2 0x3E63 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E72 DUP5 DUP3 DUP6 ADD PUSH2 0x3E39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EB5 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC0 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3ED8 JUMPI PUSH2 0x3ED7 PUSH2 0x3E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE9 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF4 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F0C JUMPI PUSH2 0x3F0B PUSH2 0x3E7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F41 PUSH2 0x3F3C PUSH2 0x3F37 DUP5 PUSH2 0x3F12 JUMP JUMPDEST PUSH2 0x3F1C JUMP JUMPDEST PUSH2 0x3511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F51 DUP2 PUSH2 0x3F26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F6C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x3F79 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F95 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x3FA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FBE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x3FCB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3FE1 DUP2 PUSH2 0x351B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FFD JUMPI PUSH2 0x3FFC PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x400B DUP5 DUP3 DUP6 ADD PUSH2 0x3FD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x404E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4033 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4065 DUP3 PUSH2 0x4014 JUMP JUMPDEST PUSH2 0x406F DUP2 DUP6 PUSH2 0x401F JUMP JUMPDEST SWAP4 POP PUSH2 0x407F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4030 JUMP JUMPDEST PUSH2 0x4088 DUP2 PUSH2 0x3551 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x40A8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x40B5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x40C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x40D4 DUP2 DUP5 PUSH2 0x405A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x40F4 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x4101 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x410E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x411B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x412D DUP2 DUP5 PUSH2 0x405A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x414E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x415B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3489 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4177 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x4184 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4196 DUP2 DUP5 PUSH2 0x405A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x41B9 JUMPI PUSH2 0x41B8 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41C7 DUP7 DUP3 DUP8 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x41D8 DUP7 DUP3 DUP8 ADD PUSH2 0x3FD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x41E9 DUP7 DUP3 DUP8 ADD PUSH2 0x3E39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4208 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3F48 JUMP JUMPDEST PUSH2 0x4215 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x422B DUP2 PUSH2 0x3424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4247 JUMPI PUSH2 0x4246 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4255 DUP5 DUP3 DUP6 ADD PUSH2 0x421C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x4D210640773C466A835B430E56FB71BDBE1AF0B872D0E77F56C1DFBD854DFC64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "15661:56561:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19090:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21051:277;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;39543:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39141:353;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19847:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;59253:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60915:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20086:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35160:79;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58435:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33476:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;46974:858;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;57736:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19488:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;51118:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;39782:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;60165:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35749:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29465:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20305:231;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;53272:500;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;48594:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40109:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31332:522;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34608:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;19090:349;19180:4;19230:25;19215:40;;;:11;:40;;;;:96;;;;19286:25;19271:40;;;:11;:40;;;;19215:96;:160;;;;19342:33;19327:48;;;:11;:48;;;;19215:160;:217;;;;19406:26;19391:41;;;:11;:41;;;;19215:217;19196:236;;19090:349;;;:::o;21051:277::-;21249:7;18908:35;18935:7;18908:26;:35::i;:::-;21268:53:::1;21282:4;21288:2;21292:7;21301:13;21316:4;21268:13;:53::i;:::-;21051:277:::0;;;;;;:::o;39543:190::-;39624:7;39643:23;39658:7;39643:14;:23::i;:::-;39684:15;:24;39700:7;39684:24;;;;;;;;;;;:42;39709:16;39717:7;39709;:16::i;:::-;39684:42;;;;;;;;;;;;;;;;;;;;;;;;;39677:49;;39543:190;;;:::o;39141:353::-;39212:13;39228:16;39236:7;39228;:16::i;:::-;39212:32;;39264:5;39258:11;;:2;:11;;;39254:54;;39278:30;;;;;;;;;;;;;;39254:54;39339:5;39323:21;;:12;:10;:12::i;:::-;:21;;;;:63;;;;;39349:37;39366:5;39373:12;:10;:12::i;:::-;39349:16;:37::i;:::-;39348:38;39323:63;39319:136;;;39407:48;;;;;;;;;;;;;;39319:136;39466:21;39475:2;39479:7;39466:8;:21::i;:::-;39202:292;39141:353;;:::o;19847:190::-;19983:7;18908:35;18935:7;18908:26;:35::i;:::-;20002:28:::1;20012:4;20018:2;20022:7;20002:9;:28::i;:::-;19847:190:::0;;;;:::o;59253:288::-;59354:12;;:::i;:::-;59413:5;59382:20;59393:8;59382:10;:20::i;:::-;:27;:36;59378:71;;59427:22;;;;;;;;;;;;;;59378:71;59459:18;59480:15;:25;59496:8;59480:25;;;;;;;;;;;59506:5;59480:32;;;;;;;;:::i;:::-;;;;;;;;;;;;59459:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59529:5;59522:12;;;59253:288;;;;:::o;60915:189::-;61030:4;61096:1;61053:16;:30;61070:12;61053:30;;;;;;;;;;;;;;;:39;61084:7;61053:39;;;;;;;;;;;;:44;;61046:51;;60915:189;;;;:::o;20086:170::-;20210:39;20227:4;20233:2;20237:7;20210:39;;;;;;;;;;;;:16;:39::i;:::-;20086:170;;;:::o;35160:79::-;35216:16;35221:7;35230:1;35216:4;:16::i;:::-;;35160:79;:::o;58435:212::-;58523:14;58549:30;58582:16;:26;58599:8;58582:26;;;;;;;;;;;58549:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58625:15;58618:22;;;58435:212;;;:::o;33476:339::-;33581:7;33601:13;33616:20;33638:10;33652:44;33679:7;33652:13;:44::i;:::-;33600:96;;;;;;33710:5;33706:81;;;33748:5;33739:23;;;33763:12;33739:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33731:45;;33706:81;33803:5;33796:12;;;;;33476:339;;;:::o;46974:858::-;47101:24;47116:8;47101:14;:24::i;:::-;47136:20;47159:12;:10;:12::i;:::-;47136:35;;47186:25;:12;:23;;;:25::i;:::-;47181:54;;47220:15;;;;;;;;;;;;;;47181:54;47246:18;47267:90;;;;;;;;47339:7;47267:90;;;;47304:12;47267:90;;;;;47246:111;;47368:48;47384:8;47394:12;47408:7;47368:15;:48::i;:::-;47427:14;47444:27;47462:8;47444:17;:27::i;:::-;:34;47427:51;;47502:3;47493:6;:12;47489:146;;;47521:16;:26;47538:8;47521:26;;;;;;;;;;;47553:5;47521:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47489:146;;;47597:27;;;;;;;;;;;;;;47489:146;47759:7;47745:12;47713:54;;47727:8;47713:54;47737:6;47713:54;;;;;;:::i;:::-;;;;;;;;47778:47;47793:8;47803:12;47817:7;47778:14;:47::i;:::-;47091:741;;;46974:858;;;:::o;57736:190::-;57817:14;57843:23;57869:15;:25;57885:8;57869:25;;;;;;;;;;;57843:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57911:8;57904:15;;;57736:190;;;:::o;19488:189::-;19551:7;19591:1;19574:19;;:5;:19;;;19570:67;;19602:35;;;;;;;;;;;;;;19570:67;19654:9;:16;19664:5;19654:16;;;;;;;;;;;;;;;;19647:23;;19488:189;;;:::o;51118:170::-;51220:7;17968:29;17989:7;17968:20;:29::i;:::-;51239:42:::1;51258:7;51267:13;51239:18;:42::i;:::-;51118:170:::0;;;:::o;39782:278::-;39887:8;39871:24;;:12;:10;:12::i;:::-;:24;;;39867:60;;39904:23;;;;;;;;;;;;;;39867:60;39982:8;39937:18;:32;39956:12;:10;:12::i;:::-;39937:32;;;;;;;;;;;;;;;:42;39970:8;39937:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;40034:8;40005:48;;40020:12;:10;:12::i;:::-;40005:48;;;40044:8;40005:48;;;;;;:::i;:::-;;;;;;;;39782:278;;:::o;60165:322::-;60273:12;;:::i;:::-;60339:5;60301:27;60319:8;60301:17;:27::i;:::-;:34;:43;60297:97;;60365:29;;;;;;;;;;;;;;60297:97;60404:18;60425:16;:26;60442:8;60425:26;;;;;;;;;;;60452:5;60425:33;;;;;;;;:::i;:::-;;;;;;;;;;;;60404:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60475:5;60468:12;;;60165:322;;;;:::o;35749:203::-;35887:7;35869;18908:35;18935:7;18908:26;:35::i;:::-;35913:32:::1;35919:7;35928:16;35913:5;:32::i;:::-;35906:39;;35749:203:::0;;;;;:::o;29465:108::-;29540:26;29550:2;29554:7;29540:26;;;;;;;;;;;;:9;:26::i;:::-;29465:108;;:::o;20305:231::-;20472:7;18908:35;18935:7;18908:26;:35::i;:::-;20491:38:::1;20505:4;20511:2;20515:7;20524:4;20491:13;:38::i;:::-;20305:231:::0;;;;;:::o;53272:500::-;53546:7;17968:29;17989:7;17968:20;:29::i;:::-;53565:200:::1;53593:7;53614:2;53630:13;53657:10;53681:12;53707:7;53728:9;53751:4;53565:14;:200::i;:::-;53272:500:::0;;;;;;;;;:::o;48594:255::-;48765:8;17968:29;17989:7;17968:20;:29::i;:::-;48785:57:::1;48798:8;48808:10;48820:12;48834:7;48785:12;:57::i;:::-;48594:255:::0;;;;;:::o;40109:175::-;40219:4;40242:18;:25;40261:5;40242:25;;;;;;;;;;;;;;;:35;40268:8;40242:35;;;;;;;;;;;;;;;;;;;;;;;;;40235:42;;40109:175;;;;:::o;31332:522::-;31567:15;:2;:13;;;:15::i;:::-;31562:44;;31591:15;;;;;;;;;;;;;;31562:44;31629:2;31621:29;;;31651:26;31621:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31616:113;;31699:30;;;;;;;;;;;;;;31616:113;31740:38;31751:2;31755:7;31764:13;31740:10;:38::i;:::-;31788:59;31807:1;31811:2;31815:1;31818:13;31833:7;31842:4;31788:10;:59::i;:::-;31332:522;;;;:::o;34608:322::-;34691:7;34700;34709:4;34725:24;34752:13;:22;34766:7;34752:22;;;;;;;;;;;34725:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34818:1;34788:32;;:5;:18;;;:32;;;34784:67;;34829:22;;;;;;;;;;;;;;34784:67;34869:5;:18;;;34889:5;:13;;;34921:1;34904:5;:13;;;:18;;34861:62;;;;;;;34608:322;;;;;:::o;18487:182::-;18568:47;18593:12;:10;:12::i;:::-;18607:7;18568:24;:47::i;:::-;18563:99;;18636:26;;;;;;;;;;;;;;18563:99;18487:182;:::o;24634:1323::-;24816:22;24840:16;24862:22;24876:7;24862:13;:22::i;:::-;24815:69;;;;;24916:4;24898:22;;:14;:22;;;24894:69;;24929:34;;;;;;;;;;;;;;24894:69;24991:1;24977:16;;:2;:16;;;24973:61;;25002:32;;;;;;;;;;;;;;24973:61;25062:4;25048:19;;:2;:19;;;:47;;;;;25082:13;25071:7;:24;25048:47;25044:96;;;25116:24;;;;;;;;;;;;;;25044:96;25271:15;:2;:13;;;:15::i;:::-;25266:44;;25295:15;;;;;;;;;;;;;;25266:44;25333:2;25325:29;;;25355:26;25325:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25320:125;;25403:42;;;;;;;;;;;;;;25320:125;25455:52;25480:7;25489:2;25493:13;25455:24;:52::i;:::-;25518:39;25539:4;25545:2;25549:7;25518:20;:39::i;:::-;25567:150;25607:14;25635:2;25651:8;25673:13;25700:7;25567:26;:150::i;:::-;25746:1;25727:9;:15;25737:4;25727:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;25757:57;25787:7;25796:13;25811:2;25757:29;:57::i;:::-;25841:1;25824:9;:13;25834:2;25824:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;25880:70;25891:14;25907:2;25911:8;25921:13;25936:7;25945:4;25880:10;:70::i;:::-;24805:1152;;24634:1323;;;;;:::o;44029:132::-;44107:16;44115:7;44107;:16::i;:::-;44102:52;;44132:22;;;;;;;;;;;;;;44102:52;44029:132;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;40553:202:6:-;40627:13;40643:16;40651:7;40643;:16::i;:::-;40627:32;;40703:2;40669:15;:24;40685:7;40669:24;;;;;;;;;;;:31;40694:5;40669:31;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;40740:7;40736:2;40720:28;;40729:5;40720:28;;;;;;;;;;;;40617:138;40553:202;;:::o;23186:825::-;23306:22;23330:16;23352:22;23366:7;23352:13;:22::i;:::-;23305:69;;;;;23406:4;23388:22;;:14;:22;;;23384:69;;23419:34;;;;;;;;;;;;;;23384:69;23481:1;23467:16;;:2;:16;;;23463:61;;23492:32;;;;;;;;;;;;;;23463:61;23535:39;23556:4;23562:2;23566:7;23535:20;:39::i;:::-;23584:68;23611:14;23627:2;23631:8;23641:1;23644:7;23584:26;:68::i;:::-;23682:1;23663:9;:15;23673:4;23663:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;23693:45;23723:7;23732:1;23735:2;23693:29;:45::i;:::-;23765:1;23748:9;:13;23758:2;23748:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;23801:7;23797:2;23782:27;;23791:4;23782:27;;;;;;;;;;;;23870:7;23853:2;23824:54;;23837:14;23824:54;;;23857:8;23867:1;23824:54;;;;;;;:::i;:::-;;;;;;;;23889:38;23909:4;23915:2;23919:7;23889:19;:38::i;:::-;23937:67;23963:14;23979:2;23983:8;23993:1;23996:7;23937:25;:67::i;:::-;23295:716;;23186:825;;;:::o;1412:320:3:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;64950:130:6:-;;;;:::o;65869:129::-;;;;:::o;17555:170::-;17630:41;17649:12;:10;:12::i;:::-;17663:7;17630:18;:41::i;:::-;17625:93;;17692:26;;;;;;;;;;;;;;17625:93;17555:170;:::o;51934:394::-;52088:13;52053:16;:25;52070:7;52053:25;;;;;;;;;;;:32;;;;:48;52049:101;;;52122:28;;;;;;;;;;;;;;52049:101;52161:33;52186:7;52161:24;:33::i;:::-;52211:16;:25;52228:7;52211:25;;;;;;;;;;;;52204:32;;;;:::i;:::-;52271:7;52251:28;;;;;;;;;;52289:32;52313:7;52289:23;:32::i;:::-;51934:394;;:::o;36504:2467::-;36610:7;36630:22;36654:16;36676:22;36690:7;36676:13;:22::i;:::-;36629:69;;;;;36708:13;36724:16;36732:7;36724;:16::i;:::-;36708:32;;36779:1;36750:9;:25;36760:14;36750:25;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;36791:48;36812:5;36827:1;36831:7;36791:20;:48::i;:::-;36849:146;36889:14;36925:1;36941:8;36963:1;36978:7;36849:26;:146::i;:::-;37006:29;37023:1;37027:7;37006:8;:29::i;:::-;37045:24;37061:7;37045:15;:24::i;:::-;37080:23;37106:19;37117:7;37106:10;:19::i;:::-;37080:45;;37143:15;:24;37159:7;37143:24;;;;;;;;;;;;37136:31;;;;:::i;:::-;37184:16;:25;37201:7;37184:25;;;;;;;;;;;;37177:32;;;;:::i;:::-;37226:15;:24;37242:7;37226:24;;;;;;;;;;;:31;37251:5;37226:31;;;;;;;;;;;;;;;;37219:38;;;;;;;;;;;37268:29;37307:23;37341:14;37358:8;:15;37341:32;;37402:9;37397:1065;37417:6;37413:1;:10;37397:1065;;;37464:16;37445:15;:35;37441:196;;37551:8;37560:1;37551:11;;;;;;;;:::i;:::-;;;;;;;;:27;;;37600:8;37609:1;37600:11;;;;;;;;:::i;:::-;;;;;;;;:19;;;37505:132;;;;;;;;;;;;:::i;:::-;;;;;;;;37441:196;37658:16;:45;37675:8;37684:1;37675:11;;;;;;;;:::i;:::-;;;;;;;;:27;;;37658:45;;;;;;;;;;;;;;;:96;37721:8;37730:1;37721:11;;;;;;;;:::i;:::-;;;;;;;;:19;;;37658:96;;;;;;;;;;;37651:103;;;37921:15;37902:16;:34;37878:58;;38391:1;38233:8;38242:1;38233:11;;;;;;;;:::i;:::-;;;;;;;;:27;;;38224:42;;;38288:8;38297:1;38288:11;;;;;;;;:::i;:::-;;;;;;;;:19;;;38353:1;38329:21;:25;;;;:::i;:::-;38224:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:168;;;;:::i;:::-;38189:203;;;;;:::i;:::-;;;38434:3;;;;;37397:1065;;;;38568:13;:22;38582:7;38568:22;;;;;;;;;;;;38561:29;;;;;;;;;;;;;;;;;;;;;;;38601:47;38621:5;38636:1;38640:7;38601:19;:47::i;:::-;38658:145;38697:14;38733:1;38749:8;38771:1;38786:7;38658:25;:145::i;:::-;38846:7;38842:1;38818:36;;38827:5;38818:36;;;;;;;;;;;;38923:7;38906:1;38869:62;;38882:14;38869:62;;;38910:8;38920:1;38869:62;;;;;;;:::i;:::-;;;;;;;;38949:15;38942:22;;;;;;;;;36504:2467;;;;:::o;29888:278::-;30012:18;30018:2;30022:7;30012:5;:18::i;:::-;30045:53;30076:1;30080:2;30084:7;30093:4;30045:22;:53::i;:::-;30040:119;;30119:40;;;;;;;;;;;;;;30040:119;29888:278;;;:::o;22367:308::-;22517:28;22527:4;22533:2;22537:7;22517:9;:28::i;:::-;22560:47;22583:4;22589:2;22593:7;22602:4;22560:22;:47::i;:::-;22555:113;;22628:40;;;;;;;;;;;;;;22555:113;22367:308;;;;:::o;54981:1832::-;55263:18;;:::i;:::-;55295:9;55291:150;;;55328:35;55343:7;55352:10;55328:14;:35::i;:::-;55320:43;;55291:150;;;55402:28;55410:7;55419:10;55402:7;:28::i;:::-;55394:36;;55291:150;55450:49;55470:5;55477:12;55491:7;55450:19;:49::i;:::-;55510:145;55544:7;55565:10;55589:12;55615:7;55636:9;55510:20;:145::i;:::-;55670:9;55666:246;;;55695:58;55715:16;:25;55732:7;55715:25;;;;;;;;;;;55742:10;55695:19;:58::i;:::-;55666:246;;;55791:16;:30;55808:12;55791:30;;;;;;;;;;;;;;;:39;55822:7;55791:39;;;;;;;;;;;55784:46;;;55844:57;55864:15;:24;55880:7;55864:24;;;;;;;;;;;55890:10;55844:19;:57::i;:::-;55666:246;55940:1;55926:16;;:2;:16;;;55922:574;;55979:1;55962:13;:18;55958:528;;56008:12;56000:38;;;56068:4;56095:2;56119:7;56148:4;56000:170;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55958:528;;;56259:5;:21;;;56250:48;;;56328:4;56355:2;56379:5;:13;;;56414;56449:4;56250:221;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55958:528;55922:574;56612:7;56586:12;56511:141;;56541:7;56511:141;56562:10;56633:9;56511:141;;;;;;;:::i;:::-;;;;;;;;56662:144;56695:7;56716:10;56740:12;56766:7;56787:9;56662:19;:144::i;:::-;55253:1560;54981:1832;;;;;;;;:::o;49732:969::-;49938:10;49900:27;49918:8;49900:17;:27::i;:::-;:34;:48;49896:102;;49969:29;;;;;;;;;;;;;;49896:102;50009:18;50030:36;50045:8;50055:10;50030:14;:36::i;:::-;50009:57;;50076:49;50096:5;50103:12;50117:7;50076:19;:49::i;:::-;50182:1;50139:16;:30;50156:12;50139:30;;;;;;;;;;;;;;;:39;50170:7;50139:39;;;;;;;;;;;;:44;50135:89;;50204:20;;;;;;;;;;;;;;50135:89;50235:63;50254:8;50264:10;50276:12;50290:7;50235:18;:63::i;:::-;50341:59;50361:16;:26;50378:8;50361:26;;;;;;;;;;;50389:10;50341:19;:59::i;:::-;50437:15;:25;50453:8;50437:25;;;;;;;;;;;50468:5;50437:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50526:1;50484:16;:30;50501:12;50484:30;;;;;;;;;;;;;;;:39;50515:7;50484:39;;;;;;;;;;;:43;;;;50613:7;50599:12;50563:58;;50577:8;50563:58;50587:10;50563:58;;;;;;:::i;:::-;;;;;;;;50632:62;50650:8;50660:10;50672:12;50686:7;50632:17;:62::i;:::-;49886:815;49732:969;;;;:::o;32323:589::-;32461:1;32447:16;;:2;:16;;;32443:57;;32472:28;;;;;;;;;;;;;;32443:57;32514:16;32522:7;32514;:16::i;:::-;32510:55;;;32539:26;;;;;;;;;;;;;;32510:55;32590:1;32579:7;:12;32575:42;;32600:17;;;;;;;;;;;;;;32575:42;32628:45;32657:1;32661:2;32665:7;32628:20;:45::i;:::-;32683:69;32718:1;32722:2;32726:1;32729:13;32744:7;32683:26;:69::i;:::-;32780:1;32763:9;:13;32773:2;32763:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;32816:89;;;;;;;;32881:13;32816:89;;;;32856:2;32816:89;;;;;32791:13;:22;32805:7;32791:22;;;;;;;;;;;:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32323:589;;;:::o;26678:540::-;26873:21;26906:2;26873:36;;26919:12;:21;;;26941:13;26956:7;26965:4;26919:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26980:38;27000:4;27006:2;27010:7;26980:19;:38::i;:::-;27028:69;27054:4;27060:2;27064:8;27074:13;27089:7;27028:25;:69::i;:::-;27132:7;27128:2;27113:27;;27122:4;27113:27;;;;;;;;;;;;27203:7;27174:2;27155:56;;27168:4;27155:56;;;27178:8;27188:13;27155:56;;;;;;;:::i;:::-;;;;;;;;26863:355;26678:540;;;;;;:::o;43005:532::-;43126:4;43143:13;43158:16;43180:22;43194:7;43180:13;:22::i;:::-;43142:60;;;;;43292:1;43280:8;:13;43276:69;;43328:5;43317:16;;:7;:16;;;43309:25;;;;;;43276:69;43429:5;43418:16;;:7;:16;;;:64;;;;43450:32;43467:5;43474:7;43450:16;:32::i;:::-;43418:64;:111;;;;43522:7;43498:31;;:20;43510:7;43498:11;:20::i;:::-;:31;;;43418:111;43410:120;;;;43005:532;;;;;:::o;27846:1031::-;27999:9;27994:843;15830:3;28010:1;:45;27994:843;;;28091:17;28126:24;28168:10;28204:14;28195:38;;;28234:8;28195:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28073:170;;;;;;28334:5;28329:51;;28359:7;;;;;;28329:51;28511:4;28490:26;;:9;:26;;;:59;;;;;28540:9;28520:16;:29;28490:59;28486:135;;;28576:30;;;;;;;;;;;;;;28486:135;28717:9;28700:26;;28751:16;28740:27;;28809:3;;;;;28059:778;;;27994:843;;;;28853:17;;;;;;;;;;;;;;27846:1031;;;;:::o;61867:122::-;;;;:::o;63250:184::-;;;;;;:::o;41168:386::-;41333:89;;;;;;;;41398:13;41333:89;;;;41373:2;41333:89;;;;;41308:13;:22;41322:7;41308:22;;;;;;;;;;;:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41484:29;41501:1;41505:7;41484:8;:29::i;:::-;41523:24;41539:7;41523:15;:24::i;:::-;41168:386;;;:::o;44485:144::-;44550:4;44620:1;44573:49;;:13;:22;44587:7;44573:22;;;;;;;;;;;:35;;;;;;;;;;;;:49;;;;44566:56;;44485:144;;;:::o;62568:121::-;;;;:::o;63977:183::-;;;;;;:::o;42307:300::-;42422:4;42438:13;42454:16;42462:7;42454;:16::i;:::-;42438:32;;42499:5;42488:16;;:7;:16;;;:64;;;;42520:32;42537:5;42544:7;42520:16;:32::i;:::-;42488:64;:111;;;;42592:7;42568:31;;:20;42580:7;42568:11;:20::i;:::-;:31;;;42488:111;42480:120;;;42307:300;;;;:::o;71039:70::-;;:::o;71426:69::-;;:::o;41723:61::-;;:::o;30589:332::-;30660:26;30671:2;30675:7;30684:1;30660:10;:26::i;:::-;30727:7;30723:2;30702:33;;30719:1;30702:33;;;;;;;;;;;;30785:7;30775:2;30750:43;;30771:1;30750:43;;;30779:1;30782;30750:43;;;;;;;:::i;:::-;;;;;;;;30804:44;30832:1;30836:2;30840:7;30804:19;:44::i;:::-;30858:56;30892:1;30896:2;30900:1;30903;30906:7;30858:25;:56::i;:::-;30589:332;;:::o;45177:944::-;45326:4;45346:15;:2;:13;;;:15::i;:::-;45342:773;;;45413:2;45397:36;;;45455:12;:10;:12::i;:::-;45489:4;45515:7;45544:4;45397:169;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;45377:686;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45762:1;45745:6;:13;:18;45741:308;;45794:40;;;;;;;;;;;;;;45741:308;46001:6;45995:13;45986:6;45982:2;45978:15;45971:38;45377:686;45638:41;;;45628:51;;;:6;:51;;;;45621:58;;;;;45342:773;46100:4;46093:11;;45177:944;;;;;;;:::o;56819:291::-;57002:5;:21;;;56983:40;;:15;:40;;;;:83;;;;57053:5;:13;;;57039:10;:27;;56983:83;56966:137;;;57084:19;;;;;;;;;;;;;;56966:137;56819:291;;;:::o;69250:187::-;;;;;;:::o;72069:151::-;72169:5;72190:1;72175:5;:12;;;;:16;;;;:::i;:::-;72169:23;;;;;;;;:::i;:::-;;;;;;;;;;;;72154:5;72160;72154:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;72202:5;:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;72069:151;;:::o;70536:186::-;;;;;;:::o;66897:162::-;;;;;:::o;67984:161::-;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:117::-;2490:1;2487;2480:12;2504:117;2613:1;2610;2603:12;2627:102;2668:6;2719:2;2715:7;2710:2;2703:5;2699:14;2695:28;2685:38;;2627:102;;;:::o;2735:180::-;2783:77;2780:1;2773:88;2880:4;2877:1;2870:15;2904:4;2901:1;2894:15;2921:281;3004:27;3026:4;3004:27;:::i;:::-;2996:6;2992:40;3134:6;3122:10;3119:22;3098:18;3086:10;3083:34;3080:62;3077:88;;;3145:18;;:::i;:::-;3077:88;3185:10;3181:2;3174:22;2964:238;2921:281;;:::o;3208:129::-;3242:6;3269:20;;:::i;:::-;3259:30;;3298:33;3326:4;3318:6;3298:33;:::i;:::-;3208:129;;;:::o;3343:307::-;3404:4;3494:18;3486:6;3483:30;3480:56;;;3516:18;;:::i;:::-;3480:56;3554:29;3576:6;3554:29;:::i;:::-;3546:37;;3638:4;3632;3628:15;3620:23;;3343:307;;;:::o;3656:146::-;3753:6;3748:3;3743;3730:30;3794:1;3785:6;3780:3;3776:16;3769:27;3656:146;;;:::o;3808:423::-;3885:5;3910:65;3926:48;3967:6;3926:48;:::i;:::-;3910:65;:::i;:::-;3901:74;;3998:6;3991:5;3984:21;4036:4;4029:5;4025:16;4074:3;4065:6;4060:3;4056:16;4053:25;4050:112;;;4081:79;;:::i;:::-;4050:112;4171:54;4218:6;4213:3;4208;4171:54;:::i;:::-;3891:340;3808:423;;;;;:::o;4250:338::-;4305:5;4354:3;4347:4;4339:6;4335:17;4331:27;4321:122;;4362:79;;:::i;:::-;4321:122;4479:6;4466:20;4504:78;4578:3;4570:6;4563:4;4555:6;4551:17;4504:78;:::i;:::-;4495:87;;4311:277;4250:338;;;;:::o;4594:1089::-;4698:6;4706;4714;4722;4730;4779:3;4767:9;4758:7;4754:23;4750:33;4747:120;;;4786:79;;:::i;:::-;4747:120;4906:1;4931:53;4976:7;4967:6;4956:9;4952:22;4931:53;:::i;:::-;4921:63;;4877:117;5033:2;5059:53;5104:7;5095:6;5084:9;5080:22;5059:53;:::i;:::-;5049:63;;5004:118;5161:2;5187:53;5232:7;5223:6;5212:9;5208:22;5187:53;:::i;:::-;5177:63;;5132:118;5289:2;5315:53;5360:7;5351:6;5340:9;5336:22;5315:53;:::i;:::-;5305:63;;5260:118;5445:3;5434:9;5430:19;5417:33;5477:18;5469:6;5466:30;5463:117;;;5499:79;;:::i;:::-;5463:117;5604:62;5658:7;5649:6;5638:9;5634:22;5604:62;:::i;:::-;5594:72;;5388:288;4594:1089;;;;;;;;:::o;5689:329::-;5748:6;5797:2;5785:9;5776:7;5772:23;5768:32;5765:119;;;5803:79;;:::i;:::-;5765:119;5923:1;5948:53;5993:7;5984:6;5973:9;5969:22;5948:53;:::i;:::-;5938:63;;5894:117;5689:329;;;;:::o;6024:118::-;6111:24;6129:5;6111:24;:::i;:::-;6106:3;6099:37;6024:118;;:::o;6148:222::-;6241:4;6279:2;6268:9;6264:18;6256:26;;6292:71;6360:1;6349:9;6345:17;6336:6;6292:71;:::i;:::-;6148:222;;;;:::o;6376:474::-;6444:6;6452;6501:2;6489:9;6480:7;6476:23;6472:32;6469:119;;;6507:79;;:::i;:::-;6469:119;6627:1;6652:53;6697:7;6688:6;6677:9;6673:22;6652:53;:::i;:::-;6642:63;;6598:117;6754:2;6780:53;6825:7;6816:6;6805:9;6801:22;6780:53;:::i;:::-;6770:63;;6725:118;6376:474;;;;;:::o;6856:619::-;6933:6;6941;6949;6998:2;6986:9;6977:7;6973:23;6969:32;6966:119;;;7004:79;;:::i;:::-;6966:119;7124:1;7149:53;7194:7;7185:6;7174:9;7170:22;7149:53;:::i;:::-;7139:63;;7095:117;7251:2;7277:53;7322:7;7313:6;7302:9;7298:22;7277:53;:::i;:::-;7267:63;;7222:118;7379:2;7405:53;7450:7;7441:6;7430:9;7426:22;7405:53;:::i;:::-;7395:63;;7350:118;6856:619;;;;;:::o;7481:474::-;7549:6;7557;7606:2;7594:9;7585:7;7581:23;7577:32;7574:119;;;7612:79;;:::i;:::-;7574:119;7732:1;7757:53;7802:7;7793:6;7782:9;7778:22;7757:53;:::i;:::-;7747:63;;7703:117;7859:2;7885:53;7930:7;7921:6;7910:9;7906:22;7885:53;:::i;:::-;7875:63;;7830:118;7481:474;;;;;:::o;7961:108::-;8038:24;8056:5;8038:24;:::i;:::-;8033:3;8026:37;7961:108;;:::o;8075:::-;8152:24;8170:5;8152:24;:::i;:::-;8147:3;8140:37;8075:108;;:::o;8243:515::-;8384:4;8379:3;8375:14;8474:4;8467:5;8463:16;8457:23;8493:63;8550:4;8545:3;8541:14;8527:12;8493:63;:::i;:::-;8399:167;8659:4;8652:5;8648:16;8642:23;8678:63;8735:4;8730:3;8726:14;8712:12;8678:63;:::i;:::-;8576:175;8353:405;8243:515;;:::o;8764:310::-;8901:4;8939:2;8928:9;8924:18;8916:26;;8952:115;9064:1;9053:9;9049:17;9040:6;8952:115;:::i;:::-;8764:310;;;;:::o;9080:136::-;9169:6;9203:5;9197:12;9187:22;;9080:136;;;:::o;9222:206::-;9343:11;9377:6;9372:3;9365:19;9417:4;9412:3;9408:14;9393:29;;9222:206;;;;:::o;9434:154::-;9523:4;9546:3;9538:11;;9576:4;9571:3;9567:14;9559:22;;9434:154;;;:::o;9648:505::-;9779:4;9774:3;9770:14;9869:4;9862:5;9858:16;9852:23;9888:63;9945:4;9940:3;9936:14;9922:12;9888:63;:::i;:::-;9794:167;10054:4;10047:5;10043:16;10037:23;10073:63;10130:4;10125:3;10121:14;10107:12;10073:63;:::i;:::-;9971:175;9748:405;9648:505;;:::o;10159:267::-;10272:10;10293:90;10379:3;10371:6;10293:90;:::i;:::-;10415:4;10410:3;10406:14;10392:28;;10159:267;;;;:::o;10432:135::-;10524:4;10556;10551:3;10547:14;10539:22;;10432:135;;;:::o;10631:908::-;10794:3;10823:76;10893:5;10823:76;:::i;:::-;10915:108;11016:6;11011:3;10915:108;:::i;:::-;10908:115;;11047:78;11119:5;11047:78;:::i;:::-;11148:7;11179:1;11164:350;11189:6;11186:1;11183:13;11164:350;;;11265:6;11259:13;11292:107;11395:3;11380:13;11292:107;:::i;:::-;11285:114;;11422:82;11497:6;11422:82;:::i;:::-;11412:92;;11224:290;11211:1;11208;11204:9;11199:14;;11164:350;;;11168:14;11530:3;11523:10;;10799:740;;;10631:908;;;;:::o;11545:461::-;11732:4;11770:2;11759:9;11755:18;11747:26;;11819:9;11813:4;11809:20;11805:1;11794:9;11790:17;11783:47;11847:152;11994:4;11985:6;11847:152;:::i;:::-;11839:160;;11545:461;;;;:::o;12012:797::-;12098:6;12106;12114;12163:2;12151:9;12142:7;12138:23;12134:32;12131:119;;;12169:79;;:::i;:::-;12131:119;12289:1;12314:53;12359:7;12350:6;12339:9;12335:22;12314:53;:::i;:::-;12304:63;;12260:117;12416:2;12442:53;12487:7;12478:6;12467:9;12463:22;12442:53;:::i;:::-;12432:63;;12387:118;12572:2;12561:9;12557:18;12544:32;12603:18;12595:6;12592:30;12589:117;;;12625:79;;:::i;:::-;12589:117;12730:62;12784:7;12775:6;12764:9;12760:22;12730:62;:::i;:::-;12720:72;;12515:287;12012:797;;;;;:::o;12815:329::-;12874:6;12923:2;12911:9;12902:7;12898:23;12894:32;12891:119;;;12929:79;;:::i;:::-;12891:119;13049:1;13074:53;13119:7;13110:6;13099:9;13095:22;13074:53;:::i;:::-;13064:63;;13020:117;12815:329;;;;:::o;13150:118::-;13237:24;13255:5;13237:24;:::i;:::-;13232:3;13225:37;13150:118;;:::o;13274:222::-;13367:4;13405:2;13394:9;13390:18;13382:26;;13418:71;13486:1;13475:9;13471:17;13462:6;13418:71;:::i;:::-;13274:222;;;;:::o;13502:116::-;13572:21;13587:5;13572:21;:::i;:::-;13565:5;13562:32;13552:60;;13608:1;13605;13598:12;13552:60;13502:116;:::o;13624:133::-;13667:5;13705:6;13692:20;13683:29;;13721:30;13745:5;13721:30;:::i;:::-;13624:133;;;;:::o;13763:468::-;13828:6;13836;13885:2;13873:9;13864:7;13860:23;13856:32;13853:119;;;13891:79;;:::i;:::-;13853:119;14011:1;14036:53;14081:7;14072:6;14061:9;14057:22;14036:53;:::i;:::-;14026:63;;13982:117;14138:2;14164:50;14206:7;14197:6;14186:9;14182:22;14164:50;:::i;:::-;14154:60;;14109:115;13763:468;;;;;:::o;14237:943::-;14332:6;14340;14348;14356;14405:3;14393:9;14384:7;14380:23;14376:33;14373:120;;;14412:79;;:::i;:::-;14373:120;14532:1;14557:53;14602:7;14593:6;14582:9;14578:22;14557:53;:::i;:::-;14547:63;;14503:117;14659:2;14685:53;14730:7;14721:6;14710:9;14706:22;14685:53;:::i;:::-;14675:63;;14630:118;14787:2;14813:53;14858:7;14849:6;14838:9;14834:22;14813:53;:::i;:::-;14803:63;;14758:118;14943:2;14932:9;14928:18;14915:32;14974:18;14966:6;14963:30;14960:117;;;14996:79;;:::i;:::-;14960:117;15101:62;15155:7;15146:6;15135:9;15131:22;15101:62;:::i;:::-;15091:72;;14886:287;14237:943;;;;;;;:::o;15186:1521::-;15314:6;15322;15330;15338;15346;15354;15362;15370;15419:3;15407:9;15398:7;15394:23;15390:33;15387:120;;;15426:79;;:::i;:::-;15387:120;15546:1;15571:53;15616:7;15607:6;15596:9;15592:22;15571:53;:::i;:::-;15561:63;;15517:117;15673:2;15699:53;15744:7;15735:6;15724:9;15720:22;15699:53;:::i;:::-;15689:63;;15644:118;15801:2;15827:53;15872:7;15863:6;15852:9;15848:22;15827:53;:::i;:::-;15817:63;;15772:118;15929:2;15955:53;16000:7;15991:6;15980:9;15976:22;15955:53;:::i;:::-;15945:63;;15900:118;16057:3;16084:53;16129:7;16120:6;16109:9;16105:22;16084:53;:::i;:::-;16074:63;;16028:119;16186:3;16213:53;16258:7;16249:6;16238:9;16234:22;16213:53;:::i;:::-;16203:63;;16157:119;16315:3;16342:50;16384:7;16375:6;16364:9;16360:22;16342:50;:::i;:::-;16332:60;;16286:116;16469:3;16458:9;16454:19;16441:33;16501:18;16493:6;16490:30;16487:117;;;16523:79;;:::i;:::-;16487:117;16628:62;16682:7;16673:6;16662:9;16658:22;16628:62;:::i;:::-;16618:72;;16412:288;15186:1521;;;;;;;;;;;:::o;16713:765::-;16799:6;16807;16815;16823;16872:3;16860:9;16851:7;16847:23;16843:33;16840:120;;;16879:79;;:::i;:::-;16840:120;16999:1;17024:53;17069:7;17060:6;17049:9;17045:22;17024:53;:::i;:::-;17014:63;;16970:117;17126:2;17152:53;17197:7;17188:6;17177:9;17173:22;17152:53;:::i;:::-;17142:63;;17097:118;17254:2;17280:53;17325:7;17316:6;17305:9;17301:22;17280:53;:::i;:::-;17270:63;;17225:118;17382:2;17408:53;17453:7;17444:6;17433:9;17429:22;17408:53;:::i;:::-;17398:63;;17353:118;16713:765;;;;;;;:::o;17484:474::-;17552:6;17560;17609:2;17597:9;17588:7;17584:23;17580:32;17577:119;;;17615:79;;:::i;:::-;17577:119;17735:1;17760:53;17805:7;17796:6;17785:9;17781:22;17760:53;:::i;:::-;17750:63;;17706:117;17862:2;17888:53;17933:7;17924:6;17913:9;17909:22;17888:53;:::i;:::-;17878:63;;17833:118;17484:474;;;;;:::o;17964:943::-;18059:6;18067;18075;18083;18132:3;18120:9;18111:7;18107:23;18103:33;18100:120;;;18139:79;;:::i;:::-;18100:120;18259:1;18284:53;18329:7;18320:6;18309:9;18305:22;18284:53;:::i;:::-;18274:63;;18230:117;18386:2;18412:53;18457:7;18448:6;18437:9;18433:22;18412:53;:::i;:::-;18402:63;;18357:118;18514:2;18540:53;18585:7;18576:6;18565:9;18561:22;18540:53;:::i;:::-;18530:63;;18485:118;18670:2;18659:9;18655:18;18642:32;18701:18;18693:6;18690:30;18687:117;;;18723:79;;:::i;:::-;18687:117;18828:62;18882:7;18873:6;18862:9;18858:22;18828:62;:::i;:::-;18818:72;;18613:287;17964:943;;;;;;;:::o;18913:430::-;19056:4;19094:2;19083:9;19079:18;19071:26;;19107:71;19175:1;19164:9;19160:17;19151:6;19107:71;:::i;:::-;19188:72;19256:2;19245:9;19241:18;19232:6;19188:72;:::i;:::-;19270:66;19332:2;19321:9;19317:18;19308:6;19270:66;:::i;:::-;18913:430;;;;;;:::o;19349:180::-;19397:77;19394:1;19387:88;19494:4;19491:1;19484:15;19518:4;19515:1;19508:15;19535:143;19592:5;19623:6;19617:13;19608:22;;19639:33;19666:5;19639:33;:::i;:::-;19535:143;;;;:::o;19684:351::-;19754:6;19803:2;19791:9;19782:7;19778:23;19774:32;19771:119;;;19809:79;;:::i;:::-;19771:119;19929:1;19954:64;20010:7;20001:6;19990:9;19986:22;19954:64;:::i;:::-;19944:74;;19900:128;19684:351;;;;:::o;20041:115::-;20126:23;20143:5;20126:23;:::i;:::-;20121:3;20114:36;20041:115;;:::o;20162:218::-;20253:4;20291:2;20280:9;20276:18;20268:26;;20304:69;20370:1;20359:9;20355:17;20346:6;20304:69;:::i;:::-;20162:218;;;;:::o;20386:137::-;20440:5;20471:6;20465:13;20456:22;;20487:30;20511:5;20487:30;:::i;:::-;20386:137;;;;:::o;20529:345::-;20596:6;20645:2;20633:9;20624:7;20620:23;20616:32;20613:119;;;20651:79;;:::i;:::-;20613:119;20771:1;20796:61;20849:7;20840:6;20829:9;20825:22;20796:61;:::i;:::-;20786:71;;20742:125;20529:345;;;;:::o;20880:180::-;20928:77;20925:1;20918:88;21025:4;21022:1;21015:15;21049:4;21046:1;21039:15;21066:194;21106:4;21126:20;21144:1;21126:20;:::i;:::-;21121:25;;21160:20;21178:1;21160:20;:::i;:::-;21155:25;;21204:1;21201;21197:9;21189:17;;21228:1;21222:4;21219:11;21216:37;;;21233:18;;:::i;:::-;21216:37;21066:194;;;;:::o;21266:191::-;21306:3;21325:20;21343:1;21325:20;:::i;:::-;21320:25;;21359:20;21377:1;21359:20;:::i;:::-;21354:25;;21402:1;21399;21395:9;21388:16;;21423:3;21420:1;21417:10;21414:36;;;21430:18;;:::i;:::-;21414:36;21266:191;;;;:::o;21463:85::-;21508:7;21537:5;21526:16;;21463:85;;;:::o;21554:60::-;21582:3;21603:5;21596:12;;21554:60;;;:::o;21620:158::-;21678:9;21711:61;21729:42;21738:32;21764:5;21738:32;:::i;:::-;21729:42;:::i;:::-;21711:61;:::i;:::-;21698:74;;21620:158;;;:::o;21784:147::-;21879:45;21918:5;21879:45;:::i;:::-;21874:3;21867:58;21784:147;;:::o;21937:348::-;22066:4;22104:2;22093:9;22089:18;22081:26;;22117:71;22185:1;22174:9;22170:17;22161:6;22117:71;:::i;:::-;22198:80;22274:2;22263:9;22259:18;22250:6;22198:80;:::i;:::-;21937:348;;;;;:::o;22291:332::-;22412:4;22450:2;22439:9;22435:18;22427:26;;22463:71;22531:1;22520:9;22516:17;22507:6;22463:71;:::i;:::-;22544:72;22612:2;22601:9;22597:18;22588:6;22544:72;:::i;:::-;22291:332;;;;;:::o;22629:::-;22750:4;22788:2;22777:9;22773:18;22765:26;;22801:71;22869:1;22858:9;22854:17;22845:6;22801:71;:::i;:::-;22882:72;22950:2;22939:9;22935:18;22926:6;22882:72;:::i;:::-;22629:332;;;;;:::o;22967:143::-;23024:5;23055:6;23049:13;23040:22;;23071:33;23098:5;23071:33;:::i;:::-;22967:143;;;;:::o;23116:351::-;23186:6;23235:2;23223:9;23214:7;23210:23;23206:32;23203:119;;;23241:79;;:::i;:::-;23203:119;23361:1;23386:64;23442:7;23433:6;23422:9;23418:22;23386:64;:::i;:::-;23376:74;;23332:128;23116:351;;;;:::o;23473:98::-;23524:6;23558:5;23552:12;23542:22;;23473:98;;;:::o;23577:168::-;23660:11;23694:6;23689:3;23682:19;23734:4;23729:3;23725:14;23710:29;;23577:168;;;;:::o;23751:246::-;23832:1;23842:113;23856:6;23853:1;23850:13;23842:113;;;23941:1;23936:3;23932:11;23926:18;23922:1;23917:3;23913:11;23906:39;23878:2;23875:1;23871:10;23866:15;;23842:113;;;23989:1;23980:6;23975:3;23971:16;23964:27;23813:184;23751:246;;;:::o;24003:373::-;24089:3;24117:38;24149:5;24117:38;:::i;:::-;24171:70;24234:6;24229:3;24171:70;:::i;:::-;24164:77;;24250:65;24308:6;24303:3;24296:4;24289:5;24285:16;24250:65;:::i;:::-;24340:29;24362:6;24340:29;:::i;:::-;24335:3;24331:39;24324:46;;24093:283;24003:373;;;;:::o;24382:640::-;24577:4;24615:3;24604:9;24600:19;24592:27;;24629:71;24697:1;24686:9;24682:17;24673:6;24629:71;:::i;:::-;24710:72;24778:2;24767:9;24763:18;24754:6;24710:72;:::i;:::-;24792;24860:2;24849:9;24845:18;24836:6;24792:72;:::i;:::-;24911:9;24905:4;24901:20;24896:2;24885:9;24881:18;24874:48;24939:76;25010:4;25001:6;24939:76;:::i;:::-;24931:84;;24382:640;;;;;;;:::o;25028:751::-;25251:4;25289:3;25278:9;25274:19;25266:27;;25303:71;25371:1;25360:9;25356:17;25347:6;25303:71;:::i;:::-;25384:72;25452:2;25441:9;25437:18;25428:6;25384:72;:::i;:::-;25466;25534:2;25523:9;25519:18;25510:6;25466:72;:::i;:::-;25548;25616:2;25605:9;25601:18;25592:6;25548:72;:::i;:::-;25668:9;25662:4;25658:20;25652:3;25641:9;25637:19;25630:49;25696:76;25767:4;25758:6;25696:76;:::i;:::-;25688:84;;25028:751;;;;;;;;:::o;25785:320::-;25900:4;25938:2;25927:9;25923:18;25915:26;;25951:71;26019:1;26008:9;26004:17;25995:6;25951:71;:::i;:::-;26032:66;26094:2;26083:9;26079:18;26070:6;26032:66;:::i;:::-;25785:320;;;;;:::o;26111:529::-;26278:4;26316:2;26305:9;26301:18;26293:26;;26329:71;26397:1;26386:9;26382:17;26373:6;26329:71;:::i;:::-;26410:72;26478:2;26467:9;26463:18;26454:6;26410:72;:::i;:::-;26529:9;26523:4;26519:20;26514:2;26503:9;26499:18;26492:48;26557:76;26628:4;26619:6;26557:76;:::i;:::-;26549:84;;26111:529;;;;;;:::o;26646:657::-;26731:6;26739;26747;26796:2;26784:9;26775:7;26771:23;26767:32;26764:119;;;26802:79;;:::i;:::-;26764:119;26922:1;26947:64;27003:7;26994:6;26983:9;26979:22;26947:64;:::i;:::-;26937:74;;26893:128;27060:2;27086:64;27142:7;27133:6;27122:9;27118:22;27086:64;:::i;:::-;27076:74;;27031:129;27199:2;27225:61;27278:7;27269:6;27258:9;27254:22;27225:61;:::i;:::-;27215:71;;27170:126;26646:657;;;;;:::o;27309:364::-;27446:4;27484:2;27473:9;27469:18;27461:26;;27497:79;27573:1;27562:9;27558:17;27549:6;27497:79;:::i;:::-;27586:80;27662:2;27651:9;27647:18;27638:6;27586:80;:::i;:::-;27309:364;;;;;:::o;27679:141::-;27735:5;27766:6;27760:13;27751:22;;27782:32;27808:5;27782:32;:::i;:::-;27679:141;;;;:::o;27826:349::-;27895:6;27944:2;27932:9;27923:7;27919:23;27915:32;27912:119;;;27950:79;;:::i;:::-;27912:119;28070:1;28095:63;28150:7;28141:6;28130:9;28126:22;28095:63;:::i;:::-;28085:73;;28041:127;27826:349;;;;:::o;28181:180::-;28229:77;28226:1;28219:88;28326:4;28323:1;28316:15;28350:4;28347:1;28340:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3418200",
								"executionCost": "3820",
								"totalCost": "3422020"
							},
							"external": {
								"_nestMint(address,uint256,uint256,bytes)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"acceptChild(uint256,uint256,address,uint256)": "infinite",
								"addChild(uint256,uint256,bytes)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2921",
								"burn(uint256)": "infinite",
								"burn(uint256,uint256)": "infinite",
								"childIsInActive(address,uint256)": "3130",
								"childOf(uint256,uint256)": "infinite",
								"childrenOf(uint256)": "infinite",
								"directOwnerOf(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"nestTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"ownerOf(uint256)": "infinite",
								"pendingChildOf(uint256,uint256)": "infinite",
								"pendingChildrenOf(uint256)": "infinite",
								"rejectAllChildren(uint256,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "800",
								"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_acceptChild(uint256,uint256,address,uint256)": "infinite",
								"_afterAcceptChild(uint256,uint256,address,uint256)": "17",
								"_afterAddChild(uint256,address,uint256)": "15",
								"_afterNestedTokenTransfer(address,address,uint256,uint256,uint256)": "19",
								"_afterRejectAllChildren(uint256)": "11",
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_afterTransferChild(uint256,uint256,address,uint256,bool)": "19",
								"_approve(address,uint256)": "infinite",
								"_beforeAcceptChild(uint256,uint256,address,uint256)": "17",
								"_beforeAddChild(uint256,address,uint256)": "15",
								"_beforeNestedTokenTransfer(address,address,uint256,uint256,uint256)": "19",
								"_beforeRejectAllChildren(uint256)": "11",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_beforeTransferChild(uint256,uint256,address,uint256,bool)": "19",
								"_burn(uint256,uint256)": "infinite",
								"_checkExpectedChild(struct IERC6059.Child memory,address,uint256)": "infinite",
								"_checkForInheritanceLoop(uint256,address,uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_cleanApprovals(uint256)": "11",
								"_exists(uint256)": "2275",
								"_innerMint(address,uint256,uint256)": "infinite",
								"_isApprovedOrDirectOwner(address,uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_nestTransfer(address,address,uint256,uint256,bytes memory)": "infinite",
								"_onlyApprovedOrDirectOwner(uint256)": "infinite",
								"_onlyApprovedOrOwner(uint256)": "infinite",
								"_rejectAllChildren(uint256,uint256)": "infinite",
								"_removeChildByIndex(struct IERC6059.Child storage ref[] storage pointer,uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_sendToNFT(address,address,uint256,uint256,uint256,bytes memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes memory)": "infinite",
								"_updateOwnerAndClearApprovals(uint256,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 15661,
									"end": 72222,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f4d210640773c466a835b430e56fb71bdbe1af0b872d0e77f56c1dfbd854dfc64736f6c63430008150033",
									".code": [
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "6F19951C"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "B3E1C718"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "E97CEAA8"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "E97CEAA8"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "E985E9C5"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "EB043606"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "FB25FB7A"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "B3E1C718"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "B88D4FDE"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "DEFA80C3"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "6F19951C"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "97961336"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "A22CB465"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "A898E364"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "B390C0AB"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "4182E4A3"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "4182E4A3"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "42842E0E"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "44EC9344"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "6352211E"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "635490CC"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "64C0A3A"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "81812FC"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "2F32F937"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 72222,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 19090,
											"end": 19439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 19090,
											"end": 19439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 19090,
											"end": 19439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21051,
											"end": 21328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 21051,
											"end": 21328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 39543,
											"end": 39733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 39543,
											"end": 39733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 39543,
											"end": 39733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 39141,
											"end": 39494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 39141,
											"end": 39494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 19847,
											"end": 20037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 19847,
											"end": 20037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 59253,
											"end": 59541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 59253,
											"end": 59541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 59253,
											"end": 59541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 60915,
											"end": 61104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 60915,
											"end": 61104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 60915,
											"end": 61104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 20086,
											"end": 20256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 20086,
											"end": 20256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 35160,
											"end": 35239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 35160,
											"end": 35239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 58435,
											"end": 58647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 58435,
											"end": 58647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 58435,
											"end": 58647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 33476,
											"end": 33815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 33476,
											"end": 33815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 33476,
											"end": 33815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 46974,
											"end": 47832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 46974,
											"end": 47832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 57736,
											"end": 57926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 57736,
											"end": 57926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 57736,
											"end": 57926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 19488,
											"end": 19677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 19488,
											"end": 19677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 19488,
											"end": 19677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 51118,
											"end": 51288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 51118,
											"end": 51288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 39782,
											"end": 40060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 39782,
											"end": 40060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 60165,
											"end": 60487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 60165,
											"end": 60487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 60165,
											"end": 60487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 35749,
											"end": 35952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 35749,
											"end": 35952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 35749,
											"end": 35952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 29465,
											"end": 29573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 29465,
											"end": 29573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 20305,
											"end": 20536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 20305,
											"end": 20536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 53272,
											"end": 53772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 53272,
											"end": 53772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 48594,
											"end": 48849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 48594,
											"end": 48849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 40109,
											"end": 40284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 40109,
											"end": 40284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 40109,
											"end": 40284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 31332,
											"end": 31854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 31332,
											"end": 31854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 34608,
											"end": 34930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 34608,
											"end": 34930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 34608,
											"end": 34930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19180,
											"end": 19184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19230,
											"end": 19255,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19215,
											"end": 19255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19215,
											"end": 19255,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19215,
											"end": 19255,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 19215,
											"end": 19311,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19286,
											"end": 19311,
											"name": "PUSH",
											"source": 6,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19271,
											"end": 19311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19271,
											"end": 19311,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19271,
											"end": 19311,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19311,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19311,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 19215,
											"end": 19311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19375,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 19215,
											"end": 19375,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19342,
											"end": 19375,
											"name": "PUSH",
											"source": 6,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19327,
											"end": 19375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19327,
											"end": 19375,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19327,
											"end": 19375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19327,
											"end": 19338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19327,
											"end": 19375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19327,
											"end": 19375,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19327,
											"end": 19375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19327,
											"end": 19375,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19375,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 19215,
											"end": 19375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19432,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 19215,
											"end": 19432,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19406,
											"end": 19432,
											"name": "PUSH",
											"source": 6,
											"value": "42B0E56F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19391,
											"end": 19432,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19391,
											"end": 19432,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19391,
											"end": 19432,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19391,
											"end": 19402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19391,
											"end": 19432,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19391,
											"end": 19432,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 19391,
											"end": 19432,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19391,
											"end": 19432,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 19215,
											"end": 19432,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 19215,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19196,
											"end": 19432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19196,
											"end": 19432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19090,
											"end": 19439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21249,
											"end": 21256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 18935,
											"end": 18942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 18908,
											"end": 18943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21268,
											"end": 21321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 21282,
											"end": 21286,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 21288,
											"end": 21290,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 21292,
											"end": 21299,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 21301,
											"end": 21314,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 21316,
											"end": 21320,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 21268,
											"end": 21281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 21268,
											"end": 21321,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21268,
											"end": 21321,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 21268,
											"end": 21321,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39624,
											"end": 39631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39643,
											"end": 39666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 39658,
											"end": 39665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 39643,
											"end": 39657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 39643,
											"end": 39666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39643,
											"end": 39666,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 39643,
											"end": 39666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39699,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39700,
											"end": 39707,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39684,
											"end": 39708,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39709,
											"end": 39725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 39717,
											"end": 39724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 39709,
											"end": 39716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 39709,
											"end": 39725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39709,
											"end": 39725,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 39709,
											"end": 39725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39684,
											"end": 39726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39677,
											"end": 39726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39677,
											"end": 39726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39543,
											"end": 39733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39212,
											"end": 39225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39228,
											"end": 39244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 39236,
											"end": 39243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 39228,
											"end": 39235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 39228,
											"end": 39244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39228,
											"end": 39244,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 39228,
											"end": 39244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39212,
											"end": 39244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39212,
											"end": 39244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39264,
											"end": 39269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39258,
											"end": 39269,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39258,
											"end": 39269,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39258,
											"end": 39260,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 39258,
											"end": 39269,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39258,
											"end": 39269,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39258,
											"end": 39269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39254,
											"end": 39308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 39254,
											"end": 39308,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "PUSH",
											"source": 6,
											"value": "591DB6D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39278,
											"end": 39308,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 39254,
											"end": 39308,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 39254,
											"end": 39308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39339,
											"end": 39344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39344,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39323,
											"end": 39344,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 39323,
											"end": 39333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 39323,
											"end": 39335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39335,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 39323,
											"end": 39335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39344,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39323,
											"end": 39344,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39344,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39344,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 39323,
											"end": 39386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39349,
											"end": 39386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 39366,
											"end": 39371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39373,
											"end": 39385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 39373,
											"end": 39383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 39373,
											"end": 39385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39373,
											"end": 39385,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 39373,
											"end": 39385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39349,
											"end": 39365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 39349,
											"end": 39386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39349,
											"end": 39386,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 39349,
											"end": 39386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39348,
											"end": 39386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 39323,
											"end": 39386,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 39323,
											"end": 39386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39319,
											"end": 39455,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 39319,
											"end": 39455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 39319,
											"end": 39455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "PUSH",
											"source": 6,
											"value": "982462B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39407,
											"end": 39455,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 39319,
											"end": 39455,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 39319,
											"end": 39455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39466,
											"end": 39487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 39475,
											"end": 39477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 39479,
											"end": 39486,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 39466,
											"end": 39474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 39466,
											"end": 39487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39466,
											"end": 39487,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 39466,
											"end": 39487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39202,
											"end": 39494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39141,
											"end": 39494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19983,
											"end": 19990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 18935,
											"end": 18942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 18908,
											"end": 18943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20002,
											"end": 20030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 20012,
											"end": 20016,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 20018,
											"end": 20020,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 20022,
											"end": 20029,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 20002,
											"end": 20011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 20002,
											"end": 20030,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20002,
											"end": 20030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 20002,
											"end": 20030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19847,
											"end": 20037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59354,
											"end": 59366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 59354,
											"end": 59366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 59354,
											"end": 59366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 59354,
											"end": 59366,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 59354,
											"end": 59366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59413,
											"end": 59418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59382,
											"end": 59402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 59393,
											"end": 59401,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 59382,
											"end": 59392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 59382,
											"end": 59402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 59382,
											"end": 59402,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 59382,
											"end": 59402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59382,
											"end": 59409,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 59382,
											"end": 59418,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 59378,
											"end": 59449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 59378,
											"end": 59449,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "PUSH",
											"source": 6,
											"value": "CA755CC000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59427,
											"end": 59449,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 59378,
											"end": 59449,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 59378,
											"end": 59449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59480,
											"end": 59495,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59496,
											"end": 59504,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59480,
											"end": 59505,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 59506,
											"end": 59511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 59480,
											"end": 59512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 59480,
											"end": 59512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 59459,
											"end": 59512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59529,
											"end": 59534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 59522,
											"end": 59534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59522,
											"end": 59534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59522,
											"end": 59534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59253,
											"end": 59541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 61030,
											"end": 61034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 61096,
											"end": 61097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61069,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 61070,
											"end": 61082,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 61053,
											"end": 61083,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 61084,
											"end": 61091,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61092,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 61053,
											"end": 61097,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 61046,
											"end": 61097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 61046,
											"end": 61097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60915,
											"end": 61104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 20227,
											"end": 20231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20233,
											"end": 20235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20237,
											"end": 20244,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 20210,
											"end": 20249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 20210,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20086,
											"end": 20256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35216,
											"end": 35232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 35221,
											"end": 35228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 35230,
											"end": 35231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 35216,
											"end": 35220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 35216,
											"end": 35232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35216,
											"end": 35232,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 35216,
											"end": 35232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35216,
											"end": 35232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 35160,
											"end": 35239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 58523,
											"end": 58537,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 58549,
											"end": 58579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58582,
											"end": 58598,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58599,
											"end": 58607,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58582,
											"end": 58608,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58549,
											"end": 58608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58625,
											"end": 58640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58618,
											"end": 58640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 58618,
											"end": 58640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58618,
											"end": 58640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 58435,
											"end": 58647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33581,
											"end": 33588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 33601,
											"end": 33614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33616,
											"end": 33636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 33638,
											"end": 33648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33652,
											"end": 33696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 33679,
											"end": 33686,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 33652,
											"end": 33665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 33652,
											"end": 33696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 33652,
											"end": 33696,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 33652,
											"end": 33696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33600,
											"end": 33696,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 33600,
											"end": 33696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33600,
											"end": 33696,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 33600,
											"end": 33696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33600,
											"end": 33696,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 33600,
											"end": 33696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33710,
											"end": 33715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33706,
											"end": 33787,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 33706,
											"end": 33787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 33706,
											"end": 33787,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 33748,
											"end": 33753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33762,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33739,
											"end": 33762,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33762,
											"name": "PUSH",
											"source": 6,
											"value": "6352211E"
										},
										{
											"begin": 33763,
											"end": 33775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 33739,
											"end": 33776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 33739,
											"end": 33776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 33739,
											"end": 33776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33731,
											"end": 33776,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 33731,
											"end": 33776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33706,
											"end": 33787,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 33706,
											"end": 33787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 33803,
											"end": 33808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 33796,
											"end": 33808,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 33796,
											"end": 33808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33796,
											"end": 33808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33796,
											"end": 33808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33796,
											"end": 33808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 33476,
											"end": 33815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47101,
											"end": 47125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 47116,
											"end": 47124,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 47101,
											"end": 47115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 47101,
											"end": 47125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47101,
											"end": 47125,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 47101,
											"end": 47125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47136,
											"end": 47156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47159,
											"end": 47171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 47159,
											"end": 47169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 47159,
											"end": 47171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47159,
											"end": 47171,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 47159,
											"end": 47171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47136,
											"end": 47171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47136,
											"end": 47171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47186,
											"end": 47211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 47186,
											"end": 47198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47186,
											"end": 47209,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47186,
											"end": 47209,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 47186,
											"end": 47209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 47186,
											"end": 47211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47186,
											"end": 47211,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 47186,
											"end": 47211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47181,
											"end": 47235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 47181,
											"end": 47235,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "PUSH",
											"source": 6,
											"value": "80275D3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47220,
											"end": 47235,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 47181,
											"end": 47235,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 47181,
											"end": 47235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47246,
											"end": 47264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47339,
											"end": 47346,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47304,
											"end": 47316,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47267,
											"end": 47357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47246,
											"end": 47357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47246,
											"end": 47357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47368,
											"end": 47416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 47384,
											"end": 47392,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 47394,
											"end": 47406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 47408,
											"end": 47415,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 47368,
											"end": 47383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 47368,
											"end": 47416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47368,
											"end": 47416,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 47368,
											"end": 47416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47427,
											"end": 47441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47444,
											"end": 47471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 47462,
											"end": 47470,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 47444,
											"end": 47461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 47444,
											"end": 47471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47444,
											"end": 47471,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 47444,
											"end": 47471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47444,
											"end": 47478,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47427,
											"end": 47478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47427,
											"end": 47478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47502,
											"end": 47505,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 47493,
											"end": 47499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47493,
											"end": 47505,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47537,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47538,
											"end": 47546,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47521,
											"end": 47547,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 47553,
											"end": 47558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47521,
											"end": 47559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "PUSH",
											"source": 6,
											"value": "98674B3500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47597,
											"end": 47624,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 47489,
											"end": 47635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47759,
											"end": 47766,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 47745,
											"end": 47757,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 47727,
											"end": 47735,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "PUSH",
											"source": 6,
											"value": "E65085E689B77B126BA0BAC3B079AA8288F19F4D5445AF11C76003F8AB3075DD"
										},
										{
											"begin": 47737,
											"end": 47743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 47713,
											"end": 47767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 47713,
											"end": 47767,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 47778,
											"end": 47825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 47793,
											"end": 47801,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 47803,
											"end": 47815,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 47817,
											"end": 47824,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 47778,
											"end": 47792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 47778,
											"end": 47825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 47778,
											"end": 47825,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 47778,
											"end": 47825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 47091,
											"end": 47832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47091,
											"end": 47832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 47091,
											"end": 47832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 46974,
											"end": 47832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57817,
											"end": 57831,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 57843,
											"end": 57866,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57869,
											"end": 57884,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57885,
											"end": 57893,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57869,
											"end": 57894,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57843,
											"end": 57894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57911,
											"end": 57919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57904,
											"end": 57919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 57904,
											"end": 57919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57904,
											"end": 57919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57736,
											"end": 57926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19551,
											"end": 19558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19591,
											"end": 19592,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19574,
											"end": 19593,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19574,
											"end": 19593,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19574,
											"end": 19579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19574,
											"end": 19593,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19574,
											"end": 19593,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19574,
											"end": 19593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "PUSH",
											"source": 6,
											"value": "7772286600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19602,
											"end": 19637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19664,
											"end": 19669,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 19647,
											"end": 19670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19647,
											"end": 19670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 51220,
											"end": 51227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 17989,
											"end": 17996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 17968,
											"end": 17997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 51239,
											"end": 51281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 51258,
											"end": 51265,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 51267,
											"end": 51280,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 51239,
											"end": 51257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 51239,
											"end": 51281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 51239,
											"end": 51281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 51239,
											"end": 51281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 51118,
											"end": 51288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39887,
											"end": 39895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39871,
											"end": 39895,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39871,
											"end": 39895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39871,
											"end": 39883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 39871,
											"end": 39881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 39871,
											"end": 39883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39871,
											"end": 39883,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 39871,
											"end": 39883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39871,
											"end": 39895,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39871,
											"end": 39895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39871,
											"end": 39895,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39867,
											"end": 39927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 39867,
											"end": 39927,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "PUSH",
											"source": 6,
											"value": "2DEE66E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39904,
											"end": 39927,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 39867,
											"end": 39927,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 39867,
											"end": 39927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39982,
											"end": 39990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39955,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39956,
											"end": 39968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 39956,
											"end": 39966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 39956,
											"end": 39968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 39956,
											"end": 39968,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 39956,
											"end": 39968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39937,
											"end": 39969,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39970,
											"end": 39978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 39937,
											"end": 39990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40034,
											"end": 40042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40020,
											"end": 40032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 40020,
											"end": 40030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 40020,
											"end": 40032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 40020,
											"end": 40032,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 40020,
											"end": 40032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 40044,
											"end": 40052,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 40005,
											"end": 40053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40005,
											"end": 40053,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 39782,
											"end": 40060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60273,
											"end": 60285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 60273,
											"end": 60285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 60273,
											"end": 60285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60273,
											"end": 60285,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 60273,
											"end": 60285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60339,
											"end": 60344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60301,
											"end": 60328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 60319,
											"end": 60327,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 60301,
											"end": 60318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 60301,
											"end": 60328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60301,
											"end": 60328,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 60301,
											"end": 60328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60301,
											"end": 60335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60301,
											"end": 60344,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 60297,
											"end": 60394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 60297,
											"end": 60394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "PUSH",
											"source": 6,
											"value": "9136D24F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60365,
											"end": 60394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 60297,
											"end": 60394,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 60297,
											"end": 60394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 60425,
											"end": 60441,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 60442,
											"end": 60450,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 60425,
											"end": 60451,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 60452,
											"end": 60457,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 60425,
											"end": 60458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 60425,
											"end": 60458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 60404,
											"end": 60458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60475,
											"end": 60480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 60468,
											"end": 60480,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60468,
											"end": 60480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60468,
											"end": 60480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 60165,
											"end": 60487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35887,
											"end": 35894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 35869,
											"end": 35876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 18935,
											"end": 18942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 18908,
											"end": 18943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35913,
											"end": 35945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 35919,
											"end": 35926,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 35928,
											"end": 35944,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 35913,
											"end": 35918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 35913,
											"end": 35945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 35913,
											"end": 35945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 35913,
											"end": 35945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 35906,
											"end": 35945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 35906,
											"end": 35945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 35749,
											"end": 35952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 29550,
											"end": 29552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 29554,
											"end": 29561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 29540,
											"end": 29566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 29540,
											"end": 29566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 29465,
											"end": 29573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20472,
											"end": 20479,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 18935,
											"end": 18942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 18908,
											"end": 18943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 18908,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20491,
											"end": 20529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 20505,
											"end": 20509,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 20511,
											"end": 20513,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 20515,
											"end": 20522,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 20524,
											"end": 20528,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 20491,
											"end": 20504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 20491,
											"end": 20529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20491,
											"end": 20529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 20491,
											"end": 20529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53546,
											"end": 53553,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 17989,
											"end": 17996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 17968,
											"end": 17997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53565,
											"end": 53765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 53593,
											"end": 53600,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53614,
											"end": 53616,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53630,
											"end": 53643,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53657,
											"end": 53667,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53681,
											"end": 53693,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53707,
											"end": 53714,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53728,
											"end": 53737,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53751,
											"end": 53755,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 53565,
											"end": 53579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 53565,
											"end": 53765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 53565,
											"end": 53765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 53565,
											"end": 53765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 53272,
											"end": 53772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 48765,
											"end": 48773,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 17989,
											"end": 17996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 17968,
											"end": 17997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 17968,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 48785,
											"end": 48842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 48798,
											"end": 48806,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 48808,
											"end": 48818,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 48820,
											"end": 48832,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 48834,
											"end": 48841,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 48785,
											"end": 48797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 48785,
											"end": 48842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 48785,
											"end": 48842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 48785,
											"end": 48842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 48594,
											"end": 48849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40219,
											"end": 40223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40242,
											"end": 40260,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40261,
											"end": 40266,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40242,
											"end": 40267,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40268,
											"end": 40276,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 40242,
											"end": 40277,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40235,
											"end": 40277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40235,
											"end": 40277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40109,
											"end": 40284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31567,
											"end": 31582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 31567,
											"end": 31569,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 31567,
											"end": 31580,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31567,
											"end": 31580,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 31567,
											"end": 31580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 31567,
											"end": 31582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31567,
											"end": 31582,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 31567,
											"end": 31582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31562,
											"end": 31606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 31562,
											"end": 31606,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "PUSH",
											"source": 6,
											"value": "80275D3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 31591,
											"end": 31606,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 31562,
											"end": 31606,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 31562,
											"end": 31606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31629,
											"end": 31631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31650,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31621,
											"end": 31650,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31650,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 31651,
											"end": 31677,
											"name": "PUSH",
											"source": 6,
											"value": "42B0E56F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 31621,
											"end": 31678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 31621,
											"end": 31678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 31621,
											"end": 31678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31616,
											"end": 31729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 31616,
											"end": 31729,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "PUSH",
											"source": 6,
											"value": "850CCCEF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 31699,
											"end": 31729,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 31616,
											"end": 31729,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 31616,
											"end": 31729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31740,
											"end": 31778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 31751,
											"end": 31753,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 31755,
											"end": 31762,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 31764,
											"end": 31777,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 31740,
											"end": 31750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 31740,
											"end": 31778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31740,
											"end": 31778,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 31740,
											"end": 31778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31788,
											"end": 31847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 31807,
											"end": 31808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 31811,
											"end": 31813,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 31815,
											"end": 31816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 31818,
											"end": 31831,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 31833,
											"end": 31840,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 31842,
											"end": 31846,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 31788,
											"end": 31798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 31788,
											"end": 31847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 31788,
											"end": 31847,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 31788,
											"end": 31847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 31332,
											"end": 31854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 34691,
											"end": 34698,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34700,
											"end": 34707,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 34709,
											"end": 34713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34725,
											"end": 34749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34765,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34766,
											"end": 34773,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34752,
											"end": 34774,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34725,
											"end": 34774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34818,
											"end": 34819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34788,
											"end": 34820,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34788,
											"end": 34820,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 34788,
											"end": 34793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34788,
											"end": 34806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 34788,
											"end": 34806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34788,
											"end": 34806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34788,
											"end": 34820,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34788,
											"end": 34820,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 34788,
											"end": 34820,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 34784,
											"end": 34851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 34784,
											"end": 34851,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "PUSH",
											"source": 6,
											"value": "89BA7E1000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34829,
											"end": 34851,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 34784,
											"end": 34851,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 34784,
											"end": 34851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 34869,
											"end": 34874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 34869,
											"end": 34887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 34869,
											"end": 34887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34869,
											"end": 34887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34889,
											"end": 34894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 34889,
											"end": 34902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34889,
											"end": 34902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34889,
											"end": 34902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34921,
											"end": 34922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34904,
											"end": 34909,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 34904,
											"end": 34917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 34904,
											"end": 34917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 34904,
											"end": 34917,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 34904,
											"end": 34922,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 34904,
											"end": 34922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 34861,
											"end": 34923,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 34861,
											"end": 34923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34861,
											"end": 34923,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 34861,
											"end": 34923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34861,
											"end": 34923,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 34861,
											"end": 34923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34861,
											"end": 34923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 34608,
											"end": 34930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18487,
											"end": 18669,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 18487,
											"end": 18669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18568,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 18593,
											"end": 18605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 18593,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 18593,
											"end": 18605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18593,
											"end": 18605,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 18593,
											"end": 18605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18607,
											"end": 18614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18568,
											"end": 18592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 18568,
											"end": 18615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18568,
											"end": 18615,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 18568,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18563,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 18563,
											"end": 18662,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "PUSH",
											"source": 6,
											"value": "35D12E3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18636,
											"end": 18662,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 18563,
											"end": 18662,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 18563,
											"end": 18662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18487,
											"end": 18669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18487,
											"end": 18669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 24634,
											"end": 25957,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 24634,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 24816,
											"end": 24838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 24840,
											"end": 24856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 24862,
											"end": 24884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 24876,
											"end": 24883,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 24862,
											"end": 24875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 24862,
											"end": 24884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 24862,
											"end": 24884,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 24862,
											"end": 24884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 24815,
											"end": 24884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24815,
											"end": 24884,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 24815,
											"end": 24884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24815,
											"end": 24884,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 24815,
											"end": 24884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24916,
											"end": 24920,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 24898,
											"end": 24920,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24898,
											"end": 24920,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 24898,
											"end": 24912,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 24898,
											"end": 24920,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24898,
											"end": 24920,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 24898,
											"end": 24920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 24894,
											"end": 24963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 24894,
											"end": 24963,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "PUSH",
											"source": 6,
											"value": "E146AF6F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 24929,
											"end": 24963,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 24894,
											"end": 24963,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 24894,
											"end": 24963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 24991,
											"end": 24992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 24977,
											"end": 24993,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24977,
											"end": 24993,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 24977,
											"end": 24979,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 24977,
											"end": 24993,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24977,
											"end": 24993,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 24977,
											"end": 24993,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 24973,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 24973,
											"end": 25034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "PUSH",
											"source": 6,
											"value": "E3D91BFC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25002,
											"end": 25034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 24973,
											"end": 25034,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 24973,
											"end": 25034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25062,
											"end": 25066,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25067,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25048,
											"end": 25067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25050,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25067,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25048,
											"end": 25067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25067,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25095,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 25048,
											"end": 25095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25082,
											"end": 25095,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 25071,
											"end": 25078,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 25071,
											"end": 25095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 25048,
											"end": 25095,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 25048,
											"end": 25095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25044,
											"end": 25140,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 25044,
											"end": 25140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 25044,
											"end": 25140,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "PUSH",
											"source": 6,
											"value": "5EEB0DF000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25116,
											"end": 25140,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 25044,
											"end": 25140,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 25044,
											"end": 25140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25271,
											"end": 25286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 25271,
											"end": 25273,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 25271,
											"end": 25284,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25271,
											"end": 25284,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25271,
											"end": 25284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 25271,
											"end": 25286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25271,
											"end": 25286,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 25271,
											"end": 25286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25266,
											"end": 25310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 25266,
											"end": 25310,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "PUSH",
											"source": 6,
											"value": "80275D3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25295,
											"end": 25310,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 25266,
											"end": 25310,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 25266,
											"end": 25310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25333,
											"end": 25335,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25325,
											"end": 25354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25354,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 25355,
											"end": 25381,
											"name": "PUSH",
											"source": 6,
											"value": "42B0E56F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 25325,
											"end": 25382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 25325,
											"end": 25382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 25325,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25320,
											"end": 25445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 25320,
											"end": 25445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "PUSH",
											"source": 6,
											"value": "F413CF9900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25403,
											"end": 25445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 25320,
											"end": 25445,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 25320,
											"end": 25445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25455,
											"end": 25507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 25480,
											"end": 25487,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 25489,
											"end": 25491,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25493,
											"end": 25506,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 25455,
											"end": 25479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 25455,
											"end": 25507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25455,
											"end": 25507,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 25455,
											"end": 25507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25518,
											"end": 25557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 25539,
											"end": 25543,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25545,
											"end": 25547,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25549,
											"end": 25556,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25518,
											"end": 25538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 25518,
											"end": 25557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25518,
											"end": 25557,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 25518,
											"end": 25557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25567,
											"end": 25717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 25607,
											"end": 25621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25635,
											"end": 25637,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25651,
											"end": 25659,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 25673,
											"end": 25686,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25700,
											"end": 25707,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 25567,
											"end": 25593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 25567,
											"end": 25717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25567,
											"end": 25717,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 25567,
											"end": 25717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25746,
											"end": 25747,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 25727,
											"end": 25736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25737,
											"end": 25741,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 25727,
											"end": 25747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 25727,
											"end": 25747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25757,
											"end": 25814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 25787,
											"end": 25794,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 25796,
											"end": 25809,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 25811,
											"end": 25813,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 25757,
											"end": 25786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 25757,
											"end": 25814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25757,
											"end": 25814,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 25757,
											"end": 25814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25841,
											"end": 25842,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 25824,
											"end": 25833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 25834,
											"end": 25836,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 25824,
											"end": 25842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 25824,
											"end": 25842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 25880,
											"end": 25950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 25891,
											"end": 25905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 25907,
											"end": 25909,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25911,
											"end": 25919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 25921,
											"end": 25934,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 25936,
											"end": 25943,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 25945,
											"end": 25949,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 25880,
											"end": 25890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 25880,
											"end": 25950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 25880,
											"end": 25950,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 25880,
											"end": 25950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 24805,
											"end": 25957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24805,
											"end": 25957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24634,
											"end": 25957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24634,
											"end": 25957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24634,
											"end": 25957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24634,
											"end": 25957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24634,
											"end": 25957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 24634,
											"end": 25957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 44029,
											"end": 44161,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 44029,
											"end": 44161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44107,
											"end": 44123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 44115,
											"end": 44122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 44107,
											"end": 44114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 44107,
											"end": 44123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 44107,
											"end": 44123,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 44107,
											"end": 44123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44102,
											"end": 44154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 44102,
											"end": 44154,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "PUSH",
											"source": 6,
											"value": "89BA7E1000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 44132,
											"end": 44154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 44102,
											"end": 44154,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 44102,
											"end": 44154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44029,
											"end": 44161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 44029,
											"end": 44161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 40553,
											"end": 40755,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 40553,
											"end": 40755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40627,
											"end": 40640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40643,
											"end": 40659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 40651,
											"end": 40658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 40643,
											"end": 40650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 40643,
											"end": 40659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 40643,
											"end": 40659,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 40643,
											"end": 40659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40627,
											"end": 40659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40627,
											"end": 40659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40703,
											"end": 40705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40684,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40685,
											"end": 40692,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40669,
											"end": 40693,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40694,
											"end": 40699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 40669,
											"end": 40705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40740,
											"end": 40747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 40736,
											"end": 40738,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40729,
											"end": 40734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 40720,
											"end": 40748,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 40617,
											"end": 40755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40553,
											"end": 40755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40553,
											"end": 40755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 40553,
											"end": 40755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23186,
											"end": 24011,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 23186,
											"end": 24011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23306,
											"end": 23328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23330,
											"end": 23346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 23352,
											"end": 23374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 23366,
											"end": 23373,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23352,
											"end": 23365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 23352,
											"end": 23374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23352,
											"end": 23374,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 23352,
											"end": 23374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23305,
											"end": 23374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23305,
											"end": 23374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23305,
											"end": 23374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23305,
											"end": 23374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23305,
											"end": 23374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23406,
											"end": 23410,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 23388,
											"end": 23410,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23388,
											"end": 23410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23388,
											"end": 23402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23388,
											"end": 23410,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23388,
											"end": 23410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23388,
											"end": 23410,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 23384,
											"end": 23453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 23384,
											"end": 23453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "PUSH",
											"source": 6,
											"value": "E146AF6F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23419,
											"end": 23453,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 23384,
											"end": 23453,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 23384,
											"end": 23453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23481,
											"end": 23482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23467,
											"end": 23483,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23467,
											"end": 23483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23467,
											"end": 23469,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 23467,
											"end": 23483,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23467,
											"end": 23483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23467,
											"end": 23483,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 23463,
											"end": 23524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 23463,
											"end": 23524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "PUSH",
											"source": 6,
											"value": "E3D91BFC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23492,
											"end": 23524,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 23463,
											"end": 23524,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 23463,
											"end": 23524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23535,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 23556,
											"end": 23560,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23562,
											"end": 23564,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23566,
											"end": 23573,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23535,
											"end": 23555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 23535,
											"end": 23574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23535,
											"end": 23574,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 23535,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23584,
											"end": 23652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 23611,
											"end": 23625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23627,
											"end": 23629,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23631,
											"end": 23639,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23641,
											"end": 23642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23644,
											"end": 23651,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 23584,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 23584,
											"end": 23652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23584,
											"end": 23652,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 23584,
											"end": 23652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23682,
											"end": 23683,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 23663,
											"end": 23672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 23673,
											"end": 23677,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 23663,
											"end": 23683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 23663,
											"end": 23683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23693,
											"end": 23738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 23723,
											"end": 23730,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23732,
											"end": 23733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23735,
											"end": 23737,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 23693,
											"end": 23722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 23693,
											"end": 23738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23693,
											"end": 23738,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 23693,
											"end": 23738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23765,
											"end": 23766,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 23748,
											"end": 23757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 23758,
											"end": 23760,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 23748,
											"end": 23766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 23748,
											"end": 23766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23801,
											"end": 23808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23797,
											"end": 23799,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23791,
											"end": 23795,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23782,
											"end": 23809,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 23870,
											"end": 23877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23853,
											"end": 23855,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23837,
											"end": 23851,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "PUSH",
											"source": 6,
											"value": "4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D"
										},
										{
											"begin": 23857,
											"end": 23865,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 23867,
											"end": 23868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 23824,
											"end": 23878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 23824,
											"end": 23878,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 23889,
											"end": 23927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 23909,
											"end": 23913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23915,
											"end": 23917,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23919,
											"end": 23926,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23889,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 23889,
											"end": 23927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23889,
											"end": 23927,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 23889,
											"end": 23927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23937,
											"end": 24004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 23963,
											"end": 23977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 23979,
											"end": 23981,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 23983,
											"end": 23991,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 23993,
											"end": 23994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 23996,
											"end": 24003,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 23937,
											"end": 23962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 23937,
											"end": 24004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23937,
											"end": 24004,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 23937,
											"end": 24004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 23295,
											"end": 24011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23295,
											"end": 24011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23186,
											"end": 24011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23186,
											"end": 24011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23186,
											"end": 24011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 23186,
											"end": 24011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 64950,
											"end": 65080,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 64950,
											"end": 65080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 64950,
											"end": 65080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 64950,
											"end": 65080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 64950,
											"end": 65080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 64950,
											"end": 65080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 65869,
											"end": 65998,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 65869,
											"end": 65998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 65869,
											"end": 65998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 65869,
											"end": 65998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 65869,
											"end": 65998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 65869,
											"end": 65998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17555,
											"end": 17725,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 17555,
											"end": 17725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 17649,
											"end": 17661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 17649,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 17649,
											"end": 17661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17649,
											"end": 17661,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 17649,
											"end": 17661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17663,
											"end": 17670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 17630,
											"end": 17671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17671,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 17630,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17625,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 17625,
											"end": 17718,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "PUSH",
											"source": 6,
											"value": "2728A9D000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17692,
											"end": 17718,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17625,
											"end": 17718,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 17625,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17555,
											"end": 17725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17555,
											"end": 17725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 51934,
											"end": 52328,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 51934,
											"end": 52328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 52088,
											"end": 52101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52069,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 52070,
											"end": 52077,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 52053,
											"end": 52078,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52085,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 52053,
											"end": 52101,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 52049,
											"end": 52150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 52049,
											"end": 52150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 52049,
											"end": 52150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "PUSH",
											"source": 6,
											"value": "8AC3CB1400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 52122,
											"end": 52150,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 52049,
											"end": 52150,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 52049,
											"end": 52150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 52161,
											"end": 52194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 52186,
											"end": 52193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 52161,
											"end": 52185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 52161,
											"end": 52194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 52161,
											"end": 52194,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 52161,
											"end": 52194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 52228,
											"end": 52235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 52211,
											"end": 52236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 52204,
											"end": 52236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 52204,
											"end": 52236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 52204,
											"end": 52236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 52204,
											"end": 52236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 52204,
											"end": 52236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 52204,
											"end": 52236,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 52204,
											"end": 52236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 52271,
											"end": 52278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "PUSH",
											"source": 6,
											"value": "8AC4A0D65950C3E40448AFB2260E2E0EC36EA15644D9B39E37E85472E5F94451"
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 52251,
											"end": 52279,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 52289,
											"end": 52321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 52313,
											"end": 52320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 52289,
											"end": 52312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 52289,
											"end": 52321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 52289,
											"end": 52321,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 52289,
											"end": 52321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 51934,
											"end": 52328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 51934,
											"end": 52328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 51934,
											"end": 52328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 36504,
											"end": 38971,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 36504,
											"end": 38971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 36610,
											"end": 36617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36630,
											"end": 36652,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 36654,
											"end": 36670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36676,
											"end": 36698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 36690,
											"end": 36697,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 36676,
											"end": 36689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 36676,
											"end": 36698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 36676,
											"end": 36698,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 36676,
											"end": 36698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 36629,
											"end": 36698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36629,
											"end": 36698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 36629,
											"end": 36698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36629,
											"end": 36698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 36629,
											"end": 36698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36708,
											"end": 36721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36724,
											"end": 36740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 36732,
											"end": 36739,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 36724,
											"end": 36731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 36724,
											"end": 36740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 36724,
											"end": 36740,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 36724,
											"end": 36740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 36708,
											"end": 36740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 36708,
											"end": 36740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36779,
											"end": 36780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 36750,
											"end": 36759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 36760,
											"end": 36774,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 36750,
											"end": 36780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 36750,
											"end": 36780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36791,
											"end": 36839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 36812,
											"end": 36817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 36827,
											"end": 36828,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36831,
											"end": 36838,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 36791,
											"end": 36811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 36791,
											"end": 36839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 36791,
											"end": 36839,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 36791,
											"end": 36839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 36849,
											"end": 36995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 36889,
											"end": 36903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 36925,
											"end": 36926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36941,
											"end": 36949,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 36963,
											"end": 36964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 36978,
											"end": 36985,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 36849,
											"end": 36875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 36849,
											"end": 36995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 36849,
											"end": 36995,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 36849,
											"end": 36995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37006,
											"end": 37035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 37023,
											"end": 37024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37027,
											"end": 37034,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 37006,
											"end": 37014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 37006,
											"end": 37035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37006,
											"end": 37035,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 37006,
											"end": 37035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37045,
											"end": 37069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 37061,
											"end": 37068,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 37045,
											"end": 37060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 37045,
											"end": 37069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37045,
											"end": 37069,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 37045,
											"end": 37069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37080,
											"end": 37103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37106,
											"end": 37125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 37117,
											"end": 37124,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 37106,
											"end": 37116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 37106,
											"end": 37125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37106,
											"end": 37125,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 37106,
											"end": 37125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37080,
											"end": 37125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37080,
											"end": 37125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37158,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37159,
											"end": 37166,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 37143,
											"end": 37167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37136,
											"end": 37167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 37136,
											"end": 37167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 37136,
											"end": 37167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37136,
											"end": 37167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 37136,
											"end": 37167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37136,
											"end": 37167,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 37136,
											"end": 37167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37200,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37201,
											"end": 37208,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 37184,
											"end": 37209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37177,
											"end": 37209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 37177,
											"end": 37209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 37177,
											"end": 37209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37177,
											"end": 37209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 37177,
											"end": 37209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37177,
											"end": 37209,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 37177,
											"end": 37209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37241,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37242,
											"end": 37249,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37226,
											"end": 37250,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37251,
											"end": 37256,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 37226,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37219,
											"end": 37257,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 37268,
											"end": 37297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37307,
											"end": 37330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 37341,
											"end": 37355,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37358,
											"end": 37366,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 37358,
											"end": 37373,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37341,
											"end": 37373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37341,
											"end": 37373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 37402,
											"end": 37411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37417,
											"end": 37423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37413,
											"end": 37414,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37413,
											"end": 37423,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 37464,
											"end": 37480,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 37445,
											"end": 37460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 37445,
											"end": 37480,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 37441,
											"end": 37637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 37441,
											"end": 37637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 37560,
											"end": 37561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 37551,
											"end": 37562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37562,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37551,
											"end": 37578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37551,
											"end": 37578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37608,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 37609,
											"end": 37610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 37600,
											"end": 37611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37600,
											"end": 37619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37600,
											"end": 37619,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "PUSH",
											"source": 6,
											"value": "4CB93AD900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 37505,
											"end": 37637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37505,
											"end": 37637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 37441,
											"end": 37637,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 37441,
											"end": 37637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37674,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37675,
											"end": 37683,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 37684,
											"end": 37685,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 37675,
											"end": 37686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37702,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37675,
											"end": 37702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37675,
											"end": 37702,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37658,
											"end": 37703,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37721,
											"end": 37729,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 37730,
											"end": 37731,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 37721,
											"end": 37732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37732,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37721,
											"end": 37740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37721,
											"end": 37740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37658,
											"end": 37754,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 37651,
											"end": 37754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 37651,
											"end": 37754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 37651,
											"end": 37754,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 37921,
											"end": 37936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 37902,
											"end": 37918,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 37902,
											"end": 37936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 37878,
											"end": 37936,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 37878,
											"end": 37936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38391,
											"end": 38392,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 38233,
											"end": 38241,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 38242,
											"end": 38243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 38233,
											"end": 38244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38260,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38233,
											"end": 38260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38233,
											"end": 38260,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38266,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38224,
											"end": 38266,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38266,
											"name": "PUSH",
											"source": 6,
											"value": "B390C0AB"
										},
										{
											"begin": 38288,
											"end": 38296,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 38297,
											"end": 38298,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 38288,
											"end": 38299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38288,
											"end": 38307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38288,
											"end": 38307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38353,
											"end": 38354,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 38329,
											"end": 38350,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 38329,
											"end": 38354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 38329,
											"end": 38354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38329,
											"end": 38354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38329,
											"end": 38354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 38329,
											"end": 38354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38329,
											"end": 38354,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 38329,
											"end": 38354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 38224,
											"end": 38372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 38224,
											"end": 38372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 38224,
											"end": 38372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 38224,
											"end": 38392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 38224,
											"end": 38392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38224,
											"end": 38392,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 38224,
											"end": 38392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 38189,
											"end": 38392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 38189,
											"end": 38392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38434,
											"end": 38437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38434,
											"end": 38437,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 38434,
											"end": 38437,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38434,
											"end": 38437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38434,
											"end": 38437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 37397,
											"end": 38462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38581,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38582,
											"end": 38589,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 38568,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38561,
											"end": 38590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38601,
											"end": 38648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 38621,
											"end": 38626,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 38636,
											"end": 38637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38640,
											"end": 38647,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 38601,
											"end": 38620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 38601,
											"end": 38648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38601,
											"end": 38648,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 38601,
											"end": 38648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38658,
											"end": 38803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 38697,
											"end": 38711,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 38733,
											"end": 38734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38749,
											"end": 38757,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 38771,
											"end": 38772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38786,
											"end": 38793,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 38658,
											"end": 38683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 38658,
											"end": 38803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38658,
											"end": 38803,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 38658,
											"end": 38803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38846,
											"end": 38853,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 38842,
											"end": 38843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38827,
											"end": 38832,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38818,
											"end": 38854,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 38923,
											"end": 38930,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 38906,
											"end": 38907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38882,
											"end": 38896,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "PUSH",
											"source": 6,
											"value": "4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D"
										},
										{
											"begin": 38910,
											"end": 38918,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 38920,
											"end": 38921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 38869,
											"end": 38931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 38869,
											"end": 38931,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 38949,
											"end": 38964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 38942,
											"end": 38964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36504,
											"end": 38971,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 36504,
											"end": 38971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 36504,
											"end": 38971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36504,
											"end": 38971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 36504,
											"end": 38971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 29888,
											"end": 30166,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 29888,
											"end": 30166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30012,
											"end": 30030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 30018,
											"end": 30020,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 30022,
											"end": 30029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 30012,
											"end": 30017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 30012,
											"end": 30030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30012,
											"end": 30030,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 30012,
											"end": 30030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30045,
											"end": 30098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 30076,
											"end": 30077,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30080,
											"end": 30082,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 30084,
											"end": 30091,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 30093,
											"end": 30097,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 30045,
											"end": 30067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 30045,
											"end": 30098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30045,
											"end": 30098,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 30045,
											"end": 30098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30040,
											"end": 30159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 30040,
											"end": 30159,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "PUSH",
											"source": 6,
											"value": "BCB5663700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 30119,
											"end": 30159,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 30040,
											"end": 30159,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 30040,
											"end": 30159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 29888,
											"end": 30166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 29888,
											"end": 30166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 29888,
											"end": 30166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 29888,
											"end": 30166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22367,
											"end": 22675,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 22367,
											"end": 22675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22517,
											"end": 22545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 22527,
											"end": 22531,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 22533,
											"end": 22535,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 22537,
											"end": 22544,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 22517,
											"end": 22526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 22517,
											"end": 22545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22517,
											"end": 22545,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 22517,
											"end": 22545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22560,
											"end": 22607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 22583,
											"end": 22587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 22589,
											"end": 22591,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 22593,
											"end": 22600,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 22602,
											"end": 22606,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 22560,
											"end": 22582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 22560,
											"end": 22607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22560,
											"end": 22607,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 22560,
											"end": 22607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22555,
											"end": 22668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 22555,
											"end": 22668,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "PUSH",
											"source": 6,
											"value": "BCB5663700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 22628,
											"end": 22668,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 22555,
											"end": 22668,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 22555,
											"end": 22668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22367,
											"end": 22675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22367,
											"end": 22675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22367,
											"end": 22675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22367,
											"end": 22675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22367,
											"end": 22675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55263,
											"end": 55281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 55263,
											"end": 55281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 55263,
											"end": 55281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55263,
											"end": 55281,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 55263,
											"end": 55281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55295,
											"end": 55304,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 55328,
											"end": 55363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 55343,
											"end": 55350,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 55352,
											"end": 55362,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55328,
											"end": 55342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 55328,
											"end": 55363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55328,
											"end": 55363,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 55328,
											"end": 55363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55320,
											"end": 55363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 55320,
											"end": 55363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55402,
											"end": 55430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 55410,
											"end": 55417,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 55419,
											"end": 55429,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55402,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 55402,
											"end": 55430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55402,
											"end": 55430,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 55402,
											"end": 55430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55394,
											"end": 55430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 55394,
											"end": 55430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 55291,
											"end": 55441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55450,
											"end": 55499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 55470,
											"end": 55475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55477,
											"end": 55489,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 55491,
											"end": 55498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 55450,
											"end": 55469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 55450,
											"end": 55499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55450,
											"end": 55499,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 55450,
											"end": 55499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55510,
											"end": 55655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 55544,
											"end": 55551,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 55565,
											"end": 55575,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55589,
											"end": 55601,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55615,
											"end": 55622,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55636,
											"end": 55645,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55510,
											"end": 55530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 55510,
											"end": 55655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55510,
											"end": 55655,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 55510,
											"end": 55655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55670,
											"end": 55679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 55695,
											"end": 55753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 55715,
											"end": 55731,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55732,
											"end": 55739,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55715,
											"end": 55740,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 55742,
											"end": 55752,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55695,
											"end": 55714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 55695,
											"end": 55753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55695,
											"end": 55753,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 55695,
											"end": 55753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55807,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55808,
											"end": 55820,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55791,
											"end": 55821,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55822,
											"end": 55829,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55791,
											"end": 55830,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 55784,
											"end": 55830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55784,
											"end": 55830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 55784,
											"end": 55830,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 55844,
											"end": 55901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 55864,
											"end": 55879,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55880,
											"end": 55887,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55864,
											"end": 55888,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 55890,
											"end": 55900,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55844,
											"end": 55863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 55844,
											"end": 55901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55844,
											"end": 55901,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 55844,
											"end": 55901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 55666,
											"end": 55912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55940,
											"end": 55941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55926,
											"end": 55942,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55926,
											"end": 55942,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 55926,
											"end": 55928,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 55926,
											"end": 55942,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55926,
											"end": 55942,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 55926,
											"end": 55942,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 55922,
											"end": 56496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 55922,
											"end": 56496,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 55979,
											"end": 55980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 55962,
											"end": 55975,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 55962,
											"end": 55980,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 56008,
											"end": 56020,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56038,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56000,
											"end": 56038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56038,
											"name": "PUSH",
											"source": 6,
											"value": "B88D4FDE"
										},
										{
											"begin": 56068,
											"end": 56072,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 56095,
											"end": 56097,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 56119,
											"end": 56126,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56148,
											"end": 56152,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 56000,
											"end": 56170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56000,
											"end": 56170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56259,
											"end": 56264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56259,
											"end": 56280,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 56259,
											"end": 56280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 56259,
											"end": 56280,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56298,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56250,
											"end": 56298,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56298,
											"name": "PUSH",
											"source": 6,
											"value": "64C0A3A"
										},
										{
											"begin": 56328,
											"end": 56332,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 56355,
											"end": 56357,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 56379,
											"end": 56384,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 56379,
											"end": 56392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56379,
											"end": 56392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 56379,
											"end": 56392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56414,
											"end": 56427,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 56449,
											"end": 56453,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 56250,
											"end": 56471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56250,
											"end": 56471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 55958,
											"end": 56486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55922,
											"end": 56496,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 55922,
											"end": 56496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56612,
											"end": 56619,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 56586,
											"end": 56598,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 56541,
											"end": 56548,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "PUSH",
											"source": 6,
											"value": "2BEDEE38CDB22411C14554191243C0E117C0088DDAE3459876ACD46A0FD53815"
										},
										{
											"begin": 56562,
											"end": 56572,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 56633,
											"end": 56642,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 56511,
											"end": 56652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 56511,
											"end": 56652,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 56662,
											"end": 56806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 56695,
											"end": 56702,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 56716,
											"end": 56726,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56740,
											"end": 56752,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56766,
											"end": 56773,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56787,
											"end": 56796,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 56662,
											"end": 56681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 56662,
											"end": 56806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 56662,
											"end": 56806,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 56662,
											"end": 56806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 55253,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 54981,
											"end": 56813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 49732,
											"end": 50701,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 49732,
											"end": 50701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 49938,
											"end": 49948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 49900,
											"end": 49927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 49918,
											"end": 49926,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 49900,
											"end": 49917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 49900,
											"end": 49927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 49900,
											"end": 49927,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 49900,
											"end": 49927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 49900,
											"end": 49934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 49900,
											"end": 49948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 49896,
											"end": 49998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 49896,
											"end": 49998,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "PUSH",
											"source": 6,
											"value": "9136D24F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 49969,
											"end": 49998,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 49896,
											"end": 49998,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 49896,
											"end": 49998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 50009,
											"end": 50027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50030,
											"end": 50066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 50045,
											"end": 50053,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50055,
											"end": 50065,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50030,
											"end": 50044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 50030,
											"end": 50066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 50030,
											"end": 50066,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 50030,
											"end": 50066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 50009,
											"end": 50066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50009,
											"end": 50066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50076,
											"end": 50125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 50096,
											"end": 50101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50103,
											"end": 50115,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 50117,
											"end": 50124,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 50076,
											"end": 50095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 50076,
											"end": 50125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 50076,
											"end": 50125,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 50076,
											"end": 50125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 50182,
											"end": 50183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50139,
											"end": 50155,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50156,
											"end": 50168,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50139,
											"end": 50169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50170,
											"end": 50177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50178,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 50139,
											"end": 50183,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 50135,
											"end": 50224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 50135,
											"end": 50224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "PUSH",
											"source": 6,
											"value": "FF33650C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50204,
											"end": 50224,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 50135,
											"end": 50224,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 50135,
											"end": 50224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 50235,
											"end": 50298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 50254,
											"end": 50262,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50264,
											"end": 50274,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50276,
											"end": 50288,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50290,
											"end": 50297,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50235,
											"end": 50253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 50235,
											"end": 50298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 50235,
											"end": 50298,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 50235,
											"end": 50298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 50341,
											"end": 50400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 50361,
											"end": 50377,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50378,
											"end": 50386,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50361,
											"end": 50387,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 50389,
											"end": 50399,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50341,
											"end": 50360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 50341,
											"end": 50400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 50341,
											"end": 50400,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 50341,
											"end": 50400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50452,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50453,
											"end": 50461,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50437,
											"end": 50462,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 50468,
											"end": 50473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50437,
											"end": 50474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50526,
											"end": 50527,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 50484,
											"end": 50500,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50501,
											"end": 50513,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50484,
											"end": 50514,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50515,
											"end": 50522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 50484,
											"end": 50523,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50527,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 50484,
											"end": 50527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 50613,
											"end": 50620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 50599,
											"end": 50611,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 50577,
											"end": 50585,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "PUSH",
											"source": 6,
											"value": "29486B9E2AE569B440933A9B1B421467306FA21F3DCAD439C262910A634963A9"
										},
										{
											"begin": 50587,
											"end": 50597,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 50563,
											"end": 50621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 50563,
											"end": 50621,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 50632,
											"end": 50694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 50650,
											"end": 50658,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50660,
											"end": 50670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50672,
											"end": 50684,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50686,
											"end": 50693,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 50632,
											"end": 50649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 50632,
											"end": 50694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 50632,
											"end": 50694,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 50632,
											"end": 50694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 49886,
											"end": 50701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 49732,
											"end": 50701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 49732,
											"end": 50701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 49732,
											"end": 50701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 49732,
											"end": 50701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 49732,
											"end": 50701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 32323,
											"end": 32912,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 32323,
											"end": 32912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32461,
											"end": 32462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32447,
											"end": 32463,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32447,
											"end": 32463,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 32447,
											"end": 32449,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 32447,
											"end": 32463,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32447,
											"end": 32463,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 32447,
											"end": 32463,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 32443,
											"end": 32500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 32443,
											"end": 32500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "PUSH",
											"source": 6,
											"value": "25BD6BD300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32472,
											"end": 32500,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 32443,
											"end": 32500,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 32443,
											"end": 32500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32514,
											"end": 32530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 32522,
											"end": 32529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 32514,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 32514,
											"end": 32530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 32514,
											"end": 32530,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 32514,
											"end": 32530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32510,
											"end": 32565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 32510,
											"end": 32565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 32510,
											"end": 32565,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "PUSH",
											"source": 6,
											"value": "C5A8D37100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32539,
											"end": 32565,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 32510,
											"end": 32565,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 32510,
											"end": 32565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32590,
											"end": 32591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32579,
											"end": 32586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 32579,
											"end": 32591,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 32575,
											"end": 32617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 32575,
											"end": 32617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "PUSH",
											"source": 6,
											"value": "238924D500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32600,
											"end": 32617,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 32575,
											"end": 32617,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 32575,
											"end": 32617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32628,
											"end": 32673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 32657,
											"end": 32658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32661,
											"end": 32663,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 32665,
											"end": 32672,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 32628,
											"end": 32648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 32628,
											"end": 32673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 32628,
											"end": 32673,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 32628,
											"end": 32673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32683,
											"end": 32752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 32718,
											"end": 32719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32722,
											"end": 32724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 32726,
											"end": 32727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32729,
											"end": 32742,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 32744,
											"end": 32751,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 32683,
											"end": 32709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 32683,
											"end": 32752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 32683,
											"end": 32752,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 32683,
											"end": 32752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32780,
											"end": 32781,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 32763,
											"end": 32772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 32773,
											"end": 32775,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 32763,
											"end": 32781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 32763,
											"end": 32781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 32881,
											"end": 32894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32856,
											"end": 32858,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32816,
											"end": 32905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32804,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32805,
											"end": 32812,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32791,
											"end": 32813,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32791,
											"end": 32905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32323,
											"end": 32912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32323,
											"end": 32912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32323,
											"end": 32912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 32323,
											"end": 32912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 26873,
											"end": 26894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 26906,
											"end": 26908,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 26873,
											"end": 26909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 26873,
											"end": 26909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26940,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26919,
											"end": 26940,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26940,
											"name": "PUSH",
											"source": 6,
											"value": "635490CC"
										},
										{
											"begin": 26941,
											"end": 26954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 26956,
											"end": 26963,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 26965,
											"end": 26969,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 26919,
											"end": 26970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26919,
											"end": 26970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26980,
											"end": 27018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 27000,
											"end": 27004,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 27006,
											"end": 27008,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 27010,
											"end": 27017,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 26980,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 26980,
											"end": 27018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 26980,
											"end": 27018,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 26980,
											"end": 27018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 27028,
											"end": 27097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 27054,
											"end": 27058,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 27060,
											"end": 27062,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 27064,
											"end": 27072,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 27074,
											"end": 27087,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 27089,
											"end": 27096,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 27028,
											"end": 27053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 27028,
											"end": 27097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 27028,
											"end": 27097,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 27028,
											"end": 27097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 27132,
											"end": 27139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 27128,
											"end": 27130,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 27122,
											"end": 27126,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 27113,
											"end": 27140,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 27203,
											"end": 27210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 27174,
											"end": 27176,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 27168,
											"end": 27172,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "PUSH",
											"source": 6,
											"value": "4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D"
										},
										{
											"begin": 27178,
											"end": 27186,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 27188,
											"end": 27201,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 27155,
											"end": 27211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 27155,
											"end": 27211,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 26863,
											"end": 27218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 26678,
											"end": 27218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43126,
											"end": 43130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 43143,
											"end": 43156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 43158,
											"end": 43174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 43180,
											"end": 43202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 43194,
											"end": 43201,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 43180,
											"end": 43193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 43180,
											"end": 43202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 43180,
											"end": 43202,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 43180,
											"end": 43202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43142,
											"end": 43202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43142,
											"end": 43202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 43142,
											"end": 43202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43142,
											"end": 43202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 43142,
											"end": 43202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43292,
											"end": 43293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 43280,
											"end": 43288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 43280,
											"end": 43293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 43276,
											"end": 43345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 43276,
											"end": 43345,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 43328,
											"end": 43333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 43317,
											"end": 43333,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43317,
											"end": 43333,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 43317,
											"end": 43324,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 43317,
											"end": 43333,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43317,
											"end": 43333,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 43317,
											"end": 43333,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 43309,
											"end": 43334,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 43309,
											"end": 43334,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43309,
											"end": 43334,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43309,
											"end": 43334,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43309,
											"end": 43334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 43309,
											"end": 43334,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 43276,
											"end": 43345,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 43276,
											"end": 43345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43429,
											"end": 43434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43434,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43418,
											"end": 43434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43425,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43434,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43418,
											"end": 43434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43434,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43482,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 43418,
											"end": 43482,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43450,
											"end": 43482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 43467,
											"end": 43472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 43474,
											"end": 43481,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 43450,
											"end": 43466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 43450,
											"end": 43482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 43450,
											"end": 43482,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 43450,
											"end": 43482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43482,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 43418,
											"end": 43482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 43418,
											"end": 43529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43522,
											"end": 43529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 43498,
											"end": 43529,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43498,
											"end": 43529,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 43498,
											"end": 43518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 43510,
											"end": 43517,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 43498,
											"end": 43509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 43498,
											"end": 43518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 43498,
											"end": 43518,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 43498,
											"end": 43518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43498,
											"end": 43529,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43498,
											"end": 43529,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 43498,
											"end": 43529,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 43418,
											"end": 43529,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 43418,
											"end": 43529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43410,
											"end": 43530,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 43410,
											"end": 43530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43410,
											"end": 43530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43410,
											"end": 43530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43005,
											"end": 43537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 43005,
											"end": 43537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 27846,
											"end": 28877,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 27846,
											"end": 28877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 27999,
											"end": 28008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15830,
											"end": 15833,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 28010,
											"end": 28011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 28010,
											"end": 28055,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 28091,
											"end": 28108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 28126,
											"end": 28150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28168,
											"end": 28178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 28204,
											"end": 28218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28233,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28195,
											"end": 28233,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28233,
											"name": "PUSH",
											"source": 6,
											"value": "FB25FB7A"
										},
										{
											"begin": 28234,
											"end": 28242,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 28195,
											"end": 28243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 28195,
											"end": 28243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 28195,
											"end": 28243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 28073,
											"end": 28243,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 28073,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28073,
											"end": 28243,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 28073,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28073,
											"end": 28243,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 28073,
											"end": 28243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28334,
											"end": 28339,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28329,
											"end": 28380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 28329,
											"end": 28380,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 28359,
											"end": 28366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28359,
											"end": 28366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28359,
											"end": 28366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28359,
											"end": 28366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28359,
											"end": 28366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 28359,
											"end": 28366,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 28329,
											"end": 28380,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 28329,
											"end": 28380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 28511,
											"end": 28515,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28516,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28490,
											"end": 28516,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28499,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28516,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28490,
											"end": 28516,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28516,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 28490,
											"end": 28549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28540,
											"end": 28549,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 28520,
											"end": 28536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 28520,
											"end": 28549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 28490,
											"end": 28549,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 28490,
											"end": 28549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 28486,
											"end": 28621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 28486,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 28486,
											"end": 28621,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "PUSH",
											"source": 6,
											"value": "F911968900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 28576,
											"end": 28606,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 28486,
											"end": 28621,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 28486,
											"end": 28621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 28717,
											"end": 28726,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 28700,
											"end": 28726,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 28700,
											"end": 28726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28751,
											"end": 28767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 28740,
											"end": 28767,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 28740,
											"end": 28767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28809,
											"end": 28812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 28809,
											"end": 28812,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 28809,
											"end": 28812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 28809,
											"end": 28812,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 28809,
											"end": 28812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28059,
											"end": 28837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28059,
											"end": 28837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28059,
											"end": 28837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 27994,
											"end": 28837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "PUSH",
											"source": 6,
											"value": "EB20C44200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 28853,
											"end": 28870,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 27846,
											"end": 28877,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 27846,
											"end": 28877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 27846,
											"end": 28877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 27846,
											"end": 28877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 27846,
											"end": 28877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 27846,
											"end": 28877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 61867,
											"end": 61989,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 61867,
											"end": 61989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 61867,
											"end": 61989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 61867,
											"end": 61989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 61867,
											"end": 61989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 61867,
											"end": 61989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 63250,
											"end": 63434,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 63250,
											"end": 63434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 63250,
											"end": 63434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63250,
											"end": 63434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63250,
											"end": 63434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63250,
											"end": 63434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63250,
											"end": 63434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63250,
											"end": 63434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 41168,
											"end": 41554,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 41168,
											"end": 41554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 41398,
											"end": 41411,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41373,
											"end": 41375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 41333,
											"end": 41422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41321,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 41322,
											"end": 41329,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41308,
											"end": 41422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41484,
											"end": 41513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 41501,
											"end": 41502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 41505,
											"end": 41512,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 41484,
											"end": 41492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 41484,
											"end": 41513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 41484,
											"end": 41513,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 41484,
											"end": 41513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 41523,
											"end": 41547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 41539,
											"end": 41546,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 41523,
											"end": 41538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 41523,
											"end": 41547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 41523,
											"end": 41547,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 41523,
											"end": 41547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 41168,
											"end": 41554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41168,
											"end": 41554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41168,
											"end": 41554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41168,
											"end": 41554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 44485,
											"end": 44629,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 44485,
											"end": 44629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44550,
											"end": 44554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 44620,
											"end": 44621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44622,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44573,
											"end": 44622,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44586,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 44587,
											"end": 44594,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 44573,
											"end": 44595,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44573,
											"end": 44608,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44622,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44573,
											"end": 44622,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44622,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 44573,
											"end": 44622,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 44566,
											"end": 44622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 44566,
											"end": 44622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 44485,
											"end": 44629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 44485,
											"end": 44629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 44485,
											"end": 44629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 44485,
											"end": 44629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 62568,
											"end": 62689,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 62568,
											"end": 62689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 62568,
											"end": 62689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 62568,
											"end": 62689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 62568,
											"end": 62689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 62568,
											"end": 62689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 63977,
											"end": 64160,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 63977,
											"end": 64160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 63977,
											"end": 64160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63977,
											"end": 64160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63977,
											"end": 64160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63977,
											"end": 64160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63977,
											"end": 64160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 63977,
											"end": 64160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 42307,
											"end": 42607,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 42307,
											"end": 42607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 42422,
											"end": 42426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 42438,
											"end": 42451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 42454,
											"end": 42470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 42462,
											"end": 42469,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 42454,
											"end": 42461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 42454,
											"end": 42470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 42454,
											"end": 42470,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 42454,
											"end": 42470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 42438,
											"end": 42470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 42438,
											"end": 42470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 42499,
											"end": 42504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42504,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42488,
											"end": 42504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42495,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42504,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42488,
											"end": 42504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42504,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 42488,
											"end": 42552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 42520,
											"end": 42552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 42537,
											"end": 42542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 42544,
											"end": 42551,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 42520,
											"end": 42536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 42520,
											"end": 42552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 42520,
											"end": 42552,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 42520,
											"end": 42552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42552,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 42488,
											"end": 42552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 42488,
											"end": 42599,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 42592,
											"end": 42599,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 42568,
											"end": 42599,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42568,
											"end": 42599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 42568,
											"end": 42588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 42580,
											"end": 42587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 42568,
											"end": 42579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 42568,
											"end": 42588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 42568,
											"end": 42588,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 42568,
											"end": 42588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 42568,
											"end": 42599,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42568,
											"end": 42599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 42568,
											"end": 42599,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 42488,
											"end": 42599,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 42488,
											"end": 42599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 42480,
											"end": 42600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 42480,
											"end": 42600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 42480,
											"end": 42600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 42307,
											"end": 42607,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 42307,
											"end": 42607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 42307,
											"end": 42607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 42307,
											"end": 42607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 42307,
											"end": 42607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 71039,
											"end": 71109,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 71039,
											"end": 71109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 71039,
											"end": 71109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 71039,
											"end": 71109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 71426,
											"end": 71495,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 71426,
											"end": 71495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 71426,
											"end": 71495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 71426,
											"end": 71495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 41723,
											"end": 41784,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 41723,
											"end": 41784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 41723,
											"end": 41784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 41723,
											"end": 41784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30589,
											"end": 30921,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 30589,
											"end": 30921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30660,
											"end": 30686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 30671,
											"end": 30673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 30675,
											"end": 30682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 30684,
											"end": 30685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30660,
											"end": 30670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 30660,
											"end": 30686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30660,
											"end": 30686,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 30660,
											"end": 30686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30727,
											"end": 30734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 30723,
											"end": 30725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 30719,
											"end": 30720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 30702,
											"end": 30735,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 30785,
											"end": 30792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 30775,
											"end": 30777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 30771,
											"end": 30772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "PUSH",
											"source": 6,
											"value": "4444026CEFD1B05506559CAB59D1B865AE3BA4ED2FE5C894F04E522776C552D"
										},
										{
											"begin": 30779,
											"end": 30780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30782,
											"end": 30783,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 30750,
											"end": 30793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 30750,
											"end": 30793,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 30804,
											"end": 30848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 30832,
											"end": 30833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30836,
											"end": 30838,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 30840,
											"end": 30847,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 30804,
											"end": 30823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 30804,
											"end": 30848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30804,
											"end": 30848,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 30804,
											"end": 30848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30858,
											"end": 30914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 30892,
											"end": 30893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30896,
											"end": 30898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 30900,
											"end": 30901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 30903,
											"end": 30904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 30906,
											"end": 30913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 30858,
											"end": 30883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 30858,
											"end": 30914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30858,
											"end": 30914,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 30858,
											"end": 30914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 30589,
											"end": 30921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 30589,
											"end": 30921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 30589,
											"end": 30921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45326,
											"end": 45330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 45346,
											"end": 45361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 45346,
											"end": 45348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 45346,
											"end": 45359,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45346,
											"end": 45359,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 45346,
											"end": 45359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 45346,
											"end": 45361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 45346,
											"end": 45361,
											"name": "tag",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 45346,
											"end": 45361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45342,
											"end": 46115,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 45342,
											"end": 46115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 45342,
											"end": 46115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 45413,
											"end": 45415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45433,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45397,
											"end": 45433,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45433,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 45455,
											"end": 45467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 45455,
											"end": 45465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 45455,
											"end": 45467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 45455,
											"end": 45467,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 45455,
											"end": 45467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45489,
											"end": 45493,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 45515,
											"end": 45522,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 45544,
											"end": 45548,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 45397,
											"end": 45566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 45397,
											"end": 45566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 45397,
											"end": 45566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "tag",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45762,
											"end": 45763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 45745,
											"end": 45751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45745,
											"end": 45758,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45745,
											"end": 45763,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 45741,
											"end": 46049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 45741,
											"end": 46049,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "PUSH",
											"source": 6,
											"value": "BCB5663700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 45794,
											"end": 45834,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 45741,
											"end": 46049,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 45741,
											"end": 46049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 46001,
											"end": 46007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 45995,
											"end": 46008,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 45986,
											"end": 45992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45982,
											"end": 45984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 45978,
											"end": 45993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 45971,
											"end": 46009,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 45377,
											"end": 46063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45638,
											"end": 45679,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 45638,
											"end": 45679,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 45638,
											"end": 45679,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 45628,
											"end": 45679,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45628,
											"end": 45679,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 45628,
											"end": 45679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 45628,
											"end": 45634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 45628,
											"end": 45679,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45628,
											"end": 45679,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 45628,
											"end": 45679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 45628,
											"end": 45679,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 45621,
											"end": 45679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 45621,
											"end": 45679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45621,
											"end": 45679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45621,
											"end": 45679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 45621,
											"end": 45679,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 45342,
											"end": 46115,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 45342,
											"end": 46115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 46100,
											"end": 46104,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 46093,
											"end": 46104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 46093,
											"end": 46104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 45177,
											"end": 46121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 56819,
											"end": 57110,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 56819,
											"end": 57110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 57002,
											"end": 57007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 57002,
											"end": 57023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 57002,
											"end": 57023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57002,
											"end": 57023,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57023,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56983,
											"end": 57023,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 56998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57023,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56983,
											"end": 57023,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57023,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57023,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 56983,
											"end": 57066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 57053,
											"end": 57058,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 57053,
											"end": 57066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 57053,
											"end": 57066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57053,
											"end": 57066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57039,
											"end": 57049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57039,
											"end": 57066,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 57039,
											"end": 57066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56983,
											"end": 57066,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 56983,
											"end": 57066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56966,
											"end": 57103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 56966,
											"end": 57103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 56966,
											"end": 57103,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "PUSH",
											"source": 6,
											"value": "37D6CE9000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57084,
											"end": 57103,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 56966,
											"end": 57103,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 56966,
											"end": 57103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 56819,
											"end": 57110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56819,
											"end": 57110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56819,
											"end": 57110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 56819,
											"end": 57110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 69250,
											"end": 69437,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 69250,
											"end": 69437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 69250,
											"end": 69437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 69250,
											"end": 69437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 69250,
											"end": 69437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 69250,
											"end": 69437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 69250,
											"end": 69437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 69250,
											"end": 69437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 72069,
											"end": 72220,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 72069,
											"end": 72220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72190,
											"end": 72191,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 72175,
											"end": 72180,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72187,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 72175,
											"end": 72191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 72175,
											"end": 72191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 72175,
											"end": 72191,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 72175,
											"end": 72191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 72169,
											"end": 72192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 72169,
											"end": 72192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 72160,
											"end": 72165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 72154,
											"end": 72166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72154,
											"end": 72192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 72202,
											"end": 72213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 72202,
											"end": 72213,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 72069,
											"end": 72220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72069,
											"end": 72220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 72069,
											"end": 72220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 70536,
											"end": 70722,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 70536,
											"end": 70722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 70536,
											"end": 70722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 70536,
											"end": 70722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 70536,
											"end": 70722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 70536,
											"end": 70722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 70536,
											"end": 70722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 70536,
											"end": 70722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 66897,
											"end": 67059,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 66897,
											"end": 67059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 66897,
											"end": 67059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 66897,
											"end": 67059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 66897,
											"end": 67059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 66897,
											"end": 67059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 66897,
											"end": 67059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 67984,
											"end": 68145,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 67984,
											"end": 68145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 67984,
											"end": 68145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 67984,
											"end": 68145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 67984,
											"end": 68145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 67984,
											"end": 68145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 67984,
											"end": 68145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "170"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "539"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2723,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 3004,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "tag",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3141,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3117,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3142,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 3145,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "tag",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "tag",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3183,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 3202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 3269,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "tag",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 3298,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "tag",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3513,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "640"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 3516,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "tag",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "tag",
											"source": 7,
											"value": "640"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 3554,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "tag",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3642,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3636,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3760,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3791,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3796,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 3926,
											"end": 3974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 3910,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 3996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4036,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 4081,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "tag",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "tag",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 4171,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "tag",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 4231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4310,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4335,
											"end": 4352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4331,
											"end": 4358,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 4362,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "tag",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "tag",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4486,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 4504,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4730,
											"end": 4736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4765,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 4786,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "tag",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "tag",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 4747,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "657"
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4974,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 4931,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "tag",
											"source": 7,
											"value": "657"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5033,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 5059,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "tag",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5112,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 5232,
											"end": 5239,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5221,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 5187,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "tag",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 5187,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5240,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5289,
											"end": 5291,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5315,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 5360,
											"end": 5367,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5349,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5336,
											"end": 5358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 5315,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5368,
											"name": "tag",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 5315,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5305,
											"end": 5368,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5305,
											"end": 5368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5260,
											"end": 5378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5448,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5417,
											"end": 5450,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5495,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5496,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5580,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 5463,
											"end": 5580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 5499,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 5499,
											"end": 5578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5578,
											"name": "tag",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 5499,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5580,
											"name": "tag",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 5463,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "663"
										},
										{
											"begin": 5658,
											"end": 5665,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5647,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 5604,
											"end": 5666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5666,
											"name": "tag",
											"source": 7,
											"value": "663"
										},
										{
											"begin": 5604,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5666,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 5683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 6018,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5689,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5799,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5785,
											"end": 5794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5772,
											"end": 5795,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5800,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5884,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 5765,
											"end": 5884,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 5803,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "tag",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5884,
											"name": "tag",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 5765,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 5993,
											"end": 6000,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5984,
											"end": 5990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 5982,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 5948,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6001,
											"name": "tag",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 5948,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6001,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 6011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 6018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 6018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 6018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 6018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 6018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6142,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 6024,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 6129,
											"end": 6134,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 6111,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "tag",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6370,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 6148,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6241,
											"end": 6245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6281,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6256,
											"end": 6282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6256,
											"end": 6282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 6292,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6363,
											"name": "tag",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 6292,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6370,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6850,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 6376,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6458,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6501,
											"end": 6503,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6489,
											"end": 6498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6480,
											"end": 6487,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6499,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6504,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6588,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 6469,
											"end": 6588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 6507,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "tag",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6588,
											"name": "tag",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 6469,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 6697,
											"end": 6704,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6686,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 6652,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "tag",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6756,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "676"
										},
										{
											"begin": 6825,
											"end": 6832,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6814,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 6780,
											"end": 6833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "676"
										},
										{
											"begin": 6780,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6770,
											"end": 6833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6770,
											"end": 6833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6850,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6850,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7475,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 6856,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 6939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7000,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 6984,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 6996,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6969,
											"end": 7001,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "679"
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 7004,
											"end": 7083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "tag",
											"source": 7,
											"value": "679"
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "tag",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "680"
										},
										{
											"begin": 7194,
											"end": 7201,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7191,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 7149,
											"end": 7202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "tag",
											"source": 7,
											"value": "680"
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7202,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7095,
											"end": 7212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 7277,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "tag",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7381,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 7450,
											"end": 7457,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7439,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 7405,
											"end": 7458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "tag",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7350,
											"end": 7468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7955,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 7481,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7592,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7604,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7609,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7693,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 7574,
											"end": 7693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "685"
										},
										{
											"begin": 7612,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 7612,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 7691,
											"name": "tag",
											"source": 7,
											"value": "685"
										},
										{
											"begin": 7612,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7693,
											"name": "tag",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 7574,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 7802,
											"end": 7809,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7799,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7791,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7778,
											"end": 7800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 7757,
											"end": 7810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7810,
											"name": "tag",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 7757,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7810,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7885,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "687"
										},
										{
											"begin": 7930,
											"end": 7937,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7921,
											"end": 7927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 7885,
											"end": 7938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7938,
											"name": "tag",
											"source": 7,
											"value": "687"
										},
										{
											"begin": 7885,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7830,
											"end": 7948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7955,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7955,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 8069,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 7961,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "689"
										},
										{
											"begin": 8056,
											"end": 8061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 8038,
											"end": 8062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8062,
											"name": "tag",
											"source": 7,
											"value": "689"
										},
										{
											"begin": 8038,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8026,
											"end": 8063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 8069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8183,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 8075,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 8170,
											"end": 8175,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 8152,
											"end": 8176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8176,
											"name": "tag",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 8152,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8140,
											"end": 8177,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8758,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 8243,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8375,
											"end": 8389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8463,
											"end": 8479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8493,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "693"
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8493,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 8493,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8493,
											"end": 8556,
											"name": "tag",
											"source": 7,
											"value": "693"
										},
										{
											"begin": 8493,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8659,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8652,
											"end": 8657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8648,
											"end": 8664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "694"
										},
										{
											"begin": 8735,
											"end": 8739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8730,
											"end": 8733,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8712,
											"end": 8724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 8678,
											"end": 8741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8741,
											"name": "tag",
											"source": 7,
											"value": "694"
										},
										{
											"begin": 8678,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8353,
											"end": 8758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 9074,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 8764,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8901,
											"end": 8905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8939,
											"end": 8941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8928,
											"end": 8937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8924,
											"end": 8942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 8952,
											"end": 9067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9067,
											"name": "tag",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 8952,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 9074,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 9074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 9074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 9074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 9074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9216,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 9080,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9169,
											"end": 9175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9209,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9428,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 9222,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9343,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9408,
											"end": 9422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9428,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9588,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 9434,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9523,
											"end": 9527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9546,
											"end": 9549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9538,
											"end": 9549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9538,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9580,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9571,
											"end": 9574,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10153,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 9648,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9779,
											"end": 9783,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9774,
											"end": 9777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9770,
											"end": 9784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9858,
											"end": 9874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9875,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "701"
										},
										{
											"begin": 9945,
											"end": 9949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9940,
											"end": 9943,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 9934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 9888,
											"end": 9951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9951,
											"name": "tag",
											"source": 7,
											"value": "701"
										},
										{
											"begin": 9888,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9794,
											"end": 9961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10043,
											"end": 10059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10060,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10125,
											"end": 10128,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10121,
											"end": 10135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10107,
											"end": 10119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 10073,
											"end": 10136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10136,
											"name": "tag",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 10073,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9971,
											"end": 10146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 10153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10426,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 10159,
											"end": 10426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10272,
											"end": 10282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "704"
										},
										{
											"begin": 10379,
											"end": 10382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 10293,
											"end": 10383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10383,
											"name": "tag",
											"source": 7,
											"value": "704"
										},
										{
											"begin": 10293,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10406,
											"end": 10420,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10567,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 10432,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10524,
											"end": 10528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10551,
											"end": 10554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10539,
											"end": 10561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10539,
											"end": 10561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 11539,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 10631,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10794,
											"end": 10797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10823,
											"end": 10899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "707"
										},
										{
											"begin": 10893,
											"end": 10898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10823,
											"end": 10899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 10823,
											"end": 10899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10823,
											"end": 10899,
											"name": "tag",
											"source": 7,
											"value": "707"
										},
										{
											"begin": 10823,
											"end": 10899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 11016,
											"end": 11022,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11011,
											"end": 11014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 10915,
											"end": 11023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11023,
											"name": "tag",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 10915,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10908,
											"end": 11023,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10908,
											"end": 11023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "709"
										},
										{
											"begin": 11119,
											"end": 11124,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 11047,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "tag",
											"source": 7,
											"value": "709"
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11148,
											"end": 11155,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "tag",
											"source": 7,
											"value": "710"
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11189,
											"end": 11195,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11186,
											"end": 11187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11183,
											"end": 11196,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "712"
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11265,
											"end": 11271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 11399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 11395,
											"end": 11398,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11380,
											"end": 11393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 11399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 11292,
											"end": 11399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 11399,
											"name": "tag",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 11292,
											"end": 11399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11285,
											"end": 11399,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 11285,
											"end": 11399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 11422,
											"end": 11504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11504,
											"name": "tag",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 11422,
											"end": 11504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11412,
											"end": 11504,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11412,
											"end": 11504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11211,
											"end": 11212,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11208,
											"end": 11209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11204,
											"end": 11213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11199,
											"end": 11213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11199,
											"end": 11213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "710"
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "tag",
											"source": 7,
											"value": "712"
										},
										{
											"begin": 11164,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11523,
											"end": 11533,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11523,
											"end": 11533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10799,
											"end": 11539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10799,
											"end": 11539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10799,
											"end": 11539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 11539,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 11539,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 11539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 11539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 11539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11545,
											"end": 12006,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 11545,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11732,
											"end": 11736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11770,
											"end": 11772,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11759,
											"end": 11768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11747,
											"end": 11773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11747,
											"end": 11773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11819,
											"end": 11828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11829,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11803,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11790,
											"end": 11807,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11847,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "716"
										},
										{
											"begin": 11994,
											"end": 11998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 11991,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11847,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 11847,
											"end": 11999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11847,
											"end": 11999,
											"name": "tag",
											"source": 7,
											"value": "716"
										},
										{
											"begin": 11847,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11839,
											"end": 11999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11839,
											"end": 11999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11545,
											"end": 12006,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11545,
											"end": 12006,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11545,
											"end": 12006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11545,
											"end": 12006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11545,
											"end": 12006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12809,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 12012,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 12104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12106,
											"end": 12112,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12114,
											"end": 12120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12165,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12151,
											"end": 12160,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12149,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12138,
											"end": 12161,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12134,
											"end": 12166,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12131,
											"end": 12250,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12131,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "718"
										},
										{
											"begin": 12131,
											"end": 12250,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 12169,
											"end": 12248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "tag",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12131,
											"end": 12250,
											"name": "tag",
											"source": 7,
											"value": "718"
										},
										{
											"begin": 12131,
											"end": 12250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12314,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "720"
										},
										{
											"begin": 12359,
											"end": 12366,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12350,
											"end": 12356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12339,
											"end": 12348,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12335,
											"end": 12357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12314,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 12314,
											"end": 12367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12314,
											"end": 12367,
											"name": "tag",
											"source": 7,
											"value": "720"
										},
										{
											"begin": 12314,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12304,
											"end": 12367,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12304,
											"end": 12367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12260,
											"end": 12377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12416,
											"end": 12418,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 12487,
											"end": 12494,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12478,
											"end": 12484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12467,
											"end": 12476,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12463,
											"end": 12485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12442,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 12442,
											"end": 12495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12442,
											"end": 12495,
											"name": "tag",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 12442,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12495,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12572,
											"end": 12574,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12561,
											"end": 12570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12557,
											"end": 12575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12544,
											"end": 12576,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12595,
											"end": 12601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12592,
											"end": 12622,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12706,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "722"
										},
										{
											"begin": 12589,
											"end": 12706,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "723"
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 12625,
											"end": 12704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "tag",
											"source": 7,
											"value": "723"
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12706,
											"name": "tag",
											"source": 7,
											"value": "722"
										},
										{
											"begin": 12589,
											"end": 12706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12730,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "724"
										},
										{
											"begin": 12784,
											"end": 12791,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12775,
											"end": 12781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12773,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12760,
											"end": 12782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12730,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 12730,
											"end": 12792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12730,
											"end": 12792,
											"name": "tag",
											"source": 7,
											"value": "724"
										},
										{
											"begin": 12730,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12720,
											"end": 12792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12720,
											"end": 12792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12515,
											"end": 12802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 13144,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 12815,
											"end": 13144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 12880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12923,
											"end": 12925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12911,
											"end": 12920,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12902,
											"end": 12909,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12898,
											"end": 12921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12894,
											"end": 12926,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12891,
											"end": 13010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12891,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "726"
										},
										{
											"begin": 12891,
											"end": 13010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12929,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "727"
										},
										{
											"begin": 12929,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 12929,
											"end": 13008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12929,
											"end": 13008,
											"name": "tag",
											"source": 7,
											"value": "727"
										},
										{
											"begin": 12929,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12891,
											"end": 13010,
											"name": "tag",
											"source": 7,
											"value": "726"
										},
										{
											"begin": 12891,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13049,
											"end": 13050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "728"
										},
										{
											"begin": 13119,
											"end": 13126,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13110,
											"end": 13116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13099,
											"end": 13108,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13095,
											"end": 13117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13074,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 13074,
											"end": 13127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13074,
											"end": 13127,
											"name": "tag",
											"source": 7,
											"value": "728"
										},
										{
											"begin": 13074,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13020,
											"end": 13137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 13144,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 13144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 13144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 13144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 13144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13268,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 13150,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13237,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "730"
										},
										{
											"begin": 13255,
											"end": 13260,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13237,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 13237,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13237,
											"end": 13261,
											"name": "tag",
											"source": 7,
											"value": "730"
										},
										{
											"begin": 13237,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13232,
											"end": 13235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13225,
											"end": 13262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13274,
											"end": 13496,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 13274,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13367,
											"end": 13371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13405,
											"end": 13407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13394,
											"end": 13403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13390,
											"end": 13408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13418,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "732"
										},
										{
											"begin": 13486,
											"end": 13487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13475,
											"end": 13484,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13471,
											"end": 13488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13468,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13418,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 13418,
											"end": 13489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13418,
											"end": 13489,
											"name": "tag",
											"source": 7,
											"value": "732"
										},
										{
											"begin": 13418,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13274,
											"end": 13496,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13274,
											"end": 13496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13274,
											"end": 13496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13274,
											"end": 13496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13274,
											"end": 13496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13618,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 13502,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13572,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "734"
										},
										{
											"begin": 13587,
											"end": 13592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13572,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 13572,
											"end": 13593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13572,
											"end": 13593,
											"name": "tag",
											"source": 7,
											"value": "734"
										},
										{
											"begin": 13572,
											"end": 13593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13565,
											"end": 13570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13562,
											"end": 13594,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13552,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "735"
										},
										{
											"begin": 13552,
											"end": 13612,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13608,
											"end": 13609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13605,
											"end": 13606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13598,
											"end": 13610,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13552,
											"end": 13612,
											"name": "tag",
											"source": 7,
											"value": "735"
										},
										{
											"begin": 13552,
											"end": 13612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13757,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 13624,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13672,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13705,
											"end": 13711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13692,
											"end": 13712,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 13683,
											"end": 13712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13683,
											"end": 13712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "737"
										},
										{
											"begin": 13745,
											"end": 13750,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 13721,
											"end": 13751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13751,
											"name": "tag",
											"source": 7,
											"value": "737"
										},
										{
											"begin": 13721,
											"end": 13751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13757,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13757,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 14231,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 13763,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 13834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13836,
											"end": 13842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13885,
											"end": 13887,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 13871,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13860,
											"end": 13883,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13856,
											"end": 13888,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "739"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "740"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 13891,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "tag",
											"source": 7,
											"value": "740"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "tag",
											"source": 7,
											"value": "739"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "741"
										},
										{
											"begin": 14081,
											"end": 14088,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14072,
											"end": 14078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14061,
											"end": 14070,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 14036,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "tag",
											"source": 7,
											"value": "741"
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14089,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13982,
											"end": 14099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14138,
											"end": 14140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14164,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "742"
										},
										{
											"begin": 14206,
											"end": 14213,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14197,
											"end": 14203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14186,
											"end": 14195,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14182,
											"end": 14204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14164,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 14164,
											"end": 14214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14164,
											"end": 14214,
											"name": "tag",
											"source": 7,
											"value": "742"
										},
										{
											"begin": 14164,
											"end": 14214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14154,
											"end": 14214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14154,
											"end": 14214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14109,
											"end": 14224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 14231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 14231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 14231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 14231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 14231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 14231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14332,
											"end": 14338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14346,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14348,
											"end": 14354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14356,
											"end": 14362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14405,
											"end": 14408,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 14393,
											"end": 14402,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14384,
											"end": 14391,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14380,
											"end": 14403,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14376,
											"end": 14409,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 14373,
											"end": 14493,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14373,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "744"
										},
										{
											"begin": 14373,
											"end": 14493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14412,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "745"
										},
										{
											"begin": 14412,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 14412,
											"end": 14491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14412,
											"end": 14491,
											"name": "tag",
											"source": 7,
											"value": "745"
										},
										{
											"begin": 14412,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14373,
											"end": 14493,
											"name": "tag",
											"source": 7,
											"value": "744"
										},
										{
											"begin": 14373,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "746"
										},
										{
											"begin": 14602,
											"end": 14609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14582,
											"end": 14591,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14578,
											"end": 14600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14557,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 14557,
											"end": 14610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14557,
											"end": 14610,
											"name": "tag",
											"source": 7,
											"value": "746"
										},
										{
											"begin": 14557,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 14610,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 14610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14503,
											"end": 14620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14685,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "747"
										},
										{
											"begin": 14730,
											"end": 14737,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14721,
											"end": 14727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14710,
											"end": 14719,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14685,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 14685,
											"end": 14738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14685,
											"end": 14738,
											"name": "tag",
											"source": 7,
											"value": "747"
										},
										{
											"begin": 14685,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14675,
											"end": 14738,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14675,
											"end": 14738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14630,
											"end": 14748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14787,
											"end": 14789,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "748"
										},
										{
											"begin": 14858,
											"end": 14865,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14849,
											"end": 14855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14838,
											"end": 14847,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 14856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14813,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 14813,
											"end": 14866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14813,
											"end": 14866,
											"name": "tag",
											"source": 7,
											"value": "748"
										},
										{
											"begin": 14813,
											"end": 14866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14803,
											"end": 14866,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14803,
											"end": 14866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14758,
											"end": 14876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14943,
											"end": 14945,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 14932,
											"end": 14941,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14928,
											"end": 14946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14915,
											"end": 14947,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 14974,
											"end": 14992,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14966,
											"end": 14972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14963,
											"end": 14993,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 15077,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "749"
										},
										{
											"begin": 14960,
											"end": 15077,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14996,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "750"
										},
										{
											"begin": 14996,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 14996,
											"end": 15075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14996,
											"end": 15075,
											"name": "tag",
											"source": 7,
											"value": "750"
										},
										{
											"begin": 14996,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 15077,
											"name": "tag",
											"source": 7,
											"value": "749"
										},
										{
											"begin": 14960,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15101,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "751"
										},
										{
											"begin": 15155,
											"end": 15162,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 15146,
											"end": 15152,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15135,
											"end": 15144,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 15131,
											"end": 15153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15101,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 15101,
											"end": 15163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15101,
											"end": 15163,
											"name": "tag",
											"source": 7,
											"value": "751"
										},
										{
											"begin": 15101,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15091,
											"end": 15163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15091,
											"end": 15163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14886,
											"end": 15173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 15180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15314,
											"end": 15320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15322,
											"end": 15328,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15338,
											"end": 15344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15354,
											"end": 15360,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15362,
											"end": 15368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15370,
											"end": 15376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15419,
											"end": 15422,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 15407,
											"end": 15416,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 15398,
											"end": 15405,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 15394,
											"end": 15417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15423,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 15387,
											"end": 15507,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15387,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "753"
										},
										{
											"begin": 15387,
											"end": 15507,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15426,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "754"
										},
										{
											"begin": 15426,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 15426,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15426,
											"end": 15505,
											"name": "tag",
											"source": 7,
											"value": "754"
										},
										{
											"begin": 15426,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15387,
											"end": 15507,
											"name": "tag",
											"source": 7,
											"value": "753"
										},
										{
											"begin": 15387,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15546,
											"end": 15547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "755"
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 15607,
											"end": 15613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 15592,
											"end": 15614,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 15571,
											"end": 15624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "tag",
											"source": 7,
											"value": "755"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15517,
											"end": 15634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 15675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15699,
											"end": 15752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "756"
										},
										{
											"begin": 15744,
											"end": 15751,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 15735,
											"end": 15741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15724,
											"end": 15733,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 15720,
											"end": 15742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15699,
											"end": 15752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 15699,
											"end": 15752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15699,
											"end": 15752,
											"name": "tag",
											"source": 7,
											"value": "756"
										},
										{
											"begin": 15699,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15689,
											"end": 15752,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 15689,
											"end": 15752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15644,
											"end": 15762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15801,
											"end": 15803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15827,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "757"
										},
										{
											"begin": 15872,
											"end": 15879,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15852,
											"end": 15861,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 15848,
											"end": 15870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15827,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 15827,
											"end": 15880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15827,
											"end": 15880,
											"name": "tag",
											"source": 7,
											"value": "757"
										},
										{
											"begin": 15827,
											"end": 15880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15817,
											"end": 15880,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 15817,
											"end": 15880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 15890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 15931,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 15955,
											"end": 16008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "758"
										},
										{
											"begin": 16000,
											"end": 16007,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 15991,
											"end": 15997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15980,
											"end": 15989,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 15976,
											"end": 15998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 15955,
											"end": 16008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16008,
											"name": "tag",
											"source": 7,
											"value": "758"
										},
										{
											"begin": 15955,
											"end": 16008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15945,
											"end": 16008,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 15945,
											"end": 16008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15900,
											"end": 16018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16057,
											"end": 16060,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 16084,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "759"
										},
										{
											"begin": 16129,
											"end": 16136,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16120,
											"end": 16126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16109,
											"end": 16118,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 16105,
											"end": 16127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16084,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 16084,
											"end": 16137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16084,
											"end": 16137,
											"name": "tag",
											"source": 7,
											"value": "759"
										},
										{
											"begin": 16084,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16074,
											"end": 16137,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16074,
											"end": 16137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16028,
											"end": 16147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16189,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 16213,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "760"
										},
										{
											"begin": 16258,
											"end": 16265,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16249,
											"end": 16255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16238,
											"end": 16247,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 16234,
											"end": 16256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16213,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 16213,
											"end": 16266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16213,
											"end": 16266,
											"name": "tag",
											"source": 7,
											"value": "760"
										},
										{
											"begin": 16213,
											"end": 16266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16203,
											"end": 16266,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16203,
											"end": 16266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16157,
											"end": 16276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16315,
											"end": 16318,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 16342,
											"end": 16392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "761"
										},
										{
											"begin": 16384,
											"end": 16391,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16364,
											"end": 16373,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 16360,
											"end": 16382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16342,
											"end": 16392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 16342,
											"end": 16392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16342,
											"end": 16392,
											"name": "tag",
											"source": 7,
											"value": "761"
										},
										{
											"begin": 16342,
											"end": 16392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16392,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16469,
											"end": 16472,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 16458,
											"end": 16467,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 16454,
											"end": 16473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16441,
											"end": 16474,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 16501,
											"end": 16519,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16493,
											"end": 16499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16490,
											"end": 16520,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16487,
											"end": 16604,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16487,
											"end": 16604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "762"
										},
										{
											"begin": 16487,
											"end": 16604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "763"
										},
										{
											"begin": 16523,
											"end": 16602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 16523,
											"end": 16602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16602,
											"name": "tag",
											"source": 7,
											"value": "763"
										},
										{
											"begin": 16523,
											"end": 16602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16487,
											"end": 16604,
											"name": "tag",
											"source": 7,
											"value": "762"
										},
										{
											"begin": 16487,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16628,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "764"
										},
										{
											"begin": 16682,
											"end": 16689,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16673,
											"end": 16679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16662,
											"end": 16671,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 16658,
											"end": 16680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16628,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 16628,
											"end": 16690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16628,
											"end": 16690,
											"name": "tag",
											"source": 7,
											"value": "764"
										},
										{
											"begin": 16628,
											"end": 16690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16618,
											"end": 16690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16618,
											"end": 16690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16412,
											"end": 16700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 16707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16799,
											"end": 16805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16807,
											"end": 16813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16815,
											"end": 16821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16823,
											"end": 16829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16872,
											"end": 16875,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 16860,
											"end": 16869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16851,
											"end": 16858,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16847,
											"end": 16870,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16843,
											"end": 16876,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 16840,
											"end": 16960,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16840,
											"end": 16960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "766"
										},
										{
											"begin": 16840,
											"end": 16960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "767"
										},
										{
											"begin": 16879,
											"end": 16958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 16879,
											"end": 16958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16958,
											"name": "tag",
											"source": 7,
											"value": "767"
										},
										{
											"begin": 16879,
											"end": 16958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16840,
											"end": 16960,
											"name": "tag",
											"source": 7,
											"value": "766"
										},
										{
											"begin": 16840,
											"end": 16960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16999,
											"end": 17000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17024,
											"end": 17077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "768"
										},
										{
											"begin": 17069,
											"end": 17076,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17060,
											"end": 17066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17049,
											"end": 17058,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17045,
											"end": 17067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17024,
											"end": 17077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 17024,
											"end": 17077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17024,
											"end": 17077,
											"name": "tag",
											"source": 7,
											"value": "768"
										},
										{
											"begin": 17024,
											"end": 17077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17014,
											"end": 17077,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17014,
											"end": 17077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16970,
											"end": 17087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17126,
											"end": 17128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17152,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "769"
										},
										{
											"begin": 17197,
											"end": 17204,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17188,
											"end": 17194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17177,
											"end": 17186,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17173,
											"end": 17195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17152,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 17152,
											"end": 17205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17152,
											"end": 17205,
											"name": "tag",
											"source": 7,
											"value": "769"
										},
										{
											"begin": 17152,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17142,
											"end": 17205,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17142,
											"end": 17205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17097,
											"end": 17215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17254,
											"end": 17256,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17280,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "770"
										},
										{
											"begin": 17325,
											"end": 17332,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17316,
											"end": 17322,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17305,
											"end": 17314,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17301,
											"end": 17323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17280,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 17280,
											"end": 17333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17280,
											"end": 17333,
											"name": "tag",
											"source": 7,
											"value": "770"
										},
										{
											"begin": 17280,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17225,
											"end": 17343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17382,
											"end": 17384,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 17408,
											"end": 17461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "771"
										},
										{
											"begin": 17453,
											"end": 17460,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17444,
											"end": 17450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17433,
											"end": 17442,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17429,
											"end": 17451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 17408,
											"end": 17461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17461,
											"name": "tag",
											"source": 7,
											"value": "771"
										},
										{
											"begin": 17408,
											"end": 17461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17398,
											"end": 17461,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17398,
											"end": 17461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17353,
											"end": 17471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 17478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17958,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 17484,
											"end": 17958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17552,
											"end": 17558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17560,
											"end": 17566,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17597,
											"end": 17606,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17588,
											"end": 17595,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17584,
											"end": 17607,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17580,
											"end": 17612,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17696,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "773"
										},
										{
											"begin": 17577,
											"end": 17696,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "774"
										},
										{
											"begin": 17615,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 17615,
											"end": 17694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17694,
											"name": "tag",
											"source": 7,
											"value": "774"
										},
										{
											"begin": 17615,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17696,
											"name": "tag",
											"source": 7,
											"value": "773"
										},
										{
											"begin": 17577,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17735,
											"end": 17736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17760,
											"end": 17813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "775"
										},
										{
											"begin": 17805,
											"end": 17812,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17796,
											"end": 17802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17785,
											"end": 17794,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17781,
											"end": 17803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17760,
											"end": 17813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 17760,
											"end": 17813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17760,
											"end": 17813,
											"name": "tag",
											"source": 7,
											"value": "775"
										},
										{
											"begin": 17760,
											"end": 17813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17750,
											"end": 17813,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17750,
											"end": 17813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17706,
											"end": 17823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17862,
											"end": 17864,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17888,
											"end": 17941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "776"
										},
										{
											"begin": 17933,
											"end": 17940,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17924,
											"end": 17930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17913,
											"end": 17922,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17909,
											"end": 17931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17888,
											"end": 17941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 17888,
											"end": 17941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17888,
											"end": 17941,
											"name": "tag",
											"source": 7,
											"value": "776"
										},
										{
											"begin": 17888,
											"end": 17941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17878,
											"end": 17941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17878,
											"end": 17941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17833,
											"end": 17951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17958,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17958,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18059,
											"end": 18065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18067,
											"end": 18073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18075,
											"end": 18081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18083,
											"end": 18089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18132,
											"end": 18135,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 18120,
											"end": 18129,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18111,
											"end": 18118,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18107,
											"end": 18130,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18103,
											"end": 18136,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 18100,
											"end": 18220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18100,
											"end": 18220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "778"
										},
										{
											"begin": 18100,
											"end": 18220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18139,
											"end": 18218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "779"
										},
										{
											"begin": 18139,
											"end": 18218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 18139,
											"end": 18218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18139,
											"end": 18218,
											"name": "tag",
											"source": 7,
											"value": "779"
										},
										{
											"begin": 18139,
											"end": 18218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18100,
											"end": 18220,
											"name": "tag",
											"source": 7,
											"value": "778"
										},
										{
											"begin": 18100,
											"end": 18220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18259,
											"end": 18260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18284,
											"end": 18337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "780"
										},
										{
											"begin": 18329,
											"end": 18336,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18320,
											"end": 18326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18309,
											"end": 18318,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18305,
											"end": 18327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18284,
											"end": 18337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 18284,
											"end": 18337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18284,
											"end": 18337,
											"name": "tag",
											"source": 7,
											"value": "780"
										},
										{
											"begin": 18284,
											"end": 18337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18337,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18230,
											"end": 18347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18412,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "781"
										},
										{
											"begin": 18457,
											"end": 18464,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18448,
											"end": 18454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18437,
											"end": 18446,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18433,
											"end": 18455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18412,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 18412,
											"end": 18465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18412,
											"end": 18465,
											"name": "tag",
											"source": 7,
											"value": "781"
										},
										{
											"begin": 18412,
											"end": 18465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18402,
											"end": 18465,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18402,
											"end": 18465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18357,
											"end": 18475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18514,
											"end": 18516,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18540,
											"end": 18593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "782"
										},
										{
											"begin": 18585,
											"end": 18592,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18576,
											"end": 18582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18565,
											"end": 18574,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18561,
											"end": 18583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18540,
											"end": 18593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 18540,
											"end": 18593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18540,
											"end": 18593,
											"name": "tag",
											"source": 7,
											"value": "782"
										},
										{
											"begin": 18540,
											"end": 18593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18530,
											"end": 18593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18530,
											"end": 18593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18485,
											"end": 18603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18670,
											"end": 18672,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18659,
											"end": 18668,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18655,
											"end": 18673,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18642,
											"end": 18674,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 18701,
											"end": 18719,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18693,
											"end": 18699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18690,
											"end": 18720,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18687,
											"end": 18804,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18687,
											"end": 18804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "783"
										},
										{
											"begin": 18687,
											"end": 18804,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18723,
											"end": 18802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "784"
										},
										{
											"begin": 18723,
											"end": 18802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 18723,
											"end": 18802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18723,
											"end": 18802,
											"name": "tag",
											"source": 7,
											"value": "784"
										},
										{
											"begin": 18723,
											"end": 18802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18687,
											"end": 18804,
											"name": "tag",
											"source": 7,
											"value": "783"
										},
										{
											"begin": 18687,
											"end": 18804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18828,
											"end": 18890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "785"
										},
										{
											"begin": 18882,
											"end": 18889,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18873,
											"end": 18879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18862,
											"end": 18871,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18858,
											"end": 18880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18828,
											"end": 18890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 18828,
											"end": 18890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18828,
											"end": 18890,
											"name": "tag",
											"source": 7,
											"value": "785"
										},
										{
											"begin": 18828,
											"end": 18890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18818,
											"end": 18890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18818,
											"end": 18890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18613,
											"end": 18900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19056,
											"end": 19060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19094,
											"end": 19096,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19083,
											"end": 19092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19079,
											"end": 19097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19071,
											"end": 19097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19071,
											"end": 19097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19107,
											"end": 19178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "787"
										},
										{
											"begin": 19175,
											"end": 19176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19164,
											"end": 19173,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19160,
											"end": 19177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19151,
											"end": 19157,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19107,
											"end": 19178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 19107,
											"end": 19178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19107,
											"end": 19178,
											"name": "tag",
											"source": 7,
											"value": "787"
										},
										{
											"begin": 19107,
											"end": 19178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19188,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "788"
										},
										{
											"begin": 19256,
											"end": 19258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19245,
											"end": 19254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19241,
											"end": 19259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19232,
											"end": 19238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19188,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 19188,
											"end": 19260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19188,
											"end": 19260,
											"name": "tag",
											"source": 7,
											"value": "788"
										},
										{
											"begin": 19188,
											"end": 19260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "789"
										},
										{
											"begin": 19332,
											"end": 19334,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19321,
											"end": 19330,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19317,
											"end": 19335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19308,
											"end": 19314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 19270,
											"end": 19336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19336,
											"name": "tag",
											"source": 7,
											"value": "789"
										},
										{
											"begin": 19270,
											"end": 19336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18913,
											"end": 19343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19349,
											"end": 19529,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 19349,
											"end": 19529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19397,
											"end": 19474,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19394,
											"end": 19395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19387,
											"end": 19475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19494,
											"end": 19498,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 19491,
											"end": 19492,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 19484,
											"end": 19499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19518,
											"end": 19522,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19515,
											"end": 19516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19508,
											"end": 19523,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 19535,
											"end": 19678,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 19535,
											"end": 19678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19592,
											"end": 19597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19623,
											"end": 19629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19617,
											"end": 19630,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19608,
											"end": 19630,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19608,
											"end": 19630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19639,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "792"
										},
										{
											"begin": 19666,
											"end": 19671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19639,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 19639,
											"end": 19672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19639,
											"end": 19672,
											"name": "tag",
											"source": 7,
											"value": "792"
										},
										{
											"begin": 19639,
											"end": 19672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19535,
											"end": 19678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19535,
											"end": 19678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19535,
											"end": 19678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19535,
											"end": 19678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19535,
											"end": 19678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 20035,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 19684,
											"end": 20035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19754,
											"end": 19760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19803,
											"end": 19805,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19791,
											"end": 19800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19782,
											"end": 19789,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19778,
											"end": 19801,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19774,
											"end": 19806,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 19771,
											"end": 19890,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19771,
											"end": 19890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "794"
										},
										{
											"begin": 19771,
											"end": 19890,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "795"
										},
										{
											"begin": 19809,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 19809,
											"end": 19888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 19888,
											"name": "tag",
											"source": 7,
											"value": "795"
										},
										{
											"begin": 19809,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19771,
											"end": 19890,
											"name": "tag",
											"source": 7,
											"value": "794"
										},
										{
											"begin": 19771,
											"end": 19890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19929,
											"end": 19930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19954,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "796"
										},
										{
											"begin": 20010,
											"end": 20017,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20001,
											"end": 20007,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19990,
											"end": 19999,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19986,
											"end": 20008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19954,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 19954,
											"end": 20018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19954,
											"end": 20018,
											"name": "tag",
											"source": 7,
											"value": "796"
										},
										{
											"begin": 19954,
											"end": 20018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19944,
											"end": 20018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19944,
											"end": 20018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19900,
											"end": 20028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 20035,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 20035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 20035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 20035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 20035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20041,
											"end": 20156,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 20041,
											"end": 20156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20126,
											"end": 20149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "798"
										},
										{
											"begin": 20143,
											"end": 20148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20126,
											"end": 20149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 20126,
											"end": 20149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20126,
											"end": 20149,
											"name": "tag",
											"source": 7,
											"value": "798"
										},
										{
											"begin": 20126,
											"end": 20149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20121,
											"end": 20124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20114,
											"end": 20150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20041,
											"end": 20156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20041,
											"end": 20156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20041,
											"end": 20156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20162,
											"end": 20380,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 20162,
											"end": 20380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20253,
											"end": 20257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20291,
											"end": 20293,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20280,
											"end": 20289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20276,
											"end": 20294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20268,
											"end": 20294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20268,
											"end": 20294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20304,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "800"
										},
										{
											"begin": 20370,
											"end": 20371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20359,
											"end": 20368,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20355,
											"end": 20372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20346,
											"end": 20352,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20304,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 20304,
											"end": 20373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20304,
											"end": 20373,
											"name": "tag",
											"source": 7,
											"value": "800"
										},
										{
											"begin": 20304,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20162,
											"end": 20380,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20162,
											"end": 20380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20162,
											"end": 20380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20162,
											"end": 20380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20162,
											"end": 20380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20386,
											"end": 20523,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 20386,
											"end": 20523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20440,
											"end": 20445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20471,
											"end": 20477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20465,
											"end": 20478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20456,
											"end": 20478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20456,
											"end": 20478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20487,
											"end": 20517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "802"
										},
										{
											"begin": 20511,
											"end": 20516,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20487,
											"end": 20517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 20487,
											"end": 20517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20487,
											"end": 20517,
											"name": "tag",
											"source": 7,
											"value": "802"
										},
										{
											"begin": 20487,
											"end": 20517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20386,
											"end": 20523,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20386,
											"end": 20523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20386,
											"end": 20523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20386,
											"end": 20523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20386,
											"end": 20523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20529,
											"end": 20874,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 20529,
											"end": 20874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20596,
											"end": 20602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20645,
											"end": 20647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20633,
											"end": 20642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20624,
											"end": 20631,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20620,
											"end": 20643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20616,
											"end": 20648,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 20613,
											"end": 20732,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20613,
											"end": 20732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "804"
										},
										{
											"begin": 20613,
											"end": 20732,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20651,
											"end": 20730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "805"
										},
										{
											"begin": 20651,
											"end": 20730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 20651,
											"end": 20730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20651,
											"end": 20730,
											"name": "tag",
											"source": 7,
											"value": "805"
										},
										{
											"begin": 20651,
											"end": 20730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20613,
											"end": 20732,
											"name": "tag",
											"source": 7,
											"value": "804"
										},
										{
											"begin": 20613,
											"end": 20732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20771,
											"end": 20772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20796,
											"end": 20857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "806"
										},
										{
											"begin": 20849,
											"end": 20856,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20840,
											"end": 20846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20829,
											"end": 20838,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20825,
											"end": 20847,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20796,
											"end": 20857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 20796,
											"end": 20857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20796,
											"end": 20857,
											"name": "tag",
											"source": 7,
											"value": "806"
										},
										{
											"begin": 20796,
											"end": 20857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20786,
											"end": 20857,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20786,
											"end": 20857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20742,
											"end": 20867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20529,
											"end": 20874,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20529,
											"end": 20874,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20529,
											"end": 20874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20529,
											"end": 20874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20529,
											"end": 20874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20880,
											"end": 21060,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 20880,
											"end": 21060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20928,
											"end": 21005,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20925,
											"end": 20926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20918,
											"end": 21006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21025,
											"end": 21029,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 21022,
											"end": 21023,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21015,
											"end": 21030,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21049,
											"end": 21053,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 21046,
											"end": 21047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21039,
											"end": 21054,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21260,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 21066,
											"end": 21260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21106,
											"end": 21110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21126,
											"end": 21146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "809"
										},
										{
											"begin": 21144,
											"end": 21145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21126,
											"end": 21146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 21126,
											"end": 21146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21126,
											"end": 21146,
											"name": "tag",
											"source": 7,
											"value": "809"
										},
										{
											"begin": 21126,
											"end": 21146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21121,
											"end": 21146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21121,
											"end": 21146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21160,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "810"
										},
										{
											"begin": 21178,
											"end": 21179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21160,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 21160,
											"end": 21180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21160,
											"end": 21180,
											"name": "tag",
											"source": 7,
											"value": "810"
										},
										{
											"begin": 21160,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21155,
											"end": 21180,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21155,
											"end": 21180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21204,
											"end": 21205,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21201,
											"end": 21202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21197,
											"end": 21206,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21189,
											"end": 21206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21189,
											"end": 21206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21228,
											"end": 21229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21222,
											"end": 21226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21219,
											"end": 21230,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21216,
											"end": 21253,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21216,
											"end": 21253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "811"
										},
										{
											"begin": 21216,
											"end": 21253,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21233,
											"end": 21251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "812"
										},
										{
											"begin": 21233,
											"end": 21251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 21233,
											"end": 21251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21233,
											"end": 21251,
											"name": "tag",
											"source": 7,
											"value": "812"
										},
										{
											"begin": 21233,
											"end": 21251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21216,
											"end": 21253,
											"name": "tag",
											"source": 7,
											"value": "811"
										},
										{
											"begin": 21216,
											"end": 21253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21260,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21457,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 21266,
											"end": 21457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21306,
											"end": 21309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21325,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "814"
										},
										{
											"begin": 21343,
											"end": 21344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21325,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 21325,
											"end": 21345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21325,
											"end": 21345,
											"name": "tag",
											"source": 7,
											"value": "814"
										},
										{
											"begin": 21325,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21320,
											"end": 21345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21320,
											"end": 21345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "815"
										},
										{
											"begin": 21377,
											"end": 21378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 21359,
											"end": 21379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21379,
											"name": "tag",
											"source": 7,
											"value": "815"
										},
										{
											"begin": 21359,
											"end": 21379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21354,
											"end": 21379,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21354,
											"end": 21379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21402,
											"end": 21403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21399,
											"end": 21400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21395,
											"end": 21404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21388,
											"end": 21404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21388,
											"end": 21404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21423,
											"end": 21426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21420,
											"end": 21421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21417,
											"end": 21427,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21414,
											"end": 21450,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21414,
											"end": 21450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "816"
										},
										{
											"begin": 21414,
											"end": 21450,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21430,
											"end": 21448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "817"
										},
										{
											"begin": 21430,
											"end": 21448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 21430,
											"end": 21448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21430,
											"end": 21448,
											"name": "tag",
											"source": 7,
											"value": "817"
										},
										{
											"begin": 21430,
											"end": 21448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21414,
											"end": 21450,
											"name": "tag",
											"source": 7,
											"value": "816"
										},
										{
											"begin": 21414,
											"end": 21450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21457,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21457,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21548,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 21463,
											"end": 21548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21508,
											"end": 21515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21537,
											"end": 21542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21526,
											"end": 21542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21526,
											"end": 21542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21554,
											"end": 21614,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 21554,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21582,
											"end": 21585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21603,
											"end": 21608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21596,
											"end": 21608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21596,
											"end": 21608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21554,
											"end": 21614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21554,
											"end": 21614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21554,
											"end": 21614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21554,
											"end": 21614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21620,
											"end": 21778,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 21620,
											"end": 21778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21678,
											"end": 21687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21711,
											"end": 21772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "821"
										},
										{
											"begin": 21729,
											"end": 21771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "822"
										},
										{
											"begin": 21738,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "823"
										},
										{
											"begin": 21764,
											"end": 21769,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21738,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 21738,
											"end": 21770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21738,
											"end": 21770,
											"name": "tag",
											"source": 7,
											"value": "823"
										},
										{
											"begin": 21738,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21729,
											"end": 21771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 21729,
											"end": 21771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21729,
											"end": 21771,
											"name": "tag",
											"source": 7,
											"value": "822"
										},
										{
											"begin": 21729,
											"end": 21771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21711,
											"end": 21772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 21711,
											"end": 21772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21711,
											"end": 21772,
											"name": "tag",
											"source": 7,
											"value": "821"
										},
										{
											"begin": 21711,
											"end": 21772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21698,
											"end": 21772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21698,
											"end": 21772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21620,
											"end": 21778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21620,
											"end": 21778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21620,
											"end": 21778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21620,
											"end": 21778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21784,
											"end": 21931,
											"name": "tag",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 21784,
											"end": 21931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21879,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "825"
										},
										{
											"begin": 21918,
											"end": 21923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21879,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 21879,
											"end": 21924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21879,
											"end": 21924,
											"name": "tag",
											"source": 7,
											"value": "825"
										},
										{
											"begin": 21879,
											"end": 21924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21874,
											"end": 21877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21867,
											"end": 21925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21784,
											"end": 21931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21784,
											"end": 21931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21784,
											"end": 21931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 22285,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 21937,
											"end": 22285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22066,
											"end": 22070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22104,
											"end": 22106,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22093,
											"end": 22102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22089,
											"end": 22107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22081,
											"end": 22107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22081,
											"end": 22107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22117,
											"end": 22188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "827"
										},
										{
											"begin": 22185,
											"end": 22186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22174,
											"end": 22183,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22170,
											"end": 22187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22161,
											"end": 22167,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22117,
											"end": 22188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 22117,
											"end": 22188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22117,
											"end": 22188,
											"name": "tag",
											"source": 7,
											"value": "827"
										},
										{
											"begin": 22117,
											"end": 22188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22198,
											"end": 22278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "828"
										},
										{
											"begin": 22274,
											"end": 22276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22263,
											"end": 22272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22259,
											"end": 22277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22250,
											"end": 22256,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22198,
											"end": 22278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 22198,
											"end": 22278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22198,
											"end": 22278,
											"name": "tag",
											"source": 7,
											"value": "828"
										},
										{
											"begin": 22198,
											"end": 22278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 22285,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 22285,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 22285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 22285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 22285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 22285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22291,
											"end": 22623,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 22291,
											"end": 22623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22412,
											"end": 22416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22450,
											"end": 22452,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22439,
											"end": 22448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22435,
											"end": 22453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22427,
											"end": 22453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22427,
											"end": 22453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22463,
											"end": 22534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "830"
										},
										{
											"begin": 22531,
											"end": 22532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22520,
											"end": 22529,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22516,
											"end": 22533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22507,
											"end": 22513,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22463,
											"end": 22534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 22463,
											"end": 22534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22463,
											"end": 22534,
											"name": "tag",
											"source": 7,
											"value": "830"
										},
										{
											"begin": 22463,
											"end": 22534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22544,
											"end": 22616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "831"
										},
										{
											"begin": 22612,
											"end": 22614,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22601,
											"end": 22610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22597,
											"end": 22615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22588,
											"end": 22594,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22544,
											"end": 22616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 22544,
											"end": 22616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22544,
											"end": 22616,
											"name": "tag",
											"source": 7,
											"value": "831"
										},
										{
											"begin": 22544,
											"end": 22616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22291,
											"end": 22623,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22291,
											"end": 22623,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22291,
											"end": 22623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22291,
											"end": 22623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22291,
											"end": 22623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22291,
											"end": 22623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22629,
											"end": 22961,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 22629,
											"end": 22961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22750,
											"end": 22754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22788,
											"end": 22790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22777,
											"end": 22786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22773,
											"end": 22791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22765,
											"end": 22791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22765,
											"end": 22791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22801,
											"end": 22872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "833"
										},
										{
											"begin": 22869,
											"end": 22870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22858,
											"end": 22867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22854,
											"end": 22871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22845,
											"end": 22851,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22801,
											"end": 22872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 22801,
											"end": 22872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22801,
											"end": 22872,
											"name": "tag",
											"source": 7,
											"value": "833"
										},
										{
											"begin": 22801,
											"end": 22872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22882,
											"end": 22954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "834"
										},
										{
											"begin": 22950,
											"end": 22952,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22939,
											"end": 22948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22926,
											"end": 22932,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22882,
											"end": 22954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 22882,
											"end": 22954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22882,
											"end": 22954,
											"name": "tag",
											"source": 7,
											"value": "834"
										},
										{
											"begin": 22882,
											"end": 22954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22629,
											"end": 22961,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22629,
											"end": 22961,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22629,
											"end": 22961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22629,
											"end": 22961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22629,
											"end": 22961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22629,
											"end": 22961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22967,
											"end": 23110,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 22967,
											"end": 23110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23024,
											"end": 23029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23055,
											"end": 23061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23049,
											"end": 23062,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23040,
											"end": 23062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23040,
											"end": 23062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23071,
											"end": 23104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "836"
										},
										{
											"begin": 23098,
											"end": 23103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23071,
											"end": 23104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 23071,
											"end": 23104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23071,
											"end": 23104,
											"name": "tag",
											"source": 7,
											"value": "836"
										},
										{
											"begin": 23071,
											"end": 23104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22967,
											"end": 23110,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22967,
											"end": 23110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22967,
											"end": 23110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22967,
											"end": 23110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22967,
											"end": 23110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23467,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 23116,
											"end": 23467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23186,
											"end": 23192,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23235,
											"end": 23237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23223,
											"end": 23232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23214,
											"end": 23221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23210,
											"end": 23233,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 23206,
											"end": 23238,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 23203,
											"end": 23322,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 23203,
											"end": 23322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "838"
										},
										{
											"begin": 23203,
											"end": 23322,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23241,
											"end": 23320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "839"
										},
										{
											"begin": 23241,
											"end": 23320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 23241,
											"end": 23320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23241,
											"end": 23320,
											"name": "tag",
											"source": 7,
											"value": "839"
										},
										{
											"begin": 23241,
											"end": 23320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23203,
											"end": 23322,
											"name": "tag",
											"source": 7,
											"value": "838"
										},
										{
											"begin": 23203,
											"end": 23322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23361,
											"end": 23362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23386,
											"end": 23450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "840"
										},
										{
											"begin": 23442,
											"end": 23449,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23433,
											"end": 23439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23422,
											"end": 23431,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 23418,
											"end": 23440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23386,
											"end": 23450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 23386,
											"end": 23450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23386,
											"end": 23450,
											"name": "tag",
											"source": 7,
											"value": "840"
										},
										{
											"begin": 23386,
											"end": 23450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23376,
											"end": 23450,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23376,
											"end": 23450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23332,
											"end": 23460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23467,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23116,
											"end": 23467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23473,
											"end": 23571,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 23473,
											"end": 23571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23524,
											"end": 23530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23558,
											"end": 23563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23552,
											"end": 23564,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23542,
											"end": 23564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23542,
											"end": 23564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23473,
											"end": 23571,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23473,
											"end": 23571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23473,
											"end": 23571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23473,
											"end": 23571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23577,
											"end": 23745,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 23577,
											"end": 23745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23660,
											"end": 23671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23694,
											"end": 23700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23689,
											"end": 23692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23682,
											"end": 23701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23734,
											"end": 23738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23729,
											"end": 23732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23725,
											"end": 23739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23710,
											"end": 23739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23710,
											"end": 23739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23577,
											"end": 23745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23577,
											"end": 23745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23577,
											"end": 23745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23577,
											"end": 23745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23577,
											"end": 23745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23751,
											"end": 23997,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 23751,
											"end": 23997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23832,
											"end": 23833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "tag",
											"source": 7,
											"value": "844"
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23856,
											"end": 23862,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23853,
											"end": 23854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23850,
											"end": 23863,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "846"
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23941,
											"end": 23942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 23936,
											"end": 23939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23932,
											"end": 23943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23926,
											"end": 23944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23922,
											"end": 23923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23917,
											"end": 23920,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23913,
											"end": 23924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23906,
											"end": 23945,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23878,
											"end": 23880,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23875,
											"end": 23876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23871,
											"end": 23881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23866,
											"end": 23881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23866,
											"end": 23881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "844"
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "tag",
											"source": 7,
											"value": "846"
										},
										{
											"begin": 23842,
											"end": 23955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23989,
											"end": 23990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23980,
											"end": 23986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23975,
											"end": 23978,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23971,
											"end": 23987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23964,
											"end": 23991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23813,
											"end": 23997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23751,
											"end": 23997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23751,
											"end": 23997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23751,
											"end": 23997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23751,
											"end": 23997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24003,
											"end": 24376,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 24003,
											"end": 24376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24089,
											"end": 24092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24117,
											"end": 24155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "848"
										},
										{
											"begin": 24149,
											"end": 24154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24117,
											"end": 24155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 24117,
											"end": 24155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24117,
											"end": 24155,
											"name": "tag",
											"source": 7,
											"value": "848"
										},
										{
											"begin": 24117,
											"end": 24155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24171,
											"end": 24241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "849"
										},
										{
											"begin": 24234,
											"end": 24240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24229,
											"end": 24232,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24171,
											"end": 24241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 24171,
											"end": 24241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24171,
											"end": 24241,
											"name": "tag",
											"source": 7,
											"value": "849"
										},
										{
											"begin": 24171,
											"end": 24241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24164,
											"end": 24241,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 24164,
											"end": 24241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24250,
											"end": 24315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "850"
										},
										{
											"begin": 24308,
											"end": 24314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24303,
											"end": 24306,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24296,
											"end": 24300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24289,
											"end": 24294,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24285,
											"end": 24301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24250,
											"end": 24315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 24250,
											"end": 24315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24250,
											"end": 24315,
											"name": "tag",
											"source": 7,
											"value": "850"
										},
										{
											"begin": 24250,
											"end": 24315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24340,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "851"
										},
										{
											"begin": 24362,
											"end": 24368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24340,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 24340,
											"end": 24369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24340,
											"end": 24369,
											"name": "tag",
											"source": 7,
											"value": "851"
										},
										{
											"begin": 24340,
											"end": 24369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24335,
											"end": 24338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24331,
											"end": 24370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24324,
											"end": 24370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24324,
											"end": 24370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24093,
											"end": 24376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24003,
											"end": 24376,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24003,
											"end": 24376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24003,
											"end": 24376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24003,
											"end": 24376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24003,
											"end": 24376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24577,
											"end": 24581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24615,
											"end": 24618,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 24604,
											"end": 24613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24600,
											"end": 24619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24592,
											"end": 24619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24592,
											"end": 24619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24629,
											"end": 24700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "853"
										},
										{
											"begin": 24697,
											"end": 24698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24686,
											"end": 24695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24682,
											"end": 24699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24673,
											"end": 24679,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 24629,
											"end": 24700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 24629,
											"end": 24700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24629,
											"end": 24700,
											"name": "tag",
											"source": 7,
											"value": "853"
										},
										{
											"begin": 24629,
											"end": 24700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24710,
											"end": 24782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "854"
										},
										{
											"begin": 24778,
											"end": 24780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24767,
											"end": 24776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24763,
											"end": 24781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24754,
											"end": 24760,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24710,
											"end": 24782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 24710,
											"end": 24782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24710,
											"end": 24782,
											"name": "tag",
											"source": 7,
											"value": "854"
										},
										{
											"begin": 24710,
											"end": 24782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24792,
											"end": 24864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "855"
										},
										{
											"begin": 24860,
											"end": 24862,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24849,
											"end": 24858,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24845,
											"end": 24863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24836,
											"end": 24842,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24792,
											"end": 24864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 24792,
											"end": 24864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24792,
											"end": 24864,
											"name": "tag",
											"source": 7,
											"value": "855"
										},
										{
											"begin": 24792,
											"end": 24864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24911,
											"end": 24920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24905,
											"end": 24909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24901,
											"end": 24921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 24896,
											"end": 24898,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 24885,
											"end": 24894,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24881,
											"end": 24899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24874,
											"end": 24922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24939,
											"end": 25015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "856"
										},
										{
											"begin": 25010,
											"end": 25014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25001,
											"end": 25007,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24939,
											"end": 25015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 24939,
											"end": 25015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24939,
											"end": 25015,
											"name": "tag",
											"source": 7,
											"value": "856"
										},
										{
											"begin": 24939,
											"end": 25015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24931,
											"end": 25015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24931,
											"end": 25015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24382,
											"end": 25022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25251,
											"end": 25255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25289,
											"end": 25292,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 25278,
											"end": 25287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25274,
											"end": 25293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25266,
											"end": 25293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25266,
											"end": 25293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25303,
											"end": 25374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "858"
										},
										{
											"begin": 25371,
											"end": 25372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25360,
											"end": 25369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25356,
											"end": 25373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25347,
											"end": 25353,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 25303,
											"end": 25374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 25303,
											"end": 25374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25303,
											"end": 25374,
											"name": "tag",
											"source": 7,
											"value": "858"
										},
										{
											"begin": 25303,
											"end": 25374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25384,
											"end": 25456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "859"
										},
										{
											"begin": 25452,
											"end": 25454,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25441,
											"end": 25450,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25437,
											"end": 25455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25428,
											"end": 25434,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 25384,
											"end": 25456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 25384,
											"end": 25456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25384,
											"end": 25456,
											"name": "tag",
											"source": 7,
											"value": "859"
										},
										{
											"begin": 25384,
											"end": 25456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25466,
											"end": 25538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "860"
										},
										{
											"begin": 25534,
											"end": 25536,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25523,
											"end": 25532,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25519,
											"end": 25537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25510,
											"end": 25516,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 25466,
											"end": 25538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 25466,
											"end": 25538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25466,
											"end": 25538,
											"name": "tag",
											"source": 7,
											"value": "860"
										},
										{
											"begin": 25466,
											"end": 25538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25548,
											"end": 25620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "861"
										},
										{
											"begin": 25616,
											"end": 25618,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 25605,
											"end": 25614,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25601,
											"end": 25619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25592,
											"end": 25598,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 25548,
											"end": 25620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 25548,
											"end": 25620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25548,
											"end": 25620,
											"name": "tag",
											"source": 7,
											"value": "861"
										},
										{
											"begin": 25548,
											"end": 25620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25668,
											"end": 25677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25662,
											"end": 25666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25658,
											"end": 25678,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 25652,
											"end": 25655,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 25641,
											"end": 25650,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25637,
											"end": 25656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25630,
											"end": 25679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 25696,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "862"
										},
										{
											"begin": 25767,
											"end": 25771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25758,
											"end": 25764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 25696,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 25696,
											"end": 25772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25696,
											"end": 25772,
											"name": "tag",
											"source": 7,
											"value": "862"
										},
										{
											"begin": 25696,
											"end": 25772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25688,
											"end": 25772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25688,
											"end": 25772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25028,
											"end": 25779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25785,
											"end": 26105,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 25785,
											"end": 26105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25900,
											"end": 25904,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25938,
											"end": 25940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25927,
											"end": 25936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25923,
											"end": 25941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25915,
											"end": 25941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25915,
											"end": 25941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25951,
											"end": 26022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "864"
										},
										{
											"begin": 26019,
											"end": 26020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26008,
											"end": 26017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26004,
											"end": 26021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25995,
											"end": 26001,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 25951,
											"end": 26022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 25951,
											"end": 26022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25951,
											"end": 26022,
											"name": "tag",
											"source": 7,
											"value": "864"
										},
										{
											"begin": 25951,
											"end": 26022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26032,
											"end": 26098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "865"
										},
										{
											"begin": 26094,
											"end": 26096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 26083,
											"end": 26092,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26079,
											"end": 26097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26070,
											"end": 26076,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 26032,
											"end": 26098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 26032,
											"end": 26098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26032,
											"end": 26098,
											"name": "tag",
											"source": 7,
											"value": "865"
										},
										{
											"begin": 26032,
											"end": 26098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25785,
											"end": 26105,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 25785,
											"end": 26105,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 25785,
											"end": 26105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25785,
											"end": 26105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25785,
											"end": 26105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25785,
											"end": 26105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26278,
											"end": 26282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26316,
											"end": 26318,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 26305,
											"end": 26314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26301,
											"end": 26319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26293,
											"end": 26319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26293,
											"end": 26319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26329,
											"end": 26400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "867"
										},
										{
											"begin": 26397,
											"end": 26398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26386,
											"end": 26395,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26382,
											"end": 26399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26373,
											"end": 26379,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 26329,
											"end": 26400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 26329,
											"end": 26400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26329,
											"end": 26400,
											"name": "tag",
											"source": 7,
											"value": "867"
										},
										{
											"begin": 26329,
											"end": 26400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26410,
											"end": 26482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 26478,
											"end": 26480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 26467,
											"end": 26476,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26463,
											"end": 26481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26454,
											"end": 26460,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 26410,
											"end": 26482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 26410,
											"end": 26482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26410,
											"end": 26482,
											"name": "tag",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 26410,
											"end": 26482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26529,
											"end": 26538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26523,
											"end": 26527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26519,
											"end": 26539,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 26514,
											"end": 26516,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 26503,
											"end": 26512,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26499,
											"end": 26517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26492,
											"end": 26540,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26557,
											"end": 26633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "869"
										},
										{
											"begin": 26628,
											"end": 26632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26619,
											"end": 26625,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 26557,
											"end": 26633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 26557,
											"end": 26633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26557,
											"end": 26633,
											"name": "tag",
											"source": 7,
											"value": "869"
										},
										{
											"begin": 26557,
											"end": 26633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26549,
											"end": 26633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26549,
											"end": 26633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26111,
											"end": 26640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26646,
											"end": 27303,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 26646,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26731,
											"end": 26737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26739,
											"end": 26745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 26747,
											"end": 26753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26796,
											"end": 26798,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 26784,
											"end": 26793,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 26775,
											"end": 26782,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 26771,
											"end": 26794,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 26767,
											"end": 26799,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 26764,
											"end": 26883,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 26764,
											"end": 26883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "871"
										},
										{
											"begin": 26764,
											"end": 26883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 26802,
											"end": 26881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "872"
										},
										{
											"begin": 26802,
											"end": 26881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 26802,
											"end": 26881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26802,
											"end": 26881,
											"name": "tag",
											"source": 7,
											"value": "872"
										},
										{
											"begin": 26802,
											"end": 26881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26764,
											"end": 26883,
											"name": "tag",
											"source": 7,
											"value": "871"
										},
										{
											"begin": 26764,
											"end": 26883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26922,
											"end": 26923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26947,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "873"
										},
										{
											"begin": 27003,
											"end": 27010,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 26994,
											"end": 27000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26983,
											"end": 26992,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 26979,
											"end": 27001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26947,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 26947,
											"end": 27011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26947,
											"end": 27011,
											"name": "tag",
											"source": 7,
											"value": "873"
										},
										{
											"begin": 26947,
											"end": 27011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26937,
											"end": 27011,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 26937,
											"end": 27011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26893,
											"end": 27021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27060,
											"end": 27062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27086,
											"end": 27150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "874"
										},
										{
											"begin": 27142,
											"end": 27149,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 27133,
											"end": 27139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27122,
											"end": 27131,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 27118,
											"end": 27140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27086,
											"end": 27150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 27086,
											"end": 27150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27086,
											"end": 27150,
											"name": "tag",
											"source": 7,
											"value": "874"
										},
										{
											"begin": 27086,
											"end": 27150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27076,
											"end": 27150,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 27076,
											"end": 27150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27031,
											"end": 27160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27199,
											"end": 27201,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27225,
											"end": 27286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "875"
										},
										{
											"begin": 27278,
											"end": 27285,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 27269,
											"end": 27275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27258,
											"end": 27267,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 27254,
											"end": 27276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27225,
											"end": 27286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 27225,
											"end": 27286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27225,
											"end": 27286,
											"name": "tag",
											"source": 7,
											"value": "875"
										},
										{
											"begin": 27225,
											"end": 27286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27215,
											"end": 27286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27215,
											"end": 27286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27170,
											"end": 27296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26646,
											"end": 27303,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 26646,
											"end": 27303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26646,
											"end": 27303,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 26646,
											"end": 27303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26646,
											"end": 27303,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 26646,
											"end": 27303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27309,
											"end": 27673,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 27309,
											"end": 27673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27446,
											"end": 27450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27484,
											"end": 27486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27473,
											"end": 27482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27469,
											"end": 27487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27461,
											"end": 27487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27461,
											"end": 27487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27497,
											"end": 27576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "877"
										},
										{
											"begin": 27573,
											"end": 27574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27562,
											"end": 27571,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27558,
											"end": 27575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27549,
											"end": 27555,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 27497,
											"end": 27576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 27497,
											"end": 27576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27497,
											"end": 27576,
											"name": "tag",
											"source": 7,
											"value": "877"
										},
										{
											"begin": 27497,
											"end": 27576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27586,
											"end": 27666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "878"
										},
										{
											"begin": 27662,
											"end": 27664,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27651,
											"end": 27660,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27647,
											"end": 27665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27638,
											"end": 27644,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 27586,
											"end": 27666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 27586,
											"end": 27666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27586,
											"end": 27666,
											"name": "tag",
											"source": 7,
											"value": "878"
										},
										{
											"begin": 27586,
											"end": 27666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27309,
											"end": 27673,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 27309,
											"end": 27673,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 27309,
											"end": 27673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27309,
											"end": 27673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27309,
											"end": 27673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27309,
											"end": 27673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27679,
											"end": 27820,
											"name": "tag",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 27679,
											"end": 27820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27735,
											"end": 27740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27766,
											"end": 27772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27760,
											"end": 27773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27751,
											"end": 27773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27751,
											"end": 27773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27782,
											"end": 27814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "880"
										},
										{
											"begin": 27808,
											"end": 27813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27782,
											"end": 27814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 27782,
											"end": 27814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27782,
											"end": 27814,
											"name": "tag",
											"source": 7,
											"value": "880"
										},
										{
											"begin": 27782,
											"end": 27814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27679,
											"end": 27820,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 27679,
											"end": 27820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27679,
											"end": 27820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27679,
											"end": 27820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27679,
											"end": 27820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27826,
											"end": 28175,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 27826,
											"end": 28175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27895,
											"end": 27901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27944,
											"end": 27946,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27932,
											"end": 27941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27923,
											"end": 27930,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 27919,
											"end": 27942,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 27915,
											"end": 27947,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 27912,
											"end": 28031,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 27912,
											"end": 28031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "882"
										},
										{
											"begin": 27912,
											"end": 28031,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 27950,
											"end": 28029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "883"
										},
										{
											"begin": 27950,
											"end": 28029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 27950,
											"end": 28029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27950,
											"end": 28029,
											"name": "tag",
											"source": 7,
											"value": "883"
										},
										{
											"begin": 27950,
											"end": 28029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27912,
											"end": 28031,
											"name": "tag",
											"source": 7,
											"value": "882"
										},
										{
											"begin": 27912,
											"end": 28031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28070,
											"end": 28071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 28158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "884"
										},
										{
											"begin": 28150,
											"end": 28157,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 28141,
											"end": 28147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28130,
											"end": 28139,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 28126,
											"end": 28148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28095,
											"end": 28158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 28095,
											"end": 28158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28095,
											"end": 28158,
											"name": "tag",
											"source": 7,
											"value": "884"
										},
										{
											"begin": 28095,
											"end": 28158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28085,
											"end": 28158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 28085,
											"end": 28158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28041,
											"end": 28168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27826,
											"end": 28175,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 27826,
											"end": 28175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27826,
											"end": 28175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27826,
											"end": 28175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27826,
											"end": 28175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28181,
											"end": 28361,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 28181,
											"end": 28361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28229,
											"end": 28306,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28226,
											"end": 28227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28219,
											"end": 28307,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28326,
											"end": 28330,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 28323,
											"end": 28324,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 28316,
											"end": 28331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28350,
											"end": 28354,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 28347,
											"end": 28348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28340,
											"end": 28355,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"nestable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_nestMint(address,uint256,uint256,bytes)": "eb043606",
							"_safeMint(address,uint256)": "b3e1c718",
							"acceptChild(uint256,uint256,address,uint256)": "e97ceaa8",
							"addChild(uint256,uint256,bytes)": "635490cc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burn(uint256,uint256)": "b390c0ab",
							"childIsInActive(address,uint256)": "4182e4a3",
							"childOf(uint256,uint256)": "2f32f937",
							"childrenOf(uint256)": "6f19951c",
							"directOwnerOf(uint256)": "fb25fb7a",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"nestTransferFrom(address,address,uint256,uint256,bytes)": "064c0a3a",
							"ownerOf(uint256)": "6352211e",
							"pendingChildOf(uint256,uint256)": "a898e364",
							"pendingChildrenOf(uint256)": "44ec9344",
							"rejectAllChildren(uint256,uint256)": "97961336",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": "defa80c3",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ChildAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChildIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotaValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveCallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721NotApprovedOrOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdZeroForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxPendingChildrenReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"MaxRecursiveBurnsReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToNonNestableImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NestableTooDeep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NestableTransferToDescendant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NestableTransferToNonNestableImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NestableTransferToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedOrDirectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingChildIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedChildId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedNumberOfChildren\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllChildrenRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fromPending\",\"type\":\"bool\"}],\"name\":\"ChildTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NestTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_nestMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"acceptChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"addChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxChildrenBurns\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"childIsInActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"childOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"childrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"directOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"nestTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pendingChildOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"pendingChildrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6059.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRejections\",\"type\":\"uint256\"}],\"name\":\"rejectAllChildren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"RMRK team\",\"details\":\"This contract is hierarchy agnostic and can support an arbitrary number of nested levels up and down, as long as  gas limits allow it.\",\"events\":{\"AllChildrenRejected(uint256)\":{\"details\":\"Emitted when a token removes all a child tokens from its pending array.\",\"params\":{\"tokenId\":\"ID of the token that rejected all of the pending children\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a parent token accepts a token from its pending array, migrating it to the active array.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the newly accepted child token in the parent token's active children array\",\"tokenId\":\"ID of the token that accepted a new child token\"}},\"ChildProposed(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a child NFT is added to a token's pending array.\",\"params\":{\"childAddress\":\"Address of the proposed child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the proposed child token in the parent token's pending children array\",\"tokenId\":\"ID of the token that received a new pending child token\"}},\"ChildTransferred(uint256,uint256,address,uint256,bool)\":{\"details\":\"Emitted when a token transfers a child from itself, transferring ownership.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of a child in the array from which it is being transferred\",\"fromPending\":\"A boolean value signifying whether the token was in the pending child tokens array (`true`) or  in the active child tokens array (`false`)\",\"tokenId\":\"ID of the token that transferred a child token\"}},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\",\"params\":{\"from\":\"Address of the previous immediate owner, which is a smart contract if the token was nested.\",\"fromTokenId\":\"ID of the previous parent token. If the token was not nested before, the value MUST be `0`\",\"to\":\"Address of the new immediate owner, which is a smart contract if the token is being nested.\",\"toTokenId\":\"ID of the new parent token. If the token is not being nested, the value MUST be `0`\",\"tokenId\":\"ID of the token being transferred\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"_nestMint(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"Additional data with no specified format, sent in the addChild call\",\"destinationId\":\"ID of the token into which to mint the new child token\",\"to\":\"Address of the collection smart contract of the token into which to mint the child token\",\"tokenId\":\"ID of the token to mint\"}},\"_safeMint(address,uint256)\":{\"details\":\"Requirements:  - `tokenId` must not exist.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.\",\"params\":{\"to\":\"Address to which to safely mint the gven token\",\"tokenId\":\"ID of the token to mint to the specified address\"}},\"acceptChild(uint256,uint256,address,uint256)\":{\"details\":\"This moves the child token from parent token's pending child tokens array into the active child tokens  array.\",\"params\":{\"childAddress\":\"Address of the collection smart contract of the child token expected to be located at the  specified index of the given parent token's pending children array\",\"childId\":\"ID of the child token expected to be located at the specified index of the given parent token's  pending children array\",\"childIndex\":\"Index of a child tokem in the given parent's pending children array\",\"parentId\":\"ID of the parent token for which the child token is being accepted\"}},\"addChild(uint256,uint256,bytes)\":{\"details\":\"This adds the iichild token into the given parent token's pending child tokens array.You MUST NOT call this method directly. To add a a child to an NFT you must use either  `nestTransfer`, `nestMint` or `transferChild` to the NFT.Requirements:  - `ownerOf` on the child contract must resolve to the called contract.  - The pending array of the parent contract must not be full.\",\"params\":{\"childId\":\"ID of the new proposed child token\",\"data\":\"Additional data with no specified format\",\"parentId\":\"ID of the parent token to receive the new child token\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"ID of the token to burn\"}},\"burn(uint256,uint256)\":{\"details\":\"When a token is burned, its children are recursively burned as well.The approvals are cleared when the token is burned.Requirements:  - `tokenId` must exist.Emits a {Transfer} event.\",\"params\":{\"maxChildrenBurns\":\"Maximum children to recursively burn\",\"tokenId\":\"ID of the token to burn\"},\"returns\":{\"_0\":\"uint256 The number of recursive burns it took to burn all of the children\"}},\"childIsInActive(address,uint256)\":{\"params\":{\"childAddress\":\"Address of the given token's collection smart contract\",\"childId\":\"ID of the child token being checked\"},\"returns\":{\"_0\":\"bool A boolean value signifying whether the given child token is included in an active child tokens array  of a token (`true`) or not (`false`)\"}},\"childOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's active child tokens array\",\"parentId\":\"ID of the parent token for which the child is being retrieved\"},\"returns\":{\"_0\":\"struct A Child struct containing data about the specified child\"}},\"childrenOf(uint256)\":{\"details\":\"Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the active child tokens\"},\"returns\":{\"_0\":\"struct[] An array of Child structs containing the parent token's active child tokens\"}},\"directOwnerOf(uint256)\":{\"details\":\"In the event the NFT is owned by an externally owned account, `tokenId` will be `0`.\",\"params\":{\"tokenId\":\"ID of the token for which the immediate owner is being retrieved\"},\"returns\":{\"_0\":\"address Address of the immediate owner. If the token is owned by an externally owned account, its address  will be returned. If the token is owned by another token, the parent token's collection smart contract address  is returned\",\"_1\":\"uint256 Token ID of the immediate owner. If the immediate owner is an externally owned account, the value  should be `0`\",\"_2\":\"bool A boolean value signifying whether the immediate owner is a token (`true`) or not (`false`)\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"The destination token MUST NOT be a child token of the token being transferred or one of its downstream  child tokens.\",\"params\":{\"destinationId\":\"ID of the token to receive the token being transferred\",\"from\":\"Address of the direct owner of the token to be transferred\",\"to\":\"Address of the receiving token's collection smart contract\",\"tokenId\":\"ID of the token being transferred\"}},\"ownerOf(uint256)\":{\"details\":\"Root owner is always the externally owned account.If the given token is owned by another token, it will recursively query the parent tokens until reaching the  root owner.\",\"params\":{\"tokenId\":\"ID of the token for which the root owner is being retrieved\"},\"returns\":{\"_0\":\"address Address of the root owner of the given token\"}},\"pendingChildOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's pending child tokens array\",\"parentId\":\"ID of the parent token for which the pending child token is being retrieved\"},\"returns\":{\"_0\":\"struct A Child struct containting data about the specified child\"}},\"pendingChildrenOf(uint256)\":{\"details\":\"Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the pending child tokens\"},\"returns\":{\"_0\":\"struct[] An array of Child structs containing the parent token's pending child tokens\"}},\"rejectAllChildren(uint256,uint256)\":{\"details\":\"Removes the children from the pending array mapping.This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the  rootOwner of the previous parent.\",\"params\":{\"tokenId\":\"ID of the parent token for which to reject all of the pending tokens\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"params\":{\"childAddress\":\"Address of the child token's collection smart contract.\",\"childId\":\"ID of the child token in its own collection smart contract.\",\"childIndex\":\"Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)\",\"data\":\"Additional data with no specified format, sent in call to `_to`\",\"destinationId\":\"ID of the token to receive this child token (MUST be 0 if the destination is not a token)\",\"isPending\":\"A boolean value indicating whether the child token being transferred is in the pending array of the  parent token (`true`) or in the active array (`false`)\",\"to\":\"Address to which to transfer the token to\",\"tokenId\":\"ID of the parent token from which the child token is being transferred\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"NestableToken\",\"version\":1},\"userdoc\":{\"events\":{\"AllChildrenRejected(uint256)\":{\"notice\":\"Used to notify listeners that all pending child tokens of a given token have been rejected.\"},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new child token was accepted by the parent token.\"},\"ChildProposed(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new token has been added to a given token's pending children array.\"},\"ChildTransferred(uint256,uint256,address,uint256,bool)\":{\"notice\":\"Used to notify listeners a child token has been transferred from parent token.\"},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used to notify listeners that the token is being transferred.\"}},\"kind\":\"user\",\"methods\":{\"_nestMint(address,uint256,uint256,bytes)\":{\"notice\":\"Used to mint a child token to a given parent token.\"},\"_safeMint(address,uint256)\":{\"notice\":\"Used to safely mint a token to a specified address.\"},\"acceptChild(uint256,uint256,address,uint256)\":{\"notice\":\"@notice Used to accept a pending child token for a given parent token.\"},\"addChild(uint256,uint256,bytes)\":{\"notice\":\"Used to add a child token to a given parent token.\"},\"burn(uint256)\":{\"notice\":\"Used to burn a given token.\"},\"burn(uint256,uint256)\":{\"notice\":\"Used to burn a token.\"},\"childIsInActive(address,uint256)\":{\"notice\":\"Used to verify that the given child tokwn is included in an active array of a token.\"},\"childOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific active child token for a given parent token.\"},\"childrenOf(uint256)\":{\"notice\":\"Used to retrieve the active child tokens of a given parent token.\"},\"directOwnerOf(uint256)\":{\"notice\":\"Used to retrieve the immediate owner of the given token.\"},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Used to transfer the token into another token.\"},\"ownerOf(uint256)\":{\"notice\":\"Used to retrieve the root owner of the given token.\"},\"pendingChildOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific pending child token from a given parent token.\"},\"pendingChildrenOf(uint256)\":{\"notice\":\"Used to retrieve the pending child tokens of a given parent token.\"},\"rejectAllChildren(uint256,uint256)\":{\"notice\":\"Used to reject all pending children of a given parent token.\"},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Used to transfer a child token from a given parent token.\"}},\"notice\":\"Smart contract of the Nestable module.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"nestable.sol\":\"NestableToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"nestable.sol\":{\"keccak256\":\"0xc1109db501dde8f7aa5e3c15e592419a3ea254cca8fe0e353cdadc843d542f6d\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://3734ea4e89f3dfaa7500b665068c5fd7c2d83a563b472087a03d15558c481e18\",\"dweb:/ipfs/QmdSDNsHTT8ogYQxeFsVR5v6Krpdm1mJmbsoDKBCzWhxzV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "nestable.sol:NestableToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 816,
								"contract": "nestable.sol:NestableToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_address))"
							},
							{
								"astId": 822,
								"contract": "nestable.sol:NestableToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 827,
								"contract": "nestable.sol:NestableToken",
								"label": "_directOwners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(DirectOwner)533_storage)"
							},
							{
								"astId": 833,
								"contract": "nestable.sol:NestableToken",
								"label": "_activeChildren",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_array(t_struct(Child)592_storage)dyn_storage)"
							},
							{
								"astId": 839,
								"contract": "nestable.sol:NestableToken",
								"label": "_pendingChildren",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_array(t_struct(Child)592_storage)dyn_storage)"
							},
							{
								"astId": 845,
								"contract": "nestable.sol:NestableToken",
								"label": "_childIsInActive",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Child)592_storage)dyn_storage": {
								"base": "t_struct(Child)592_storage",
								"encoding": "dynamic_array",
								"label": "struct IERC6059.Child[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Child)592_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC6059.Child[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Child)592_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_address))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_address)"
							},
							"t_mapping(t_uint256,t_struct(DirectOwner)533_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC6059.DirectOwner)",
								"numberOfBytes": "32",
								"value": "t_struct(DirectOwner)533_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Child)592_storage": {
								"encoding": "inplace",
								"label": "struct IERC6059.Child",
								"members": [
									{
										"astId": 589,
										"contract": "nestable.sol:NestableToken",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 591,
										"contract": "nestable.sol:NestableToken",
										"label": "contractAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(DirectOwner)533_storage": {
								"encoding": "inplace",
								"label": "struct IERC6059.DirectOwner",
								"members": [
									{
										"astId": 530,
										"contract": "nestable.sol:NestableToken",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 532,
										"contract": "nestable.sol:NestableToken",
										"label": "ownerAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"AllChildrenRejected(uint256)": {
								"notice": "Used to notify listeners that all pending child tokens of a given token have been rejected."
							},
							"ChildAccepted(uint256,uint256,address,uint256)": {
								"notice": "Used to notify listeners that a new child token was accepted by the parent token."
							},
							"ChildProposed(uint256,uint256,address,uint256)": {
								"notice": "Used to notify listeners that a new token has been added to a given token's pending children array."
							},
							"ChildTransferred(uint256,uint256,address,uint256,bool)": {
								"notice": "Used to notify listeners a child token has been transferred from parent token."
							},
							"NestTransfer(address,address,uint256,uint256,uint256)": {
								"notice": "Used to notify listeners that the token is being transferred."
							}
						},
						"kind": "user",
						"methods": {
							"_nestMint(address,uint256,uint256,bytes)": {
								"notice": "Used to mint a child token to a given parent token."
							},
							"_safeMint(address,uint256)": {
								"notice": "Used to safely mint a token to a specified address."
							},
							"acceptChild(uint256,uint256,address,uint256)": {
								"notice": "@notice Used to accept a pending child token for a given parent token."
							},
							"addChild(uint256,uint256,bytes)": {
								"notice": "Used to add a child token to a given parent token."
							},
							"burn(uint256)": {
								"notice": "Used to burn a given token."
							},
							"burn(uint256,uint256)": {
								"notice": "Used to burn a token."
							},
							"childIsInActive(address,uint256)": {
								"notice": "Used to verify that the given child tokwn is included in an active array of a token."
							},
							"childOf(uint256,uint256)": {
								"notice": "Used to retrieve a specific active child token for a given parent token."
							},
							"childrenOf(uint256)": {
								"notice": "Used to retrieve the active child tokens of a given parent token."
							},
							"directOwnerOf(uint256)": {
								"notice": "Used to retrieve the immediate owner of the given token."
							},
							"nestTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Used to transfer the token into another token."
							},
							"ownerOf(uint256)": {
								"notice": "Used to retrieve the root owner of the given token."
							},
							"pendingChildOf(uint256,uint256)": {
								"notice": "Used to retrieve a specific pending child token from a given parent token."
							},
							"pendingChildrenOf(uint256)": {
								"notice": "Used to retrieve the pending child tokens of a given parent token."
							},
							"rejectAllChildren(uint256,uint256)": {
								"notice": "Used to reject all pending children of a given parent token."
							},
							"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
								"notice": "Used to transfer a child token from a given parent token."
							}
						},
						"notice": "Smart contract of the Nestable module.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> nestable.sol:1162:9:\n     |\n1162 |         bytes memory data\n     |         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 47069,
					"file": "nestable.sol",
					"start": 47052
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							524
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 525,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 524,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								524
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1835:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1849:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1878:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:0"
									},
									"scope": 115,
									"src": "1809:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2632:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2646:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2658:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:0"
									},
									"scope": 115,
									"src": "2606:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3463:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:0"
									},
									"scope": 115,
									"src": "3427:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3981:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3993:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:0"
									},
									"scope": 115,
									"src": "3964:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4366:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:0"
									},
									"scope": 115,
									"src": "4339:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4579:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4619:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:0"
									},
									"scope": 115,
									"src": "4558:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4812:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4827:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4868:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:0"
									},
									"scope": 115,
									"src": "4786:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4626:0",
							"usedErrors": [],
							"usedEvents": [
								14,
								23,
								32
							]
						}
					],
					"src": "108:4769:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							524
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								524
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": [],
							"usedEvents": [
								14,
								23,
								32
							]
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							490
						]
					},
					"id": 491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 490,
							"linearizedBaseContracts": [
								490
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1478:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1702:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1695:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1432:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1472:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:3"
									},
									"scope": 490,
									"src": "1412:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2718:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2761:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2813:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2831:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2853:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2882:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2666:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2693:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:3"
									},
									"scope": 490,
									"src": "2647:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "3790:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3829:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3837:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "3807:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 228,
												"nodeType": "Return",
												"src": "3800:79:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3723:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3739:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:3"
									},
									"scope": 490,
									"src": "3701:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "4255:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "4294:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4302:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4311:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "4272:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 241,
												"id": 248,
												"nodeType": "Return",
												"src": "4265:59:3"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "4139:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "4163:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "4190:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:3"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "4241:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:3"
									},
									"scope": 490,
									"src": "4108:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "4806:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "4845:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4853:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 265,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4859:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 262,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "4823:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 268,
												"nodeType": "Return",
												"src": "4816:94:3"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4724:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4740:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4759:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4792:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:3"
									},
									"scope": 490,
									"src": "4693:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "5344:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 287,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		],
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 285,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "5387:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:3"
											},
											{
												"assignments": [
													296,
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "5446:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 295,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "5460:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 297,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "5513:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 299,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "5487:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "5506:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "5562:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5570:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 309,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5579:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 310,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "5591:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "5535:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 283,
												"id": 312,
												"nodeType": "Return",
												"src": "5528:76:3"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5205:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5229:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5256:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5279:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:3"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5330:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:3"
									},
									"scope": 490,
									"src": "5165:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "5888:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5924:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5932:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 324,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															331,
															360
														],
														"referencedDeclaration": 360,
														"src": "5905:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 323,
												"id": 329,
												"nodeType": "Return",
												"src": "5898:80:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5816:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5832:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5874:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:3"
									},
									"scope": 490,
									"src": "5788:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "6327:168:3",
										"statements": [
											{
												"assignments": [
													344,
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "6338:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "6352:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 345,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"arguments": [
														{
															"id": 349,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6397:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 347,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6379:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6446:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6454:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 355,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6463:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 356,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "6475:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 352,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "6419:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 342,
												"id": 358,
												"nodeType": "Return",
												"src": "6412:76:3"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6206:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6230:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6257:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6313:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:3"
									},
									"scope": 490,
									"src": "6169:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "6771:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6809:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6817:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 370,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															406
														],
														"referencedDeclaration": 406,
														"src": "6788:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 375,
												"nodeType": "Return",
												"src": "6781:84:3"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6704:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6720:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:3"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6757:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:3"
									},
									"scope": 490,
									"src": "6674:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "7213:170:3",
										"statements": [
											{
												"assignments": [
													390,
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "7224:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 389,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "7238:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 391,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"id": 395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7285:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 393,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7265:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7334:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7342:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 401,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7351:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 402,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7363:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 398,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "7307:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 388,
												"id": 404,
												"nodeType": "Return",
												"src": "7300:76:3"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7121:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7148:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7199:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:3"
									},
									"scope": 490,
									"src": "7058:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7865:434:3",
										"statements": [
											{
												"condition": {
													"id": 420,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "7879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "8235:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 438,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "8257:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 439,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "8269:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 437,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "8249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:3"
														}
													]
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "7875:418:3",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "7888:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 421,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "7906:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 433,
															"nodeType": "IfStatement",
															"src": "7902:286:3",
															"trueBody": {
																"id": 432,
																"nodeType": "Block",
																"src": "7930:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 427,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 409,
																							"src": "8132:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 426,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "8121:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 428,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 425,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 431,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 434,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "8208:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 419,
															"id": 435,
															"nodeType": "Return",
															"src": "8201:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7716:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7740:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7762:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7795:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7851:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:3"
									},
									"scope": 490,
									"src": "7671:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "8680:135:3",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "8694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "8751:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 462,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "8773:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 463,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "8785:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 461,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "8765:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:3"
														}
													]
												},
												"id": 467,
												"nodeType": "IfStatement",
												"src": "8690:119:3",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "8703:42:3",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "8724:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "8717:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8555:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8577:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8666:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:3"
									},
									"scope": 490,
									"src": "8520:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "8904:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 476,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "8980:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "9310:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "9331:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 482,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 485,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:3"
														}
													]
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "8976:379:3",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "9003:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:3",
																"nodeType": "YulBlock",
																"src": "9161:133:3",
																"statements": [
																	{
																		"nativeSrc": "9179:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:3"
																			},
																			"nativeSrc": "9202:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:3",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:3",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:3"
																					},
																					"nativeSrc": "9243:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:3"
																			},
																			"nativeSrc": "9236:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:3"
																		},
																		"nativeSrc": "9236:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 471,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 471,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:3",
																	"valueSize": 1
																}
															],
															"id": 480,
															"nodeType": "InlineAssembly",
															"src": "9152:142:3"
														}
													]
												}
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8838:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8863:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:3"
									},
									"scope": 490,
									"src": "8821:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 491,
							"src": "194:9169:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							512
						]
					},
					"id": 513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 493,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 498,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 497,
												"id": 500,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 512,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 507,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 506,
												"id": 509,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 512,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 513,
							"src": "608:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							524
						]
					},
					"id": 525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 515,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 524,
							"linearizedBaseContracts": [
								524
							],
							"name": "IERC165",
							"nameLocation": "415:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "801:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 517,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:5"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "844:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:5"
									},
									"scope": 524,
									"src": "774:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 525,
							"src": "405:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:5"
				},
				"id": 5
			},
			"nestable.sol": {
				"ast": {
					"absolutePath": "nestable.sol",
					"exportedSymbols": {
						"Address": [
							490
						],
						"ChildAlreadyExists": [
							737
						],
						"ChildIndexOutOfRange": [
							739
						],
						"Context": [
							512
						],
						"ERC721AddressZeroIsNotaValidOwner": [
							741
						],
						"ERC721ApprovalToCurrentOwner": [
							743
						],
						"ERC721ApproveCallerIsNotOwnerNorApprovedForAll": [
							745
						],
						"ERC721ApproveToCaller": [
							747
						],
						"ERC721InvalidTokenId": [
							749
						],
						"ERC721MintToTheZeroAddress": [
							751
						],
						"ERC721NotApprovedOrOwner": [
							753
						],
						"ERC721TokenAlreadyMinted": [
							755
						],
						"ERC721TransferFromIncorrectOwner": [
							757
						],
						"ERC721TransferToNonReceiverImplementer": [
							759
						],
						"ERC721TransferToTheZeroAddress": [
							761
						],
						"IERC165": [
							524
						],
						"IERC6059": [
							729
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"IdZeroForbidden": [
							763
						],
						"IsNotContract": [
							765
						],
						"MaxPendingChildrenReached": [
							767
						],
						"MaxRecursiveBurnsReached": [
							773
						],
						"MintToNonNestableImplementer": [
							775
						],
						"NestableToken": [
							3069
						],
						"NestableTooDeep": [
							777
						],
						"NestableTransferToDescendant": [
							779
						],
						"NestableTransferToNonNestableImplementer": [
							781
						],
						"NestableTransferToSelf": [
							783
						],
						"NotApprovedOrDirectOwner": [
							785
						],
						"PendingChildIndexOutOfRange": [
							787
						],
						"UnexpectedChildId": [
							789
						],
						"UnexpectedNumberOfChildren": [
							791
						]
					},
					"id": 3070,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "95:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6059",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 527,
								"nodeType": "StructuredDocumentation",
								"src": "120:190:6",
								"text": "@title EIP-6059 Parent-Governed Nestable Non-Fungible Tokens\n @dev See https://eips.ethereum.org/EIPS/eip-6059\n @dev Note: the ERC-165 identifier for this interface is 0x42b0e56f."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC6059",
							"nameLocation": "321:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IERC6059.DirectOwner",
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "352:648:6",
										"text": " @notice The core struct of ownership.\n @dev The `DirectOwner` struct is used to store information of the next immediate owner, be it the parent token,\n an `ERC721Receiver` contract or an externally owned account.\n @dev If the token is not owned by an NFT, the `tokenId` MUST equal `0`.\n @param tokenId ID of the parent token\n @param ownerAddress Address of the owner of the token. If the owner is another token, then the address MUST be\n  the one of the parent token's collection smart contract. If the owner is externally owned account, the address\n  MUST be the address of this account"
									},
									"id": 533,
									"members": [
										{
											"constant": false,
											"id": 530,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1042:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 533,
											"src": "1034:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1034:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 532,
											"mutability": "mutable",
											"name": "ownerAddress",
											"nameLocation": "1067:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 533,
											"src": "1059:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 531,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1059:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DirectOwner",
									"nameLocation": "1012:11:6",
									"nodeType": "StructDefinition",
									"scope": 729,
									"src": "1005:81:6",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1092:666:6",
										"text": " @notice Used to notify listeners that the token is being transferred.\n @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n @param from Address of the previous immediate owner, which is a smart contract if the token was nested.\n @param to Address of the new immediate owner, which is a smart contract if the token is being nested.\n @param fromTokenId ID of the previous parent token. If the token was not nested before, the value MUST be `0`\n @param toTokenId ID of the new parent token. If the token is not being nested, the value MUST be `0`\n @param tokenId ID of the token being transferred"
									},
									"eventSelector": "04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552d",
									"id": 546,
									"name": "NestTransfer",
									"nameLocation": "1769:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1807:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1791:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1837:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1821:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"indexed": false,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "1857:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1849:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "1886:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1878:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1921:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1905:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1781:153:6"
									},
									"src": "1763:172:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1941:564:6",
										"text": " @notice Used to notify listeners that a new token has been added to a given token's pending children array.\n @dev Emitted when a child NFT is added to a token's pending array.\n @param tokenId ID of the token that received a new pending child token\n @param childIndex Index of the proposed child token in the parent token's pending children array\n @param childAddress Address of the proposed child token's collection smart contract\n @param childId ID of the child token in the child token's collection smart contract"
									},
									"eventSelector": "e65085e689b77b126ba0bac3b079aa8288f19f4d5445af11c76003f8ab3075dd",
									"id": 557,
									"name": "ChildProposed",
									"nameLocation": "2516:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2539:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": false,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "2580:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2572:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": true,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "2616:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2600:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"indexed": true,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "2654:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2638:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:138:6"
									},
									"src": "2510:158:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "2674:574:6",
										"text": " @notice Used to notify listeners that a new child token was accepted by the parent token.\n @dev Emitted when a parent token accepts a token from its pending array, migrating it to the active array.\n @param tokenId ID of the token that accepted a new child token\n @param childIndex Index of the newly accepted child token in the parent token's active children array\n @param childAddress Address of the child token's collection smart contract\n @param childId ID of the child token in the child token's collection smart contract"
									},
									"eventSelector": "29486b9e2ae569b440933a9b1b421467306fa21f3dcad439c262910a634963a9",
									"id": 568,
									"name": "ChildAccepted",
									"nameLocation": "3259:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3298:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "3282:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": false,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "3323:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "3315:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": true,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "3359:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "3343:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"indexed": true,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "3397:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "3381:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:138:6"
									},
									"src": "3253:158:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "3417:282:6",
										"text": " @notice Used to notify listeners that all pending child tokens of a given token have been rejected.\n @dev Emitted when a token removes all a child tokens from its pending array.\n @param tokenId ID of the token that rejected all of the pending children"
									},
									"eventSelector": "8ac4a0d65950c3e40448afb2260e2e0ec36ea15644d9b39e37e85472e5f94451",
									"id": 573,
									"name": "AllChildrenRejected",
									"nameLocation": "3710:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3746:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3730:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:25:6"
									},
									"src": "3704:51:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "3761:697:6",
										"text": " @notice Used to notify listeners a child token has been transferred from parent token.\n @dev Emitted when a token transfers a child from itself, transferring ownership.\n @param tokenId ID of the token that transferred a child token\n @param childIndex Index of a child in the array from which it is being transferred\n @param childAddress Address of the child token's collection smart contract\n @param childId ID of the child token in the child token's collection smart contract\n @param fromPending A boolean value signifying whether the token was in the pending child tokens array (`true`) or\n  in the active child tokens array (`false`)"
									},
									"eventSelector": "2bedee38cdb22411c14554191243c0e117c0088ddae3459876acd46a0fd53815",
									"id": 586,
									"name": "ChildTransferred",
									"nameLocation": "4469:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4511:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4495:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": false,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "4536:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4528:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4528:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": true,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "4572:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4556:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": true,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "4610:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4594:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4594:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": false,
												"mutability": "mutable",
												"name": "fromPending",
												"nameLocation": "4632:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4627:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4627:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:164:6"
									},
									"src": "4463:187:6"
								},
								{
									"canonicalName": "IERC6059.Child",
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "4656:270:6",
										"text": " @notice The core child token struct, holding the information about the child tokens.\n @return tokenId ID of the child token in the child token's collection smart contract\n @return contractAddress Address of the child token's smart contract"
									},
									"id": 592,
									"members": [
										{
											"constant": false,
											"id": 589,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "4962:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 592,
											"src": "4954:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 588,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4954:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 591,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "4987:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 592,
											"src": "4979:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 590,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4979:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Child",
									"nameLocation": "4938:5:6",
									"nodeType": "StructDefinition",
									"scope": 729,
									"src": "4931:78:6",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5015:419:6",
										"text": " @notice Used to retrieve the *root* owner of a given token.\n @dev The *root* owner of the token is the top-level owner in the hierarchy which is not an NFT.\n @dev If the token is owned by another NFT, it MUST recursively look up the parent's root owner.\n @param tokenId ID of the token for which the *root* owner has been retrieved\n @return owner The *root* owner of the token"
									},
									"functionSelector": "6352211e",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5448:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5464:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5456:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5455:17:6"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5504:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5496:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5495:15:6"
									},
									"scope": 729,
									"src": "5439:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "5517:547:6",
										"text": " @notice Used to retrieve the immediate owner of the given token.\n @dev If the immediate owner is another token, the address returned, MUST be the one of the parent token's\n  collection smart contract.\n @param tokenId ID of the token for which the direct owner is being retrieved\n @return address Address of the given token's owner\n @return uint256 The ID of the parent token. MUST be `0` if the owner is not an NFT\n @return bool The boolean value signifying whether the owner is an NFT or not"
									},
									"functionSelector": "fb25fb7a",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "directOwnerOf",
									"nameLocation": "6078:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6100:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "6092:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6092:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6091:17:6"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "6169:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6169:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "6190:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "6211:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6211:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6155:70:6"
									},
									"scope": 729,
									"src": "6069:157:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "6232:632:6",
										"text": " @notice Used to burn a given token.\n @dev When a token is burned, all of its child tokens are recursively burned as well.\n @dev When specifying the maximum recursive burns, the execution MUST be reverted if there are more children to be\n  burned.\n @dev Setting the `maxRecursiveBurn` value to 0 SHOULD only attempt to burn the specified token and MUST revert if\n  there are any child tokens present.\n @param tokenId ID of the token to burn\n @param maxRecursiveBurns Maximum number of tokens to recursively burn\n @return uint256 Number of recursively burned children"
									},
									"functionSelector": "b390c0ab",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6878:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6891:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6883:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6883:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "maxRecursiveBurns",
												"nameLocation": "6908:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6900:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6900:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:44:6"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6961:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6960:9:6"
									},
									"scope": 729,
									"src": "6869:101:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "6976:806:6",
										"text": " @notice Used to add a child token to a given parent token.\n @dev This adds the child token into the given parent token's pending child tokens array.\n @dev The destination token MUST NOT be a child token of the token being transferred or one of its downstream\n  child tokens.\n @dev This method MUST NOT be called directly. It MUST only be called from an instance of `IERC6059` as part of a \n`nestTransfer` or `transferChild` to an NFT.\n @dev Requirements:\n  - `directOwnerOf` on the child contract MUST resolve to the called contract.\n  - the pending array of the parent contract MUST not be full.\n @param parentId ID of the parent token to receive the new child token\n @param childId ID of the new proposed child token"
									},
									"functionSelector": "635490cc",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addChild",
									"nameLocation": "7796:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "7813:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "7805:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7805:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "7831:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "7823:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7823:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7854:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "7839:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7804:55:6"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7868:0:6"
									},
									"scope": 729,
									"src": "7787:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "7875:639:6",
										"text": " @notice Used to accept a pending child token for a given parent token.\n @dev This moves the child token from parent token's pending child tokens array into the active child tokens\n  array.\n @param parentId ID of the parent token for which the child token is being accepted\n @param childIndex Index of the child token to accept in the pending children array of a given token\n @param childAddress Address of the collection smart contract of the child token expected to be at the specified\n  index\n @param childId ID of the child token expected to be located at the specified index"
									},
									"functionSelector": "e97ceaa8",
									"id": 644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptChild",
									"nameLocation": "8528:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "8557:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8549:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "8583:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8575:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8575:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "8611:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8603:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "8641:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8633:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8633:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8539:115:6"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8663:0:6"
									},
									"scope": 729,
									"src": "8519:145:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "8670:537:6",
										"text": " @notice Used to reject all pending children of a given parent token.\n @dev Removes the children from the pending array mapping.\n @dev The children's ownership structures are not updated.\n @dev Requirements:\n - `parentId` MUST exist\n @param parentId ID of the parent token for which to reject all of the pending tokens\n @param maxRejections Maximum number of expected children to reject, used to prevent from\n  rejecting children which arrive just before this operation."
									},
									"functionSelector": "97961336",
									"id": 652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rejectAllChildren",
									"nameLocation": "9221:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "9247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "9239:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9239:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "maxRejections",
												"nameLocation": "9265:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "9257:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9257:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9238:41:6"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9288:0:6"
									},
									"scope": 729,
									"src": "9212:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "9295:1168:6",
										"text": " @notice Used to transfer a child token from a given parent token.\n @dev MUST remove the child from the parent's active or pending children.\n @dev When transferring a child token, the owner of the token MUST be set to `to`, or not updated in the event of `to`\n  being the `0x0` address.\n @param tokenId ID of the parent token from which the child token is being transferred\n @param to Address to which to transfer the token to\n @param destinationId ID of the token to receive this child token (MUST be 0 if the destination is not a token)\n @param childIndex Index of a token we are transferring, in the array it belongs to (can be either active array or\n  pending array)\n @param childAddress Address of the child token's collection smart contract\n @param childId ID of the child token in its own collection smart contract\n @param isPending A boolean value indicating whether the child token being transferred is in the pending array of the\n  parent token (`true`) or in the active array (`false`)\n @param data Additional data with no specified format, sent in call to `to`"
									},
									"functionSelector": "defa80c3",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferChild",
									"nameLocation": "10477:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10508:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10500:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10533:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10525:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10525:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "10553:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10545:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "10584:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10576:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "10612:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10604:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10604:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "10642:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10634:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10634:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "isPending",
												"nameLocation": "10664:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10659:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10659:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10696:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "10683:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10683:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10490:216:6"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10715:0:6"
									},
									"scope": 729,
									"src": "10468:248:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "10722:486:6",
										"text": " @notice Used to retrieve the active child tokens of a given parent token.\n @dev Returns array of Child structs existing for parent token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which to retrieve the active child tokens\n @return struct[] An array of Child structs containing the parent token's active child tokens"
									},
									"functionSelector": "6f19951c",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "childrenOf",
									"nameLocation": "11222:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "11241:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11233:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11232:18:6"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11298:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC6059.Child[]"
												},
												"typeName": {
													"baseType": {
														"id": 678,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 677,
															"name": "Child",
															"nameLocations": [
																"11298:5:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 592,
															"src": "11298:5:6"
														},
														"referencedDeclaration": 592,
														"src": "11298:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
															"typeString": "struct IERC6059.Child"
														}
													},
													"id": 679,
													"nodeType": "ArrayTypeName",
													"src": "11298:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
														"typeString": "struct IERC6059.Child[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11297:16:6"
									},
									"scope": 729,
									"src": "11213:101:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "11320:497:6",
										"text": " @notice Used to retrieve the pending child tokens of a given parent token.\n @dev Returns array of pending Child structs existing for given parent.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which to retrieve the pending child tokens\n @return struct[] An array of Child structs containing the parent token's pending child tokens"
									},
									"functionSelector": "44ec9344",
									"id": 692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingChildrenOf",
									"nameLocation": "11831:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "11857:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "11849:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:18:6"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "11914:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC6059.Child[]"
												},
												"typeName": {
													"baseType": {
														"id": 688,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 687,
															"name": "Child",
															"nameLocations": [
																"11914:5:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 592,
															"src": "11914:5:6"
														},
														"referencedDeclaration": 592,
														"src": "11914:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
															"typeString": "struct IERC6059.Child"
														}
													},
													"id": 689,
													"nodeType": "ArrayTypeName",
													"src": "11914:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
														"typeString": "struct IERC6059.Child[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11913:16:6"
									},
									"scope": 729,
									"src": "11822:108:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "11936:595:6",
										"text": " @notice Used to retrieve a specific active child token for a given parent token.\n @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which the child is being retrieved\n @param index Index of the child token in the parent token's active child tokens array\n @return struct A Child struct containing data about the specified child"
									},
									"functionSelector": "2f32f937",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "childOf",
									"nameLocation": "12545:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "12561:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "12553:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12579:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "12571:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:33:6"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "12633:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
													"typeString": "struct IERC6059.Child"
												},
												"typeName": {
													"id": 700,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 699,
														"name": "Child",
														"nameLocations": [
															"12633:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 592,
														"src": "12633:5:6"
													},
													"referencedDeclaration": 592,
													"src": "12633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
														"typeString": "struct IERC6059.Child"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:14:6"
									},
									"scope": 729,
									"src": "12536:111:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "12653:612:6",
										"text": " @notice Used to retrieve a specific pending child token from a given parent token.\n @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which the pending child token is being retrieved\n @param index Index of the child token in the parent token's pending child tokens array\n @return struct A Child struct containing data about the specified child"
									},
									"functionSelector": "a898e364",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingChildOf",
									"nameLocation": "13279:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "13302:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "13294:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13320:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "13312:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13312:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13293:33:6"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "13374:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
													"typeString": "struct IERC6059.Child"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "Child",
														"nameLocations": [
															"13374:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 592,
														"src": "13374:5:6"
													},
													"referencedDeclaration": 592,
													"src": "13374:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
														"typeString": "struct IERC6059.Child"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13373:14:6"
									},
									"scope": 729,
									"src": "13270:118:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "13394:504:6",
										"text": " @notice Used to transfer the token into another token.\n @dev The destination token MUST NOT be a child token of the token being transferred or one of its downstream\n  child tokens.\n @param from Address of the direct owner of the token to be transferred\n @param to Address of the receiving token's collection smart contract\n @param tokenId ID of the token being transferred\n @param destinationId ID of the token to receive the token being transferred"
									},
									"functionSelector": "064c0a3a",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nestTransferFrom",
									"nameLocation": "13912:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13946:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "13938:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13938:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13968:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "13960:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13960:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13988:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "13980:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "14013:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "14005:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14049:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "14036:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 724,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14036:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13928:132:6"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14069:0:6"
									},
									"scope": 729,
									"src": "13903:167:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3070,
							"src": "311:13761:6",
							"usedErrors": [],
							"usedEvents": [
								546,
								557,
								568,
								573,
								586
							]
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3070,
							"sourceUnit": 161,
							"src": "14074:77:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3070,
							"sourceUnit": 116,
							"src": "14152:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 732,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3070,
							"sourceUnit": 134,
							"src": "14211:66:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3070,
							"sourceUnit": 491,
							"src": "14278:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 734,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3070,
							"sourceUnit": 513,
							"src": "14330:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3070,
							"sourceUnit": 525,
							"src": "14382:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "ff33650c",
							"id": 737,
							"name": "ChildAlreadyExists",
							"nameLocation": "14455:18:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 736,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14473:2:6"
							},
							"src": "14449:27:6"
						},
						{
							"errorSelector": "ca755cc0",
							"id": 739,
							"name": "ChildIndexOutOfRange",
							"nameLocation": "14483:20:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 738,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14503:2:6"
							},
							"src": "14477:29:6"
						},
						{
							"errorSelector": "77722866",
							"id": 741,
							"name": "ERC721AddressZeroIsNotaValidOwner",
							"nameLocation": "14513:33:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 740,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14546:2:6"
							},
							"src": "14507:42:6"
						},
						{
							"errorSelector": "0591db6d",
							"id": 743,
							"name": "ERC721ApprovalToCurrentOwner",
							"nameLocation": "14556:28:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 742,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14584:2:6"
							},
							"src": "14550:37:6"
						},
						{
							"errorSelector": "982462b2",
							"id": 745,
							"name": "ERC721ApproveCallerIsNotOwnerNorApprovedForAll",
							"nameLocation": "14594:46:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 744,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14640:2:6"
							},
							"src": "14588:55:6"
						},
						{
							"errorSelector": "2dee66e4",
							"id": 747,
							"name": "ERC721ApproveToCaller",
							"nameLocation": "14650:21:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 746,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14671:2:6"
							},
							"src": "14644:30:6"
						},
						{
							"errorSelector": "89ba7e10",
							"id": 749,
							"name": "ERC721InvalidTokenId",
							"nameLocation": "14681:20:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 748,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14701:2:6"
							},
							"src": "14675:29:6"
						},
						{
							"errorSelector": "25bd6bd3",
							"id": 751,
							"name": "ERC721MintToTheZeroAddress",
							"nameLocation": "14711:26:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 750,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14737:2:6"
							},
							"src": "14705:35:6"
						},
						{
							"errorSelector": "2728a9d0",
							"id": 753,
							"name": "ERC721NotApprovedOrOwner",
							"nameLocation": "14747:24:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 752,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14771:2:6"
							},
							"src": "14741:33:6"
						},
						{
							"errorSelector": "c5a8d371",
							"id": 755,
							"name": "ERC721TokenAlreadyMinted",
							"nameLocation": "14781:24:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 754,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14805:2:6"
							},
							"src": "14775:33:6"
						},
						{
							"errorSelector": "e146af6f",
							"id": 757,
							"name": "ERC721TransferFromIncorrectOwner",
							"nameLocation": "14815:32:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 756,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14847:2:6"
							},
							"src": "14809:41:6"
						},
						{
							"errorSelector": "bcb56637",
							"id": 759,
							"name": "ERC721TransferToNonReceiverImplementer",
							"nameLocation": "14857:38:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 758,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14895:2:6"
							},
							"src": "14851:47:6"
						},
						{
							"errorSelector": "e3d91bfc",
							"id": 761,
							"name": "ERC721TransferToTheZeroAddress",
							"nameLocation": "14905:30:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 760,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14935:2:6"
							},
							"src": "14899:39:6"
						},
						{
							"errorSelector": "238924d5",
							"id": 763,
							"name": "IdZeroForbidden",
							"nameLocation": "14945:15:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 762,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14960:2:6"
							},
							"src": "14939:24:6"
						},
						{
							"errorSelector": "80275d3a",
							"id": 765,
							"name": "IsNotContract",
							"nameLocation": "14970:13:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 764,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "14983:2:6"
							},
							"src": "14964:22:6"
						},
						{
							"errorSelector": "98674b35",
							"id": 767,
							"name": "MaxPendingChildrenReached",
							"nameLocation": "14993:25:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 766,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15018:2:6"
							},
							"src": "14987:34:6"
						},
						{
							"errorSelector": "4cb93ad9",
							"id": 773,
							"name": "MaxRecursiveBurnsReached",
							"nameLocation": "15028:24:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 772,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 769,
										"mutability": "mutable",
										"name": "childContract",
										"nameLocation": "15061:13:6",
										"nodeType": "VariableDeclaration",
										"scope": 773,
										"src": "15053:21:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 768,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15053:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 771,
										"mutability": "mutable",
										"name": "childId",
										"nameLocation": "15084:7:6",
										"nodeType": "VariableDeclaration",
										"scope": 773,
										"src": "15076:15:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 770,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "15052:40:6"
							},
							"src": "15022:71:6"
						},
						{
							"errorSelector": "850cccef",
							"id": 775,
							"name": "MintToNonNestableImplementer",
							"nameLocation": "15100:28:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 774,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15128:2:6"
							},
							"src": "15094:37:6"
						},
						{
							"errorSelector": "eb20c442",
							"id": 777,
							"name": "NestableTooDeep",
							"nameLocation": "15138:15:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 776,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15153:2:6"
							},
							"src": "15132:24:6"
						},
						{
							"errorSelector": "f9119689",
							"id": 779,
							"name": "NestableTransferToDescendant",
							"nameLocation": "15163:28:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 778,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15191:2:6"
							},
							"src": "15157:37:6"
						},
						{
							"errorSelector": "f413cf99",
							"id": 781,
							"name": "NestableTransferToNonNestableImplementer",
							"nameLocation": "15201:40:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 780,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15241:2:6"
							},
							"src": "15195:49:6"
						},
						{
							"errorSelector": "5eeb0df0",
							"id": 783,
							"name": "NestableTransferToSelf",
							"nameLocation": "15251:22:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 782,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15273:2:6"
							},
							"src": "15245:31:6"
						},
						{
							"errorSelector": "35d12e3f",
							"id": 785,
							"name": "NotApprovedOrDirectOwner",
							"nameLocation": "15283:24:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 784,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15307:2:6"
							},
							"src": "15277:33:6"
						},
						{
							"errorSelector": "9136d24f",
							"id": 787,
							"name": "PendingChildIndexOutOfRange",
							"nameLocation": "15317:27:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 786,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15344:2:6"
							},
							"src": "15311:36:6"
						},
						{
							"errorSelector": "37d6ce90",
							"id": 789,
							"name": "UnexpectedChildId",
							"nameLocation": "15354:17:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 788,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15371:2:6"
							},
							"src": "15348:26:6"
						},
						{
							"errorSelector": "8ac3cb14",
							"id": 791,
							"name": "UnexpectedNumberOfChildren",
							"nameLocation": "15381:26:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 790,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "15407:2:6"
							},
							"src": "15375:35:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 793,
										"name": "Context",
										"nameLocations": [
											"15687:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 512,
										"src": "15687:7:6"
									},
									"id": 794,
									"nodeType": "InheritanceSpecifier",
									"src": "15687:7:6"
								},
								{
									"baseName": {
										"id": 795,
										"name": "IERC165",
										"nameLocations": [
											"15696:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 524,
										"src": "15696:7:6"
									},
									"id": 796,
									"nodeType": "InheritanceSpecifier",
									"src": "15696:7:6"
								},
								{
									"baseName": {
										"id": 797,
										"name": "IERC721",
										"nameLocations": [
											"15705:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "15705:7:6"
									},
									"id": 798,
									"nodeType": "InheritanceSpecifier",
									"src": "15705:7:6"
								},
								{
									"baseName": {
										"id": 799,
										"name": "IERC6059",
										"nameLocations": [
											"15714:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "15714:8:6"
									},
									"id": 800,
									"nodeType": "InheritanceSpecifier",
									"src": "15714:8:6"
								}
							],
							"canonicalName": "NestableToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "15412:248:6",
								"text": " @title NestableToken\n @author RMRK team\n @notice Smart contract of the Nestable module.\n @dev This contract is hierarchy agnostic and can support an arbitrary number of nested levels up and down, as long as\n  gas limits allow it."
							},
							"fullyImplemented": true,
							"id": 3069,
							"linearizedBaseContracts": [
								3069,
								729,
								115,
								524,
								512
							],
							"name": "NestableToken",
							"nameLocation": "15670:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 803,
									"libraryName": {
										"id": 801,
										"name": "Address",
										"nameLocations": [
											"15735:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 490,
										"src": "15735:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "15729:26:6",
									"typeName": {
										"id": 802,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15747:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 806,
									"mutability": "constant",
									"name": "_MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP",
									"nameLocation": "15786:41:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "15761:72:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 804,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15761:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 805,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15830:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 810,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "15920:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "15884:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 809,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 807,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15892:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15884:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 808,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15903:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 816,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "16258:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "16202:71:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
										"typeString": "mapping(uint256 => mapping(address => address))"
									},
									"typeName": {
										"id": 815,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 811,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "16210:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "16202:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
											"typeString": "mapping(uint256 => mapping(address => address))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 814,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 812,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "16229:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "16221:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
												"typeString": "mapping(address => address)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 813,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "16240:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 822,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "16381:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "16328:71:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 821,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 817,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "16336:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "16328:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 820,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 818,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "16355:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "16347:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 819,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "16366:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 827,
									"mutability": "mutable",
									"name": "_directOwners",
									"nameLocation": "16549:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "16509:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DirectOwner_$533_storage_$",
										"typeString": "mapping(uint256 => struct IERC6059.DirectOwner)"
									},
									"typeName": {
										"id": 826,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 823,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "16517:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "16509:31:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DirectOwner_$533_storage_$",
											"typeString": "mapping(uint256 => struct IERC6059.DirectOwner)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 825,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 824,
												"name": "DirectOwner",
												"nameLocations": [
													"16528:11:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 533,
												"src": "16528:11:6"
											},
											"referencedDeclaration": 533,
											"src": "16528:11:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DirectOwner_$533_storage_ptr",
												"typeString": "struct IERC6059.DirectOwner"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 833,
									"mutability": "mutable",
									"name": "_activeChildren",
									"nameLocation": "16667:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "16631:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct IERC6059.Child[])"
									},
									"typeName": {
										"id": 832,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 828,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "16639:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "16631:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct IERC6059.Child[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 830,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 829,
													"name": "Child",
													"nameLocations": [
														"16650:5:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 592,
													"src": "16650:5:6"
												},
												"referencedDeclaration": 592,
												"src": "16650:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
													"typeString": "struct IERC6059.Child"
												}
											},
											"id": 831,
											"nodeType": "ArrayTypeName",
											"src": "16650:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
												"typeString": "struct IERC6059.Child[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 839,
									"mutability": "mutable",
									"name": "_pendingChildren",
									"nameLocation": "16788:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "16752:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct IERC6059.Child[])"
									},
									"typeName": {
										"id": 838,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 834,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "16760:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "16752:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct IERC6059.Child[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 836,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 835,
													"name": "Child",
													"nameLocations": [
														"16771:5:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 592,
													"src": "16771:5:6"
												},
												"referencedDeclaration": 592,
												"src": "16771:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
													"typeString": "struct IERC6059.Child"
												}
											},
											"id": 837,
											"nodeType": "ArrayTypeName",
											"src": "16771:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
												"typeString": "struct IERC6059.Child[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 845,
									"mutability": "mutable",
									"name": "_childIsInActive",
									"nameLocation": "17142:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 3069,
									"src": "17085:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 844,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 840,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17093:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17085:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 843,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 841,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "17112:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "17104:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "17123:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "17615:110:6",
										"statements": [
											{
												"condition": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17629:42:6",
													"subExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 852,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "17649:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17649:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 854,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "17663:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 851,
															"name": "_isApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "17630:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) view returns (bool)"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17630:41:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "17625:93:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 857,
															"name": "ERC721NotApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "17692:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17692:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 859,
													"nodeType": "RevertStatement",
													"src": "17685:33:6"
												}
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "17239:311:6",
										"text": " @notice Used to verify that the caller is either the owner of the token or approved to manage it by its owner.\n @dev If the caller is not the owner of the token or approved to manage it by its owner, the execution will be\n  reverted.\n @param tokenId ID of the token to check"
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyApprovedOrOwner",
									"nameLocation": "17564:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17593:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "17585:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17585:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17584:17:6"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17615:0:6"
									},
									"scope": 3069,
									"src": "17555:170:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "17958:57:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "17989:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "_onlyApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "17968:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17968:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "17968:29:6"
											},
											{
												"id": 871,
												"nodeType": "PlaceholderStatement",
												"src": "18007:1:6"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "17731:176:6",
										"text": " @notice Used to verify that the caller is either the owner of the token or approved to manage it by its owner.\n @param tokenId ID of the token to check"
									},
									"id": 873,
									"name": "onlyApprovedOrOwner",
									"nameLocation": "17921:19:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17949:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "17941:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17941:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17940:17:6"
									},
									"src": "17912:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "18553:116:6",
										"statements": [
											{
												"condition": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18567:48:6",
													"subExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 880,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "18593:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18593:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 882,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "18607:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 879,
															"name": "_isApprovedOrDirectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "18568:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) view returns (bool)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18568:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 888,
												"nodeType": "IfStatement",
												"src": "18563:99:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 885,
															"name": "NotApprovedOrDirectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "18636:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18636:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 887,
													"nodeType": "RevertStatement",
													"src": "18629:33:6"
												}
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "18021:461:6",
										"text": " @notice Used to verify that the caller is approved to manage the given token or it its direct owner.\n @dev This does not delegate to ownerOf, which returns the root owner, but rater uses an owner from DirectOwner\n  struct.\n @dev The execution is reverted if the caller is not immediate owner or approved to manage the given token.\n @dev Used for parent-scoped transfers.\n @param tokenId ID of the token to check."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyApprovedOrDirectOwner",
									"nameLocation": "18496:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18531:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "18523:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18522:17:6"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18553:0:6"
									},
									"scope": 3069,
									"src": "18487:182:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "18898:63:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "18935:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "_onlyApprovedOrDirectOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "18908:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18908:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "18908:35:6"
											},
											{
												"id": 899,
												"nodeType": "PlaceholderStatement",
												"src": "18953:1:6"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "18675:166:6",
										"text": " @notice Used to verify that the caller is approved to manage the given token or is its direct owner.\n @param tokenId ID of the token to check"
									},
									"id": 901,
									"name": "onlyApprovedOrDirectOwner",
									"nameLocation": "18855:25:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18889:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "18881:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18881:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18880:17:6"
									},
									"src": "18846:115:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										523
									],
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "19186:253:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 909,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "19215:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 911,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "19235:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$524_$",
																					"typeString": "type(contract IERC165)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$524_$",
																					"typeString": "type(contract IERC165)"
																				}
																			],
																			"id": 910,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "19230:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19230:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$524",
																			"typeString": "type(contract IERC165)"
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "19244:11:6",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "19230:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "19215:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "19271:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 917,
																				"name": "IERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "19291:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																					"typeString": "type(contract IERC721)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																					"typeString": "type(contract IERC721)"
																				}
																			],
																			"id": 916,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "19286:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19286:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																			"typeString": "type(contract IERC721)"
																		}
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "19300:11:6",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "19286:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "19271:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19215:96:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "19327:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 924,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "19347:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 923,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "19342:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19342:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19364:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "19342:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "19327:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "19215:160:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 929,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "19391:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 931,
																		"name": "IERC6059",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 729,
																		"src": "19411:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																			"typeString": "type(contract IERC6059)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																			"typeString": "type(contract IERC6059)"
																		}
																	],
																	"id": 930,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "19406:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19406:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC6059_$729",
																	"typeString": "type(contract IERC6059)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19421:11:6",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "19406:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "19391:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19215:217:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 908,
												"id": 936,
												"nodeType": "Return",
												"src": "19196:236:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "19047:38:6",
										"text": " @inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "19099:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "19133:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "19126:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 903,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "19126:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19116:34:6"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "19180:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19180:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19179:6:6"
									},
									"scope": 3069,
									"src": "19090:349:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "19560:117:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 946,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "19574:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19591:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19583:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 947,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19583:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19583:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19574:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "19570:67:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 952,
															"name": "ERC721AddressZeroIsNotaValidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "19602:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19602:35:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 954,
													"nodeType": "RevertStatement",
													"src": "19595:42:6"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 956,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "19654:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 958,
													"indexExpression": {
														"id": 957,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "19664:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19654:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 959,
												"nodeType": "Return",
												"src": "19647:23:6"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "19445:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "70a08231",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "19497:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19515:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "19507:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19506:15:6"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "19551:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19550:9:6"
									},
									"scope": 3069,
									"src": "19488:189:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "19992:45:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20012:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "20018:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "20022:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "20002:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20002:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "20002:28:6"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "19804:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "23b872dd",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 971,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "19983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 972,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 970,
												"name": "onlyApprovedOrDirectOwner",
												"nameLocations": [
													"19957:25:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 901,
												"src": "19957:25:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "19957:34:6"
										}
									],
									"name": "transferFrom",
									"nameLocation": "19856:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19886:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "19878:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19878:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19908:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "19900:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19928:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "19920:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19868:73:6"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19992:0:6"
									},
									"scope": 3069,
									"src": "19847:190:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "20200:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 992,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "20227:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "20233:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "20237:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20246:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 991,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															999,
															1022
														],
														"referencedDeclaration": 1022,
														"src": "20210:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20210:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "20210:39:6"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "20043:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "42842e0e",
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "20095:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20129:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "20121:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20121:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20151:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "20143:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20171:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "20163:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20163:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20111:73:6"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20200:0:6"
									},
									"scope": 3069,
									"src": "20086:170:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "20481:55:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "20505:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "20511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "20515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1018,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "20524:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1014,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "20491:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20491:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "20491:38:6"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "20262:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "b88d4fde",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1011,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1006,
													"src": "20472:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1010,
												"name": "onlyApprovedOrDirectOwner",
												"nameLocations": [
													"20446:25:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 901,
												"src": "20446:25:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "20446:34:6"
										}
									],
									"name": "safeTransferFrom",
									"nameLocation": "20314:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20348:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20340:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20370:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20362:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20362:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20390:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20382:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20382:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20407:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20407:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20330:100:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20481:0:6"
									},
									"scope": 3069,
									"src": "20305:231:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "21258:70:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "21282:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "21288:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "21292:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1043,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "21301:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1044,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "21316:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_nestTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "21268:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21268:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "21268:53:6"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "20542:504:6",
										"text": " @notice Used to transfer the token into another token.\n @dev The destination token MUST NOT be a child token of the token being transferred or one of its downstream\n  child tokens.\n @param from Address of the direct owner of the token to be transferred\n @param to Address of the receiving token's collection smart contract\n @param tokenId ID of the token being transferred\n @param destinationId ID of the token to receive the token being transferred"
									},
									"functionSelector": "064c0a3a",
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1036,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1029,
													"src": "21249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1035,
												"name": "onlyApprovedOrDirectOwner",
												"nameLocations": [
													"21223:25:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 901,
												"src": "21223:25:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "21223:34:6"
										}
									],
									"name": "nestTransferFrom",
									"nameLocation": "21060:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21094:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "21086:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21086:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21116:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "21108:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21136:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "21128:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21128:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "21161:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "21153:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21153:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21197:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "21184:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21184:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21076:131:6"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21258:0:6"
									},
									"scope": 3069,
									"src": "21051:277:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "22507:168:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1061,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "22527:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "22533:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "22537:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1060,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "22517:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22517:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "22517:28:6"
											},
											{
												"condition": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22559:48:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1067,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "22583:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1068,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "22589:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1069,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "22593:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1070,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "22602:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1066,
															"name": "_checkOnERC721Received",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "22560:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22560:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "22555:113:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1073,
															"name": "ERC721TransferToNonReceiverImplementer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "22628:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22628:40:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1075,
													"nodeType": "RevertStatement",
													"src": "22621:47:6"
												}
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "21334:1028:6",
										"text": " @notice Used to safely transfer the token form `from` to `to`.\n @dev The function checks that contract recipients are aware of the ERC721 protocol to prevent tokens from being\n  forever locked.\n @dev This internal function is equivalent to {safeTransferFrom}, and can be used to e.g. implement alternative\n  mechanisms to perform token transfer, such as signature-based.\n @dev Requirements:\n  - `from` cannot be the zero address.\n  - `to` cannot be the zero address.\n  - `tokenId` token must exist and be owned by `from`.\n  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n @dev Emits a {Transfer} event.\n @param from Address of the account currently owning the given token\n @param to Address to transfer the token to\n @param tokenId ID of the token to transfer\n @param data Additional data with no specified format, sent in call to `to`"
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "22376:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22407:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "22399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22429:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "22421:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22449:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "22441:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22441:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22479:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "22466:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22466:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22389:100:6"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22507:0:6"
									},
									"scope": 3069,
									"src": "22367:308:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "23295:716:6",
										"statements": [
											{
												"assignments": [
													1089,
													1091,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1089,
														"mutability": "mutable",
														"name": "immediateOwner",
														"nameLocation": "23314:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "23306:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1088,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23306:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "23338:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "23330:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23330:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1095,
												"initialValue": {
													"arguments": [
														{
															"id": 1093,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23366:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1092,
														"name": "directOwnerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "23352:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256) view returns (address,uint256,bool)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23352:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23305:69:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "immediateOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "23388:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1097,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "23406:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23388:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "23384:69:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1099,
															"name": "ERC721TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "23419:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23419:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1101,
													"nodeType": "RevertStatement",
													"src": "23412:41:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1103,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "23467:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23481:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23473:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1104,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23473:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23473:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23467:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1112,
												"nodeType": "IfStatement",
												"src": "23463:61:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1109,
															"name": "ERC721TransferToTheZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "23492:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23492:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1111,
													"nodeType": "RevertStatement",
													"src": "23485:39:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1114,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "23556:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23562:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23566:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1113,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "23535:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23535:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "23535:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "23611:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23627:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "23631:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23641:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1124,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23644:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1119,
														"name": "_beforeNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "23584:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23584:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "23584:68:6"
											},
											{
												"expression": {
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1127,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "23663:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1129,
														"indexExpression": {
															"id": 1128,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "23673:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23663:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23682:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "23663:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "23663:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23723:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23732:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1136,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23735:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1133,
														"name": "_updateOwnerAndClearApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "23693:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23693:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "23693:45:6"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1139,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "23748:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1141,
														"indexExpression": {
															"id": 1140,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23758:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23748:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23765:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "23748:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "23748:18:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1146,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "23791:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23797:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23801:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "23782:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23782:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "EmitStatement",
												"src": "23777:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1152,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "23837:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23853:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "23857:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23867:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23870:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1151,
														"name": "NestTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "23824:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23824:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "EmitStatement",
												"src": "23819:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1160,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "23909:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23915:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23919:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "23889:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23889:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "23889:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "23963:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "23979:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "23983:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23993:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1170,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "23996:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "_afterNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "23937:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23937:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "23937:67:6"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "22681:500:6",
										"text": " @notice Used to transfer the token from `from` to `to`.\n @dev As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n @dev Requirements:\n  - `to` cannot be the zero address.\n  - `tokenId` token must be owned by `from`.\n @dev Emits a {Transfer} event.\n @param from Address of the account currently owning the given token\n @param to Address to transfer the token to\n @param tokenId ID of the token to transfer"
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "23195:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23222:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "23214:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23214:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23244:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "23236:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23236:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23264:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "23256:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23204:73:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23295:0:6"
									},
									"scope": 3069,
									"src": "23186:825:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "24805:1152:6",
										"statements": [
											{
												"assignments": [
													1189,
													1191,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "immediateOwner",
														"nameLocation": "24824:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "24816:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1188,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24816:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "24848:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "24840:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24840:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1195,
												"initialValue": {
													"arguments": [
														{
															"id": 1193,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "24876:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "directOwnerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "24862:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256) view returns (address,uint256,bool)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24862:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24815:69:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1196,
														"name": "immediateOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "24898:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1197,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "24916:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24898:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "24894:69:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1199,
															"name": "ERC721TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "24929:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24929:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1201,
													"nodeType": "RevertStatement",
													"src": "24922:41:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1203,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "24977:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24991:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24983:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1204,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24983:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24983:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24977:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"nodeType": "IfStatement",
												"src": "24973:61:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1209,
															"name": "ERC721TransferToTheZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "25002:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25002:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1211,
													"nodeType": "RevertStatement",
													"src": "24995:39:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1213,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "25048:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1216,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25062:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NestableToken_$3069",
																		"typeString": "contract NestableToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NestableToken_$3069",
																		"typeString": "contract NestableToken"
																	}
																],
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25054:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25054:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25054:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "25048:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "25071:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1220,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "25082:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25071:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25048:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "25044:96:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1223,
															"name": "NestableTransferToSelf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "25116:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25116:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1225,
													"nodeType": "RevertStatement",
													"src": "25109:31:6"
												}
											},
											{
												"condition": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "25270:16:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1227,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "25271:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25274:10:6",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 178,
															"src": "25271:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25271:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "IfStatement",
												"src": "25266:44:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1231,
															"name": "IsNotContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "25295:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25295:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1233,
													"nodeType": "RevertStatement",
													"src": "25288:22:6"
												}
											},
											{
												"condition": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "25324:58:6",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1240,
																			"name": "IERC6059",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "25360:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																				"typeString": "type(contract IERC6059)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																				"typeString": "type(contract IERC6059)"
																			}
																		],
																		"id": 1239,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "25355:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25355:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC6059_$729",
																		"typeString": "type(contract IERC6059)"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "25370:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "25355:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1236,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "25333:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1235,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "25325:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$524_$",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25325:11:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$524",
																	"typeString": "contract IERC165"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25337:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "25325:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view external returns (bool)"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25325:57:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "25320:125:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1245,
															"name": "NestableTransferToNonNestableImplementer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "25403:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25403:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1247,
													"nodeType": "RevertStatement",
													"src": "25396:49:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "25480:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "25489:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "25493:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1249,
														"name": "_checkForInheritanceLoop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "25455:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256) view"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25455:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "25455:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "25539:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "25545:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "25549:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1255,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "25518:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25518:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "25518:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1262,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "25607:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "25635:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "25651:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1265,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "25673:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "25700:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "_beforeNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "25567:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25567:150:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "25567:150:6"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1269,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "25727:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"id": 1270,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "25737:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25727:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25746:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25727:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "25727:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "25787:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1277,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "25796:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1278,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "25811:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1275,
														"name": "_updateOwnerAndClearApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "25757:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25757:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "25757:57:6"
											},
											{
												"expression": {
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1281,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "25824:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1283,
														"indexExpression": {
															"id": 1282,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "25834:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25824:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25841:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25824:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "25824:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1288,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "25891:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "25907:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "25911:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1291,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "25921:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1292,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "25936:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1293,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "25945:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1287,
														"name": "_sendToNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "25880:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256,bytes memory)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25880:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "25880:70:6"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "24017:612:6",
										"text": " @notice Used to transfer a token into another token.\n @dev Attempting to nest a token into `0x0` address will result in reverted transaction.\n @dev Attempting to nest a token into itself will result in reverted transaction.\n @param from Address of the account currently owning the given token\n @param to Address of the receiving token's collection smart contract\n @param tokenId ID of the token to transfer\n @param destinationId ID of the token receiving the given token\n @param data Additional data with no specified format, sent in the addChild call"
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nestTransfer",
									"nameLocation": "24643:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24674:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "24666:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24666:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24696:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "24688:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24688:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24716:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "24708:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "24741:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "24733:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24733:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24777:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "24764:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24764:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24656:131:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24805:0:6"
									},
									"scope": 3069,
									"src": "24634:1323:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "26863:355:6",
										"statements": [
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "destContract",
														"nameLocation": "26882:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "26873:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC6059_$729",
															"typeString": "contract IERC6059"
														},
														"typeName": {
															"id": 1314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1313,
																"name": "IERC6059",
																"nameLocations": [
																	"26873:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 729,
																"src": "26873:8:6"
															},
															"referencedDeclaration": 729,
															"src": "26873:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC6059_$729",
																"typeString": "contract IERC6059"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"id": 1317,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "26906:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1316,
														"name": "IERC6059",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "26897:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
															"typeString": "type(contract IERC6059)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26897:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC6059_$729",
														"typeString": "contract IERC6059"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26873:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "26941:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1324,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "26956:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1325,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "26965:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1320,
															"name": "destContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "26919:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC6059_$729",
																"typeString": "contract IERC6059"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26932:8:6",
														"memberName": "addChild",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 632,
														"src": "26919:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,bytes memory) external"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26919:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "26919:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1329,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "27000:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "27006:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "27010:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1328,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "26980:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26980:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "26980:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "27054:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1336,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "27060:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1337,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "27064:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1338,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "27074:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "27089:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1334,
														"name": "_afterNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "27028:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27028:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "27028:69:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1343,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "27122:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "27128:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "27132:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1342,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "27113:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27113:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "EmitStatement",
												"src": "27108:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1349,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "27168:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "27174:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1351,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "27178:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1352,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "27188:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1353,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "27203:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "NestTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "27155:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27155:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "EmitStatement",
												"src": "27150:61:6"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "25963:710:6",
										"text": " @notice Used to send a token to another token.\n @dev If the token being sent is currently owned by an externally owned account, the `parentId` should equal `0`.\n @dev Emits {Transfer} event.\n @dev Emits {NestTransfer} event.\n @param from Address from which the token is being sent\n @param to Address of the collection smart contract of the token to receive the given token\n @param parentId ID of the current parent token of the token being sent\n @param destinationId ID of the tokento receive the token being sent\n @param tokenId ID of the token being sent\n @param data Additional data with no specified format, sent in the addChild call"
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToNFT",
									"nameLocation": "26687:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26715:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "26707:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26707:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26737:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "26729:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26729:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "26757:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "26749:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "26783:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "26775:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26814:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "26806:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26806:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26844:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "26831:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26831:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26697:157:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26863:0:6"
									},
									"scope": 3069,
									"src": "26678:540:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "27984:893:6",
										"statements": [
											{
												"body": {
													"id": 1418,
													"nodeType": "Block",
													"src": "28059:778:6",
													"statements": [
														{
															"assignments": [
																1374,
																1376,
																1378
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1374,
																	"mutability": "mutable",
																	"name": "nextOwner",
																	"nameLocation": "28099:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1418,
																	"src": "28091:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1373,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28091:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1376,
																	"mutability": "mutable",
																	"name": "nextOwnerTokenId",
																	"nameLocation": "28134:16:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1418,
																	"src": "28126:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1375,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28126:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1378,
																	"mutability": "mutable",
																	"name": "isNft",
																	"nameLocation": "28173:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1418,
																	"src": "28168:10:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1377,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "28168:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1385,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1383,
																		"name": "targetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "28234:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1380,
																				"name": "targetContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1362,
																				"src": "28204:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1379,
																			"name": "IERC6059",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "28195:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																				"typeString": "type(contract IERC6059)"
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28195:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC6059_$729",
																			"typeString": "contract IERC6059"
																		}
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28220:13:6",
																	"memberName": "directOwnerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 612,
																	"src": "28195:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_bool_$",
																		"typeString": "function (uint256) view external returns (address,uint256,bool)"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28195:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(address,uint256,bool)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28073:170:6"
														},
														{
															"condition": {
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "28333:6:6",
																"subExpression": {
																	"id": 1386,
																	"name": "isNft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "28334:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1390,
															"nodeType": "IfStatement",
															"src": "28329:51:6",
															"trueBody": {
																"id": 1389,
																"nodeType": "Block",
																"src": "28341:39:6",
																"statements": [
																	{
																		"functionReturnParameters": 1366,
																		"id": 1388,
																		"nodeType": "Return",
																		"src": "28359:7:6"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1391,
																		"name": "nextOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "28490:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1394,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "28511:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NestableToken_$3069",
																					"typeString": "contract NestableToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NestableToken_$3069",
																					"typeString": "contract NestableToken"
																				}
																			],
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28503:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1392,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28503:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28503:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "28490:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1397,
																		"name": "nextOwnerTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "28520:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1398,
																		"name": "currentId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "28540:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "28520:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "28490:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1405,
															"nodeType": "IfStatement",
															"src": "28486:135:6",
															"trueBody": {
																"id": 1404,
																"nodeType": "Block",
																"src": "28551:70:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1401,
																				"name": "NestableTransferToDescendant",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "28576:28:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28576:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1403,
																		"nodeType": "RevertStatement",
																		"src": "28569:37:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1406,
																	"name": "targetContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "28700:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1407,
																	"name": "nextOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "28717:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "28700:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "28700:26:6"
														},
														{
															"expression": {
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1410,
																	"name": "targetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "28740:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1411,
																	"name": "nextOwnerTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "28751:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28740:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1413,
															"nodeType": "ExpressionStatement",
															"src": "28740:27:6"
														},
														{
															"id": 1417,
															"nodeType": "UncheckedBlock",
															"src": "28781:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "28809:3:6",
																		"subExpression": {
																			"id": 1414,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "28811:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1416,
																	"nodeType": "ExpressionStatement",
																	"src": "28809:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1370,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "28010:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1371,
														"name": "_MAX_LEVELS_TO_CHECK_FOR_INHERITANCE_LOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "28014:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28010:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1419,
												"initializationExpression": {
													"assignments": [
														1368
													],
													"declarations": [
														{
															"constant": false,
															"id": 1368,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "28007:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1419,
															"src": "27999:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1367,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27999:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1369,
													"nodeType": "VariableDeclarationStatement",
													"src": "27999:9:6"
												},
												"nodeType": "ForStatement",
												"src": "27994:843:6"
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1420,
														"name": "NestableTooDeep",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "28853:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28853:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "RevertStatement",
												"src": "28846:24:6"
											}
										]
									},
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "27224:617:6",
										"text": " @notice Used to check if nesting a given token into a specified token would create an inheritance loop.\n @dev If a loop would occur, the tokens would be unmanageable, so the execution is reverted if one is detected.\n @dev The check for inheritance loop is bounded to guard against too much gas being consumed.\n @param currentId ID of the token that would be nested\n @param targetContract Address of the collection smart contract of the token into which the given token would be\n  nested\n @param targetId ID of the token into which the given token would be nested"
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkForInheritanceLoop",
									"nameLocation": "27855:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "currentId",
												"nameLocation": "27897:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "27889:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27889:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "targetContract",
												"nameLocation": "27924:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "27916:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "targetId",
												"nameLocation": "27956:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "27948:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27948:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27879:91:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27984:0:6"
									},
									"scope": 3069,
									"src": "27846:1031:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "29530:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1433,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "29550:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1434,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "29554:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29563:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1432,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "29540:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29540:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "29540:26:6"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "29002:458:6",
										"text": " @notice Used to safely mint a token to a specified address.\n @dev Requirements:\n  - `tokenId` must not exist.\n  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n @dev Emits a {Transfer} event.\n @param to Address to which to safely mint the gven token\n @param tokenId ID of the token to mint to the specified address"
									},
									"functionSelector": "b3e1c718",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "29474:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29492:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "29484:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29484:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29504:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "29496:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29496:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29483:29:6"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29530:0:6"
									},
									"scope": 3069,
									"src": "29465:108:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "30002:164:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "30018:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "30022:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1449,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "30012:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30012:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "30012:18:6"
											},
											{
												"condition": {
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "30044:54:6",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30076:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30068:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30068:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30068:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1459,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1442,
																"src": "30080:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1460,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "30084:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1461,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "30093:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1454,
															"name": "_checkOnERC721Received",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "30045:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30045:53:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "30040:119:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1464,
															"name": "ERC721TransferToNonReceiverImplementer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "30119:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30119:40:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1466,
													"nodeType": "RevertStatement",
													"src": "30112:47:6"
												}
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "29579:304:6",
										"text": " @notice Used to safely mint the token to the specified address while passing the additional data to contract\n  recipients.\n @param to Address to which to mint the token\n @param tokenId ID of the token to mint\n @param data Additional data to send with the tokens"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "29897:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "29916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29944:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "29936:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29936:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "29974:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "29961:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29961:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29906:78:6"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30002:0:6"
									},
									"scope": 3069,
									"src": "29888:278:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "30650:271:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "30671:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "30675:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30684:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1477,
														"name": "_innerMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "30660:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30660:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "30660:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30719:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30711:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1484,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30711:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30711:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "30723:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1489,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "30727:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1483,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "30702:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30702:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "EmitStatement",
												"src": "30697:38:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30771:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30763:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30763:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30763:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "30775:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30779:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30782:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1500,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "30785:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1492,
														"name": "NestTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "30750:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30750:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "EmitStatement",
												"src": "30745:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30832:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30824:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30824:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30824:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "30836:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "30840:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1503,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "30804:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30804:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "30804:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30892:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30884:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1513,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30884:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30884:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "30896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30900:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30903:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1520,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "30906:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "_afterNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "30858:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30858:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "30858:56:6"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "30172:412:6",
										"text": " @notice Used to mint a specified token to a given address.\n @dev WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible.\n @dev Requirements:\n  - `tokenId` must not exist.\n  - `to` cannot be the zero address.\n @dev Emits a {Transfer} event.\n @param to Address to mint the token to\n @param tokenId ID of the token to mint"
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "30598:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30612:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "30604:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30604:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30624:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "30616:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30616:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30603:29:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30650:0:6"
									},
									"scope": 3069,
									"src": "30589:332:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "31477:377:6",
										"statements": [
											{
												"condition": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "31566:16:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1536,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "31567:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31570:10:6",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 178,
															"src": "31567:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31567:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "31562:44:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1540,
															"name": "IsNotContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "31591:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31591:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1542,
													"nodeType": "RevertStatement",
													"src": "31584:22:6"
												}
											},
											{
												"condition": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "31620:58:6",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1549,
																			"name": "IERC6059",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "31656:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																				"typeString": "type(contract IERC6059)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																				"typeString": "type(contract IERC6059)"
																			}
																		],
																		"id": 1548,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "31651:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31651:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC6059_$729",
																		"typeString": "type(contract IERC6059)"
																	}
																},
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "31666:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "31651:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1545,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "31629:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1544,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "31621:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$524_$",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31621:11:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$524",
																	"typeString": "contract IERC165"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31633:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "31621:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view external returns (bool)"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31621:57:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1557,
												"nodeType": "IfStatement",
												"src": "31616:113:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1554,
															"name": "MintToNonNestableImplementer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "31699:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31699:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1556,
													"nodeType": "RevertStatement",
													"src": "31692:37:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "31751:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "31755:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1561,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "31764:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1558,
														"name": "_innerMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "31740:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31740:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "31740:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31807:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31799:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31799:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31799:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "31811:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31815:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1571,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "31818:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "31833:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1573,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "31842:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1564,
														"name": "_sendToNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "31788:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256,bytes memory)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31788:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "31788:59:6"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "30927:400:6",
										"text": " @notice Used to mint a child token to a given parent token.\n @param to Address of the collection smart contract of the token into which to mint the child token\n @param tokenId ID of the token to mint\n @param destinationId ID of the token into which to mint the new child token\n @param data Additional data with no specified format, sent in the addChild call"
									},
									"functionSelector": "eb043606",
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nestMint",
									"nameLocation": "31341:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31368:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "31360:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31360:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31388:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "31380:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31380:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "31413:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "31405:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31405:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "31449:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "31436:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31436:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31350:109:6"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31477:0:6"
									},
									"scope": 3069,
									"src": "31332:522:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "32433:479:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "32447:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32461:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32453:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1588,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32453:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32453:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32447:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "32443:57:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1593,
															"name": "ERC721MintToTheZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "32472:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32472:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1595,
													"nodeType": "RevertStatement",
													"src": "32465:35:6"
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1598,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "32522:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1597,
														"name": "_exists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "32514:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view returns (bool)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32514:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1603,
												"nodeType": "IfStatement",
												"src": "32510:55:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1600,
															"name": "ERC721TokenAlreadyMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "32539:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32539:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1602,
													"nodeType": "RevertStatement",
													"src": "32532:33:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1604,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "32579:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32590:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32579:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1610,
												"nodeType": "IfStatement",
												"src": "32575:42:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1607,
															"name": "IdZeroForbidden",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "32600:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32600:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1609,
													"nodeType": "RevertStatement",
													"src": "32593:24:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32657:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32649:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1612,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32649:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32649:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1616,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "32661:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1617,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "32665:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1611,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "32628:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32628:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "32628:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32718:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32710:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1621,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32710:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32710:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1625,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "32722:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32726:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1627,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "32729:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1628,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "32744:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1620,
														"name": "_beforeNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "32683:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32683:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "32683:69:6"
											},
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1631,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "32763:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1633,
														"indexExpression": {
															"id": 1632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "32773:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32763:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32780:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32763:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "32763:18:6"
											},
											{
												"expression": {
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1637,
															"name": "_directOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "32791:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DirectOwner_$533_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.DirectOwner storage ref)"
															}
														},
														"id": 1639,
														"indexExpression": {
															"id": 1638,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "32805:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32791:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DirectOwner_$533_storage",
															"typeString": "struct IERC6059.DirectOwner storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "32856:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1642,
																"name": "destinationId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "32881:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1640,
															"name": "DirectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "32816:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_DirectOwner_$533_storage_ptr_$",
																"typeString": "type(struct IERC6059.DirectOwner storage pointer)"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"32842:12:6",
															"32872:7:6"
														],
														"names": [
															"ownerAddress",
															"tokenId"
														],
														"nodeType": "FunctionCall",
														"src": "32816:89:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DirectOwner_$533_memory_ptr",
															"typeString": "struct IERC6059.DirectOwner memory"
														}
													},
													"src": "32791:114:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DirectOwner_$533_storage",
														"typeString": "struct IERC6059.DirectOwner storage ref"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "32791:114:6"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "31860:458:6",
										"text": " @notice Used to mint a child token into a given parent token.\n @dev Requirements:\n  - `to` cannot be the zero address.\n  - `tokenId` must not exist.\n  - `tokenId` must not be `0`.\n @param to Address of the collection smart contract of the token into which to mint the child token\n @param tokenId ID of the token to mint\n @param destinationId ID of the token into which to mint the new token"
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_innerMint",
									"nameLocation": "32332:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32360:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "32352:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32380:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "32372:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32372:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "32405:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "32397:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32342:82:6"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32433:0:6"
									},
									"scope": 3069,
									"src": "32323:589:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										48,
										600
									],
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "33590:225:6",
										"statements": [
											{
												"assignments": [
													1659,
													1661,
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "33609:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "33601:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1658,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "33601:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "ownerTokenId",
														"nameLocation": "33624:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "33616:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33616:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "isNft",
														"nameLocation": "33643:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "33638:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1662,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "33638:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1667,
												"initialValue": {
													"arguments": [
														{
															"id": 1665,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "33679:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1664,
														"name": "directOwnerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "33652:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256) view returns (address,uint256,bool)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33652:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33600:96:6"
											},
											{
												"condition": {
													"id": 1668,
													"name": "isNft",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1663,
													"src": "33710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "33706:81:6",
												"trueBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "33717:70:6",
													"statements": [
														{
															"expression": {
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1669,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "33731:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1674,
																			"name": "ownerTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "33763:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1671,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1659,
																					"src": "33748:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1670,
																				"name": "IERC6059",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 729,
																				"src": "33739:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																					"typeString": "type(contract IERC6059)"
																				}
																			},
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33739:15:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC6059_$729",
																				"typeString": "contract IERC6059"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33755:7:6",
																		"memberName": "ownerOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 600,
																		"src": "33739:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33739:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "33731:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1677,
															"nodeType": "ExpressionStatement",
															"src": "33731:45:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1680,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1659,
													"src": "33803:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1681,
												"nodeType": "Return",
												"src": "33796:12:6"
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "33039:432:6",
										"text": " @notice Used to retrieve the root owner of the given token.\n @dev Root owner is always the externally owned account.\n @dev If the given token is owned by another token, it will recursively query the parent tokens until reaching the\n  root owner.\n @param tokenId ID of the token for which the root owner is being retrieved\n @return address Address of the root owner of the given token"
									},
									"functionSelector": "6352211e",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "33485:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1654,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1652,
												"name": "IERC6059",
												"nameLocations": [
													"33553:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 729,
												"src": "33553:8:6"
											},
											{
												"id": 1653,
												"name": "IERC721",
												"nameLocations": [
													"33563:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "33563:7:6"
											}
										],
										"src": "33544:27:6"
									},
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33510:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "33502:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33502:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33492:31:6"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "33581:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33580:9:6"
									},
									"scope": 3069,
									"src": "33476:339:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "34715:215:6",
										"statements": [
											{
												"assignments": [
													1697
												],
												"declarations": [
													{
														"constant": false,
														"id": 1697,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "34744:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "34725:24:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DirectOwner_$533_memory_ptr",
															"typeString": "struct IERC6059.DirectOwner"
														},
														"typeName": {
															"id": 1696,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1695,
																"name": "DirectOwner",
																"nameLocations": [
																	"34725:11:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 533,
																"src": "34725:11:6"
															},
															"referencedDeclaration": 533,
															"src": "34725:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DirectOwner_$533_storage_ptr",
																"typeString": "struct IERC6059.DirectOwner"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"baseExpression": {
														"id": 1698,
														"name": "_directOwners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "34752:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DirectOwner_$533_storage_$",
															"typeString": "mapping(uint256 => struct IERC6059.DirectOwner storage ref)"
														}
													},
													"id": 1700,
													"indexExpression": {
														"id": 1699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "34766:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34752:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DirectOwner_$533_storage",
														"typeString": "struct IERC6059.DirectOwner storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34725:49:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1702,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "34788:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DirectOwner_$533_memory_ptr",
																"typeString": "struct IERC6059.DirectOwner memory"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34794:12:6",
														"memberName": "ownerAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "34788:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34818:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34810:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1704,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "34810:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34810:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34788:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1712,
												"nodeType": "IfStatement",
												"src": "34784:67:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1709,
															"name": "ERC721InvalidTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "34829:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34829:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1711,
													"nodeType": "RevertStatement",
													"src": "34822:29:6"
												}
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1713,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "34869:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DirectOwner_$533_memory_ptr",
																	"typeString": "struct IERC6059.DirectOwner memory"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34875:12:6",
															"memberName": "ownerAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 532,
															"src": "34869:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1715,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "34889:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DirectOwner_$533_memory_ptr",
																	"typeString": "struct IERC6059.DirectOwner memory"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34895:7:6",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 530,
															"src": "34889:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1717,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "34904:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DirectOwner_$533_memory_ptr",
																		"typeString": "struct IERC6059.DirectOwner memory"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34910:7:6",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 530,
																"src": "34904:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34921:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34904:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1721,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "34868:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,uint256,bool)"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1722,
												"nodeType": "Return",
												"src": "34861:62:6"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "33821:782:6",
										"text": " @notice Used to retrieve the immediate owner of the given token.\n @dev In the event the NFT is owned by an externally owned account, `tokenId` will be `0`.\n @param tokenId ID of the token for which the immediate owner is being retrieved\n @return address Address of the immediate owner. If the token is owned by an externally owned account, its address\n  will be returned. If the token is owned by another token, the parent token's collection smart contract address\n  is returned\n @return uint256 Token ID of the immediate owner. If the immediate owner is an externally owned account, the value\n  should be `0`\n @return bool A boolean value signifying whether the immediate owner is a token (`true`) or not (`false`)"
									},
									"functionSelector": "fb25fb7a",
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "directOwnerOf",
									"nameLocation": "34617:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34648:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "34640:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34640:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34630:31:6"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "34691:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34691:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "34700:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34700:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "34709:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34709:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34690:24:6"
									},
									"scope": 3069,
									"src": "34608:322:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "35206:33:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1731,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "35221:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1730,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1736,
															1755
														],
														"referencedDeclaration": 1755,
														"src": "35216:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) returns (uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35216:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "35216:16:6"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "35055:100:6",
										"text": " @notice Used to burn a given token.\n @param tokenId ID of the token to burn"
									},
									"functionSelector": "42966c68",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "35169:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35182:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "35174:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35173:17:6"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35206:0:6"
									},
									"scope": 3069,
									"src": "35160:79:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "35896:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1750,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "35919:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1751,
															"name": "maxChildrenBurns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "35928:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1749,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "35913:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) returns (uint256)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35913:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1748,
												"id": 1753,
												"nodeType": "Return",
												"src": "35906:39:6"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "35245:499:6",
										"text": " @notice Used to burn a token.\n @dev When a token is burned, its children are recursively burned as well.\n @dev The approvals are cleared when the token is burned.\n @dev Requirements:\n  - `tokenId` must exist.\n @dev Emits a {Transfer} event.\n @param tokenId ID of the token to burn\n @param maxChildrenBurns Maximum children to recursively burn\n @return uint256 The number of recursive burns it took to burn all of the children"
									},
									"functionSelector": "b390c0ab",
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1744,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1739,
													"src": "35869:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1745,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1743,
												"name": "onlyApprovedOrDirectOwner",
												"nameLocations": [
													"35843:25:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 901,
												"src": "35843:25:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "35843:34:6"
										}
									],
									"name": "burn",
									"nameLocation": "35758:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35780:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "35772:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35772:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "maxChildrenBurns",
												"nameLocation": "35805:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "35797:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35797:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35762:65:6"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "35887:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35886:9:6"
									},
									"scope": 3069,
									"src": "35749:203:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "36619:2352:6",
										"statements": [
											{
												"assignments": [
													1766,
													1768,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "immediateOwner",
														"nameLocation": "36638:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "36630:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1765,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36630:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "36662:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "36654:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36654:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1772,
												"initialValue": {
													"arguments": [
														{
															"id": 1770,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "36690:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1769,
														"name": "directOwnerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "36676:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256) view returns (address,uint256,bool)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36676:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36629:69:6"
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "36716:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "36708:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1773,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36708:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1778,
												"initialValue": {
													"arguments": [
														{
															"id": 1776,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "36732:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1775,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "36724:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36724:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36708:32:6"
											},
											{
												"expression": {
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1779,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "36750:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1781,
														"indexExpression": {
															"id": 1780,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "36760:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36750:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36779:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "36750:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "36750:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1786,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "36812:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36827:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36819:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1787,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36819:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36819:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1791,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "36831:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "36791:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36791:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "36791:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1795,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "36889:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36925:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36917:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1796,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36917:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36917:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1800,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "36941:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36963:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1802,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "36978:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1794,
														"name": "_beforeNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "36849:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36849:146:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "36849:146:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37023:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37015:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1806,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37015:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37015:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1810,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "37027:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1805,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "37006:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37006:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "37006:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1814,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "37061:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1813,
														"name": "_cleanApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "37045:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37045:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "37045:24:6"
											},
											{
												"assignments": [
													1821
												],
												"declarations": [
													{
														"constant": false,
														"id": 1821,
														"mutability": "mutable",
														"name": "children",
														"nameLocation": "37095:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "37080:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC6059.Child[]"
														},
														"typeName": {
															"baseType": {
																"id": 1819,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1818,
																	"name": "Child",
																	"nameLocations": [
																		"37080:5:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 592,
																	"src": "37080:5:6"
																},
																"referencedDeclaration": 592,
																"src": "37080:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																	"typeString": "struct IERC6059.Child"
																}
															},
															"id": 1820,
															"nodeType": "ArrayTypeName",
															"src": "37080:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
																"typeString": "struct IERC6059.Child[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1825,
												"initialValue": {
													"arguments": [
														{
															"id": 1823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "37117:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1822,
														"name": "childrenOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2790,
														"src": "37106:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC6059.Child memory[] memory)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37106:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IERC6059.Child memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37080:45:6"
											},
											{
												"expression": {
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "37136:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1826,
															"name": "_activeChildren",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "37143:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
															}
														},
														"id": 1828,
														"indexExpression": {
															"id": 1827,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "37159:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37143:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
															"typeString": "struct IERC6059.Child storage ref[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "37136:31:6"
											},
											{
												"expression": {
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "37177:32:6",
													"subExpression": {
														"baseExpression": {
															"id": 1831,
															"name": "_pendingChildren",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "37184:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
															}
														},
														"id": 1833,
														"indexExpression": {
															"id": 1832,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "37201:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37184:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
															"typeString": "struct IERC6059.Child storage ref[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "37177:32:6"
											},
											{
												"expression": {
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "37219:38:6",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1836,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "37226:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
																	"typeString": "mapping(uint256 => mapping(address => address))"
																}
															},
															"id": 1838,
															"indexExpression": {
																"id": 1837,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1758,
																"src": "37242:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "37226:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1840,
														"indexExpression": {
															"id": 1839,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "37251:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37226:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "37219:38:6"
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "pendingRecursiveBurns",
														"nameLocation": "37276:21:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "37268:29:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37268:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1845,
												"nodeType": "VariableDeclarationStatement",
												"src": "37268:29:6"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "totalChildBurns",
														"nameLocation": "37315:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "37307:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1846,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37307:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1848,
												"nodeType": "VariableDeclarationStatement",
												"src": "37307:23:6"
											},
											{
												"assignments": [
													1850
												],
												"declarations": [
													{
														"constant": false,
														"id": 1850,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "37349:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "37341:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37341:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1853,
												"initialValue": {
													"expression": {
														"id": 1851,
														"name": "children",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "37358:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC6059.Child memory[] memory"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "37367:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "37358:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37341:32:6"
											},
											{
												"body": {
													"id": 1919,
													"nodeType": "Block",
													"src": "37427:1035:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1860,
																	"name": "totalChildBurns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "37445:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1861,
																	"name": "maxChildrenBurns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "37464:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37445:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1874,
															"nodeType": "IfStatement",
															"src": "37441:196:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1864,
																					"name": "children",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "37551:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IERC6059.Child memory[] memory"
																					}
																				},
																				"id": 1866,
																				"indexExpression": {
																					"id": 1865,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1855,
																					"src": "37560:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "37551:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																					"typeString": "struct IERC6059.Child memory"
																				}
																			},
																			"id": 1867,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "37563:15:6",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 591,
																			"src": "37551:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1868,
																					"name": "children",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "37600:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IERC6059.Child memory[] memory"
																					}
																				},
																				"id": 1870,
																				"indexExpression": {
																					"id": 1869,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1855,
																					"src": "37609:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "37600:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																					"typeString": "struct IERC6059.Child memory"
																				}
																			},
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "37612:7:6",
																			"memberName": "tokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 589,
																			"src": "37600:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1863,
																		"name": "MaxRecursiveBurnsReached",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "37505:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256) pure"
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37505:132:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1873,
																"nodeType": "RevertStatement",
																"src": "37498:139:6"
															}
														},
														{
															"expression": {
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "37651:103:6",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1875,
																			"name": "_childIsInActive",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "37658:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1880,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1876,
																					"name": "children",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "37675:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IERC6059.Child memory[] memory"
																					}
																				},
																				"id": 1878,
																				"indexExpression": {
																					"id": 1877,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1855,
																					"src": "37684:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "37675:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																					"typeString": "struct IERC6059.Child memory"
																				}
																			},
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "37687:15:6",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 591,
																			"src": "37675:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "37658:45:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1885,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1881,
																				"name": "children",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1821,
																				"src": "37721:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IERC6059.Child memory[] memory"
																				}
																			},
																			"id": 1883,
																			"indexExpression": {
																				"id": 1882,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1855,
																				"src": "37730:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37721:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																				"typeString": "struct IERC6059.Child memory"
																			}
																		},
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "37733:7:6",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 589,
																		"src": "37721:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "37658:96:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1887,
															"nodeType": "ExpressionStatement",
															"src": "37651:103:6"
														},
														{
															"id": 1894,
															"nodeType": "UncheckedBlock",
															"src": "37768:183:6",
															"statements": [
																{
																	"expression": {
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1888,
																			"name": "pendingRecursiveBurns",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1844,
																			"src": "37878:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1889,
																				"name": "maxChildrenBurns",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "37902:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1890,
																				"name": "totalChildBurns",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "37921:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "37902:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "37878:58:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1893,
																	"nodeType": "ExpressionStatement",
																	"src": "37878:58:6"
																}
															]
														},
														{
															"expression": {
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1895,
																	"name": "totalChildBurns",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "38189:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 1903,
																						"name": "children",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1821,
																						"src": "38288:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IERC6059.Child memory[] memory"
																						}
																					},
																					"id": 1905,
																					"indexExpression": {
																						"id": 1904,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1855,
																						"src": "38297:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "38288:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																						"typeString": "struct IERC6059.Child memory"
																					}
																				},
																				"id": 1906,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "38300:7:6",
																				"memberName": "tokenId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 589,
																				"src": "38288:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1907,
																					"name": "pendingRecursiveBurns",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1844,
																					"src": "38329:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1908,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "38353:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "38329:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1897,
																								"name": "children",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1821,
																								"src": "38233:8:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IERC6059.Child memory[] memory"
																								}
																							},
																							"id": 1899,
																							"indexExpression": {
																								"id": 1898,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1855,
																								"src": "38242:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "38233:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																								"typeString": "struct IERC6059.Child memory"
																							}
																						},
																						"id": 1900,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "38245:15:6",
																						"memberName": "contractAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 591,
																						"src": "38233:27:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1896,
																					"name": "IERC6059",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "38224:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																						"typeString": "type(contract IERC6059)"
																					}
																				},
																				"id": 1901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "38224:37:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC6059_$729",
																					"typeString": "contract IERC6059"
																				}
																			},
																			"id": 1902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "38262:4:6",
																			"memberName": "burn",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 622,
																			"src": "38224:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) external returns (uint256)"
																			}
																		},
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38224:148:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38391:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "38224:168:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38189:203:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1914,
															"nodeType": "ExpressionStatement",
															"src": "38189:203:6"
														},
														{
															"id": 1918,
															"nodeType": "UncheckedBlock",
															"src": "38406:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "38434:3:6",
																		"subExpression": {
																			"id": 1915,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1855,
																			"src": "38436:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1917,
																	"nodeType": "ExpressionStatement",
																	"src": "38434:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1857,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "37413:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1858,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "37417:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37413:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1920,
												"initializationExpression": {
													"assignments": [
														1855
													],
													"declarations": [
														{
															"constant": false,
															"id": 1855,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "37410:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1920,
															"src": "37402:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1854,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "37402:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1856,
													"nodeType": "VariableDeclarationStatement",
													"src": "37402:9:6"
												},
												"nodeType": "ForStatement",
												"src": "37397:1065:6"
											},
											{
												"expression": {
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "38561:29:6",
													"subExpression": {
														"baseExpression": {
															"id": 1921,
															"name": "_directOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "38568:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DirectOwner_$533_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.DirectOwner storage ref)"
															}
														},
														"id": 1923,
														"indexExpression": {
															"id": 1922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "38582:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38568:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DirectOwner_$533_storage",
															"typeString": "struct IERC6059.DirectOwner storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "38561:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1927,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "38621:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38636:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38628:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38628:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38628:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1932,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "38640:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1926,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "38601:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38601:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "38601:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1936,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "38697:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38733:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38725:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1937,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38725:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38725:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1941,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "38749:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38771:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1943,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "38786:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1935,
														"name": "_afterNestedTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "38658:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38658:145:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "38658:145:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1947,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "38827:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38842:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38834:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1948,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38834:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38834:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1952,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "38846:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1946,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "38818:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38818:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "EmitStatement",
												"src": "38813:41:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1956,
															"name": "immediateOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "38882:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38906:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38898:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1957,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38898:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38898:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1961,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "38910:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38920:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1963,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "38923:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1955,
														"name": "NestTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "38869:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38869:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "EmitStatement",
												"src": "38864:67:6"
											},
											{
												"expression": {
													"id": 1966,
													"name": "totalChildBurns",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1847,
													"src": "38949:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1967,
												"nodeType": "Return",
												"src": "38942:22:6"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "35958:541:6",
										"text": " @notice Used to burn a token.\n @dev When a token is burned, its children are recursively burned as well.\n @dev The approvals are cleared when the token is burned.\n @dev Requirements:\n  - `tokenId` must exist.\n @dev Emits a {Transfer} event.\n @dev Emits a {NestTransfer} event.\n @param tokenId ID of the token to burn\n @param maxChildrenBurns Maximum children to recursively burn\n @return uint256 The number of recursive burns it took to burn all of the children"
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "36513:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36536:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "36528:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36528:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "maxChildrenBurns",
												"nameLocation": "36561:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "36553:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36553:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36518:65:6"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "36610:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36610:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36609:9:6"
									},
									"scope": 3069,
									"src": "36504:2467:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "39202:292:6",
										"statements": [
											{
												"assignments": [
													1978
												],
												"declarations": [
													{
														"constant": false,
														"id": 1978,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "39220:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2010,
														"src": "39212:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1977,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39212:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [
														{
															"id": 1980,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "39236:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1979,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "39228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39228:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39212:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1983,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "39258:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1984,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "39264:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39258:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1989,
												"nodeType": "IfStatement",
												"src": "39254:54:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1986,
															"name": "ERC721ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "39278:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39278:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1988,
													"nodeType": "RevertStatement",
													"src": "39271:37:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1990,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "39323:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39323:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1992,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "39339:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "39323:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "39348:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 1995,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "39366:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1996,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "39373:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39373:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1994,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "39349:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39349:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39323:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2004,
												"nodeType": "IfStatement",
												"src": "39319:136:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2001,
															"name": "ERC721ApproveCallerIsNotOwnerNorApprovedForAll",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "39407:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39407:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2003,
													"nodeType": "RevertStatement",
													"src": "39400:55:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2006,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "39475:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2007,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "39479:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2005,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "39466:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39466:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "39466:21:6"
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "39098:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "095ea7b3",
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "39150:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39166:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "39158:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39158:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39178:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "39170:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39157:29:6"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39202:0:6"
									},
									"scope": 3069,
									"src": "39141:353:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "39633:100:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "39658:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2019,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "39643:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39643:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "39643:23:6"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2023,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "39684:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
																"typeString": "mapping(uint256 => mapping(address => address))"
															}
														},
														"id": 2025,
														"indexExpression": {
															"id": 2024,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "39700:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39684:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 2029,
													"indexExpression": {
														"arguments": [
															{
																"id": 2027,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "39717:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2026,
															"name": "ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "39709:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39709:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39684:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2018,
												"id": 2030,
												"nodeType": "Return",
												"src": "39677:49:6"
											}
										]
									},
									"documentation": {
										"id": 2012,
										"nodeType": "StructuredDocumentation",
										"src": "39500:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "081812fc",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "39552:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39581:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "39573:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39563:31:6"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "39624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39623:9:6"
									},
									"scope": 3069,
									"src": "39543:190:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 2064,
										"nodeType": "Block",
										"src": "39857:203:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2040,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "39871:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39871:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2042,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "39887:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39871:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "IfStatement",
												"src": "39867:60:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2044,
															"name": "ERC721ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "39904:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39904:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2046,
													"nodeType": "RevertStatement",
													"src": "39897:30:6"
												}
											},
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2048,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "39937:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2052,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2049,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "39956:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39956:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "39937:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2053,
														"indexExpression": {
															"id": 2051,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "39970:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39937:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2054,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "39982:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39937:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "39937:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2058,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "40020:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40020:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2060,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "40034:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2061,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "40044:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2057,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "40005:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40005:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2063,
												"nodeType": "EmitStatement",
												"src": "40000:53:6"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "39739:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "a22cb465",
									"id": 2065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "39791:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39817:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "39809:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39809:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "39832:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "39827:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2036,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39827:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39808:33:6"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39857:0:6"
									},
									"scope": 3069,
									"src": "39782:278:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "40225:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2075,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "40242:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2077,
														"indexExpression": {
															"id": 2076,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "40261:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "40242:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2079,
													"indexExpression": {
														"id": 2078,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2070,
														"src": "40268:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40242:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2074,
												"id": 2080,
												"nodeType": "Return",
												"src": "40235:42:6"
											}
										]
									},
									"documentation": {
										"id": 2066,
										"nodeType": "StructuredDocumentation",
										"src": "40066:38:6",
										"text": " @inheritdoc IERC721"
									},
									"functionSelector": "e985e9c5",
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "40118:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "40152:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "40144:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40144:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "40175:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "40167:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40167:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40134:55:6"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "40219:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40219:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40218:6:6"
									},
									"scope": 3069,
									"src": "40109:175:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "40617:138:6",
										"statements": [
											{
												"assignments": [
													2091
												],
												"declarations": [
													{
														"constant": false,
														"id": 2091,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "40635:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "40627:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2090,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40627:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2095,
												"initialValue": {
													"arguments": [
														{
															"id": 2093,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "40651:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2092,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "40643:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40643:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40627:32:6"
											},
											{
												"expression": {
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2096,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "40669:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
																	"typeString": "mapping(uint256 => mapping(address => address))"
																}
															},
															"id": 2099,
															"indexExpression": {
																"id": 2097,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "40685:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "40669:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 2100,
														"indexExpression": {
															"id": 2098,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "40694:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "40669:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2101,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "40703:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40669:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "40669:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2105,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "40729:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "40736:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "40740:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2104,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "40720:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40720:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2109,
												"nodeType": "EmitStatement",
												"src": "40715:33:6"
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "40290:258:6",
										"text": " @notice Used to grant an approval to manage a given token.\n @dev Emits an {Approval} event.\n @param to Address to which the approval is being granted\n @param tokenId ID of the token for which the approval is being granted"
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "40562:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40579:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "40571:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40571:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "40583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40583:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40570:29:6"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40617:0:6"
									},
									"scope": 3069,
									"src": "40553:202:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "41298:256:6",
										"statements": [
											{
												"expression": {
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2121,
															"name": "_directOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "41308:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DirectOwner_$533_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.DirectOwner storage ref)"
															}
														},
														"id": 2123,
														"indexExpression": {
															"id": 2122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "41322:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41308:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DirectOwner_$533_storage",
															"typeString": "struct IERC6059.DirectOwner storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2125,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "41373:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2126,
																"name": "destinationId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "41398:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2124,
															"name": "DirectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "41333:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_DirectOwner_$533_storage_ptr_$",
																"typeString": "type(struct IERC6059.DirectOwner storage pointer)"
															}
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"41359:12:6",
															"41389:7:6"
														],
														"names": [
															"ownerAddress",
															"tokenId"
														],
														"nodeType": "FunctionCall",
														"src": "41333:89:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DirectOwner_$533_memory_ptr",
															"typeString": "struct IERC6059.DirectOwner memory"
														}
													},
													"src": "41308:114:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DirectOwner_$533_storage",
														"typeString": "struct IERC6059.DirectOwner storage ref"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "41308:114:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41501:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41493:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2131,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41493:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41493:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2135,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "41505:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2130,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "41484:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41484:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "41484:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2139,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "41539:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2138,
														"name": "_cleanApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "41523:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41523:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "41523:24:6"
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "40761:402:6",
										"text": " @notice Used to update the owner of the token and clear the approvals associated with the previous owner.\n @dev The `destinationId` should equal `0` if the new owner is an externally owned account.\n @param tokenId ID of the token being updated\n @param destinationId ID of the token to receive the given token\n @param to Address of account to receive the token"
									},
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateOwnerAndClearApprovals",
									"nameLocation": "41177:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41224:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "41216:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41216:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "41249:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "41241:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41241:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41280:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "41272:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41272:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41206:82:6"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41298:0:6"
									},
									"scope": 3069,
									"src": "41168:386:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "41782:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "41560:158:6",
										"text": " @notice Used to remove approvals for the current owner of the given token.\n @param tokenId ID of the token to clear the approvals for"
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cleanApprovals",
									"nameLocation": "41732:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41756:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "41748:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41748:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41747:17:6"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41782:0:6"
									},
									"scope": 3069,
									"src": "41723:61:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "42428:179:6",
										"statements": [
											{
												"assignments": [
													2161
												],
												"declarations": [
													{
														"constant": false,
														"id": 2161,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "42446:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2182,
														"src": "42438:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42438:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2165,
												"initialValue": {
													"arguments": [
														{
															"id": 2163,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "42462:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2162,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "42454:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42454:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42438:32:6"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2166,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "42488:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2167,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2161,
																		"src": "42499:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "42488:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2170,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "42537:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2171,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2153,
																			"src": "42544:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2169,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "42520:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42520:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "42488:64:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2175,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2155,
																			"src": "42580:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2174,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2032,
																		"src": "42568:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42568:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2177,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "42592:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "42568:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42488:111:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2180,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "42487:113:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2159,
												"id": 2181,
												"nodeType": "Return",
												"src": "42480:120:6"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "41907:395:6",
										"text": " @notice Used to check whether the given account is allowed to manage the given token.\n @dev Requirements:\n  - `tokenId` must exist.\n @param spender Address that is being checked for approval\n @param tokenId ID of the token being checked\n @return bool The boolean value indicating whether the `spender` is approved to manage the given token"
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "42316:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "42352:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "42344:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42344:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42377:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "42369:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42369:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42334:56:6"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "42422:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42422:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42421:6:6"
									},
									"scope": 3069,
									"src": "42307:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "43132:405:6",
										"statements": [
											{
												"assignments": [
													2194,
													2196,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2194,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "43151:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "43143:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2193,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43143:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2196,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "43166:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "43158:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "43158:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2200,
												"initialValue": {
													"arguments": [
														{
															"id": 2198,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "43194:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2197,
														"name": "directOwnerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "43180:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256) view returns (address,uint256,bool)"
														}
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43180:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43142:60:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2201,
														"name": "parentId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "43280:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43292:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43280:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2210,
												"nodeType": "IfStatement",
												"src": "43276:69:6",
												"trueBody": {
													"id": 2209,
													"nodeType": "Block",
													"src": "43295:50:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2204,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2186,
																			"src": "43317:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2205,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2194,
																			"src": "43328:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "43317:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2207,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43316:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 2192,
															"id": 2208,
															"nodeType": "Return",
															"src": "43309:25:6"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2211,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "43418:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2212,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2194,
																		"src": "43429:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "43418:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2215,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2194,
																			"src": "43467:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2216,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2186,
																			"src": "43474:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2214,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "43450:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43450:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "43418:64:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2220,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2188,
																			"src": "43510:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2219,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2032,
																		"src": "43498:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43498:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2222,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "43522:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "43498:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "43418:111:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2225,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "43417:113:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2192,
												"id": 2226,
												"nodeType": "Return",
												"src": "43410:120:6"
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "42613:387:6",
										"text": " @notice Used to check whether the account is approved to manage the token or its direct owner.\n @param spender Address that is being checked for approval or direct ownership\n @param tokenId ID of the token being checked\n @return bool The boolean value indicating whether the `spender` is approved to manage the given token or its\n  direct owner"
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrDirectOwner",
									"nameLocation": "43014:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "43056:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "43048:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43048:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43081:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "43073:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43073:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43038:56:6"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "43126:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43126:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43125:6:6"
									},
									"scope": 3069,
									"src": "43005:532:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2242,
										"nodeType": "Block",
										"src": "44092:69:6",
										"statements": [
											{
												"condition": {
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "44106:17:6",
													"subExpression": {
														"arguments": [
															{
																"id": 2235,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2231,
																"src": "44115:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2234,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "44107:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44107:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2241,
												"nodeType": "IfStatement",
												"src": "44102:52:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2238,
															"name": "ERC721InvalidTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "44132:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44132:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2240,
													"nodeType": "RevertStatement",
													"src": "44125:29:6"
												}
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "43543:481:6",
										"text": " @notice Used to enforce that the given token has been minted.\n @dev Reverts if the `tokenId` has not been minted yet.\n @dev The validation checks whether the owner of a given token is a `0x0` address and considers it not minted if\n  it is. This means that both tokens that haven't been minted yet as well as the ones that have already been\n  burned will cause the transaction to be reverted.\n @param tokenId ID of the token to check"
									},
									"id": 2243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "44038:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44061:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "44053:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44053:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44052:17:6"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44092:0:6"
									},
									"scope": 3069,
									"src": "44029:132:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "44556:73:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2251,
																"name": "_directOwners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "44573:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DirectOwner_$533_storage_$",
																	"typeString": "mapping(uint256 => struct IERC6059.DirectOwner storage ref)"
																}
															},
															"id": 2253,
															"indexExpression": {
																"id": 2252,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "44587:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "44573:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DirectOwner_$533_storage",
																"typeString": "struct IERC6059.DirectOwner storage ref"
															}
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44596:12:6",
														"memberName": "ownerAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "44573:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44620:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2255,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44612:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44612:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44573:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2250,
												"id": 2260,
												"nodeType": "Return",
												"src": "44566:56:6"
											}
										]
									},
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "44167:313:6",
										"text": " @notice Used to check whether the given token exists.\n @dev Tokens start existing when they are minted (`_mint`) and stop existing when they are burned (`_burn`).\n @param tokenId ID of the token being checked\n @return bool The boolean value signifying whether the token exists"
									},
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "44494:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44510:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "44502:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44502:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44501:17:6"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "44550:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44550:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44549:6:6"
									},
									"scope": 3069,
									"src": "44485:144:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "45332:789:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2276,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "45346:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45349:10:6",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "45346:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45346:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2320,
													"nodeType": "Block",
													"src": "46079:36:6",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46100:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2275,
															"id": 2319,
															"nodeType": "Return",
															"src": "46093:11:6"
														}
													]
												},
												"id": 2321,
												"nodeType": "IfStatement",
												"src": "45342:773:6",
												"trueBody": {
													"id": 2317,
													"nodeType": "Block",
													"src": "45363:710:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2298,
																		"nodeType": "Block",
																		"src": "45603:91:6",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2292,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2290,
																						"src": "45628:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2293,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 133,
																								"src": "45638:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2294,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "45654:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 132,
																							"src": "45638:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "45671:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "45638:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "45628:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 2275,
																				"id": 2297,
																				"nodeType": "Return",
																				"src": "45621:58:6"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2299,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2291,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2290,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "45595:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 2299,
																				"src": "45588:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2289,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "45588:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "45587:15:6"
																	},
																	"src": "45579:115:6"
																},
																{
																	"block": {
																		"id": 2314,
																		"nodeType": "Block",
																		"src": "45723:340:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2303,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2301,
																							"src": "45745:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2304,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "45752:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "45745:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2305,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "45762:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "45745:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2312,
																					"nodeType": "Block",
																					"src": "45859:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "45945:86:6",
																								"nodeType": "YulBlock",
																								"src": "45945:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "45982:2:6",
																															"nodeType": "YulLiteral",
																															"src": "45982:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "45986:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "45986:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "45978:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "45978:3:6"
																													},
																													"nativeSrc": "45978:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "45978:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "46001:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "46001:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "45995:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "45995:5:6"
																													},
																													"nativeSrc": "45995:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "45995:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "45971:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "45971:6:6"
																											},
																											"nativeSrc": "45971:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "45971:38:6"
																										},
																										"nativeSrc": "45971:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "45971:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 2301,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "45986:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2301,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "46001:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 2311,
																							"nodeType": "InlineAssembly",
																							"src": "45936:95:6"
																						}
																					]
																				},
																				"id": 2313,
																				"nodeType": "IfStatement",
																				"src": "45741:308:6",
																				"trueBody": {
																					"id": 2310,
																					"nodeType": "Block",
																					"src": "45765:88:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2307,
																									"name": "ERC721TransferToNonReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 759,
																									"src": "45794:38:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2308,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "45794:40:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2309,
																							"nodeType": "RevertStatement",
																							"src": "45787:47:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2315,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2302,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2301,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "45715:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 2315,
																				"src": "45702:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2300,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "45702:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "45701:21:6"
																	},
																	"src": "45695:368:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "45455:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45455:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2285,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2265,
																		"src": "45489:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2286,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "45515:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2287,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2271,
																		"src": "45544:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2280,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2267,
																				"src": "45413:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2279,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 133,
																			"src": "45397:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45397:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "45417:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "45397:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45397:169:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2316,
															"nodeType": "TryStatement",
															"src": "45377:686:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "44635:537:6",
										"text": " @notice Used to invoke {IERC721Receiver-onERC721Received} on a target address.\n @dev The call is not executed if the target address is not a contract.\n @param from Address representing the previous owner of the given token\n @param to Yarget address that will receive the tokens\n @param tokenId ID of the token to be transferred\n @param data Optional data to send along with the call\n @return bool Boolean value signifying whether the call correctly returned the expected magic value"
									},
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "45186:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "45226:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "45218:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45218:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45248:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "45240:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45240:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45268:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "45260:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45260:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45298:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "45285:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45285:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45208:100:6"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "45326:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45326:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45325:6:6"
									},
									"scope": 3069,
									"src": "45177:944:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										632
									],
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "47091:741:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2334,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "47116:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2333,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "47101:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47101:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "47101:24:6"
											},
											{
												"assignments": [
													2338
												],
												"declarations": [
													{
														"constant": false,
														"id": 2338,
														"mutability": "mutable",
														"name": "childAddress",
														"nameLocation": "47144:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2400,
														"src": "47136:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47136:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2341,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2339,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "47159:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47159:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47136:35:6"
											},
											{
												"condition": {
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "47185:26:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2342,
																"name": "childAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "47186:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47199:10:6",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 178,
															"src": "47186:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47186:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2349,
												"nodeType": "IfStatement",
												"src": "47181:54:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2346,
															"name": "IsNotContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "47220:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47220:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2348,
													"nodeType": "RevertStatement",
													"src": "47213:22:6"
												}
											},
											{
												"assignments": [
													2352
												],
												"declarations": [
													{
														"constant": false,
														"id": 2352,
														"mutability": "mutable",
														"name": "child",
														"nameLocation": "47259:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2400,
														"src": "47246:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
															"typeString": "struct IERC6059.Child"
														},
														"typeName": {
															"id": 2351,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2350,
																"name": "Child",
																"nameLocations": [
																	"47246:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 592,
																"src": "47246:5:6"
															},
															"referencedDeclaration": 592,
															"src": "47246:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																"typeString": "struct IERC6059.Child"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2357,
												"initialValue": {
													"arguments": [
														{
															"id": 2354,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "47304:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2355,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "47339:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2353,
														"name": "Child",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "47267:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Child_$592_storage_ptr_$",
															"typeString": "type(struct IERC6059.Child storage pointer)"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"47287:15:6",
														"47330:7:6"
													],
													"names": [
														"contractAddress",
														"tokenId"
													],
													"nodeType": "FunctionCall",
													"src": "47267:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
														"typeString": "struct IERC6059.Child memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47246:111:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2359,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "47384:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2360,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "47394:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2361,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "47408:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2358,
														"name": "_beforeAddChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2960,
														"src": "47368:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47368:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "47368:48:6"
											},
											{
												"assignments": [
													2365
												],
												"declarations": [
													{
														"constant": false,
														"id": 2365,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "47435:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2400,
														"src": "47427:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47427:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2370,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2367,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "47462:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2366,
															"name": "pendingChildrenOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "47444:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC6059.Child memory[] memory)"
															}
														},
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47444:27:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC6059.Child memory[] memory"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "47472:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "47444:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47427:51:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2371,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "47493:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "313238",
														"id": 2372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47502:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "47493:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2385,
													"nodeType": "Block",
													"src": "47576:59:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2382,
																	"name": "MaxPendingChildrenReached",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "47597:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47597:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2384,
															"nodeType": "RevertStatement",
															"src": "47590:34:6"
														}
													]
												},
												"id": 2386,
												"nodeType": "IfStatement",
												"src": "47489:146:6",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "47507:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2378,
																		"name": "child",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "47553:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																			"typeString": "struct IERC6059.Child memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																			"typeString": "struct IERC6059.Child memory"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 2374,
																			"name": "_pendingChildren",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "47521:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
																			}
																		},
																		"id": 2376,
																		"indexExpression": {
																			"id": 2375,
																			"name": "parentId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "47538:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "47521:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																			"typeString": "struct IERC6059.Child storage ref[] storage ref"
																		}
																	},
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "47548:4:6",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "47521:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$_t_struct$_Child_$592_storage_$returns$__$attached_to$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct IERC6059.Child storage ref[] storage pointer,struct IERC6059.Child storage ref)"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47521:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2380,
															"nodeType": "ExpressionStatement",
															"src": "47521:38:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2388,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "47727:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2389,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "47737:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2390,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "47745:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2391,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "47759:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2387,
														"name": "ChildProposed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "47713:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47713:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2393,
												"nodeType": "EmitStatement",
												"src": "47708:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2395,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "47793:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2396,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "47803:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2397,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "47817:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2394,
														"name": "_afterAddChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "47778:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47778:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2399,
												"nodeType": "ExpressionStatement",
												"src": "47778:47:6"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "46254:715:6",
										"text": " @notice Used to add a child token to a given parent token.\n @dev This adds the iichild token into the given parent token's pending child tokens array.\n @dev You MUST NOT call this method directly. To add a a child to an NFT you must use either\n  `nestTransfer`, `nestMint` or `transferChild` to the NFT.\n @dev Requirements:\n  - `ownerOf` on the child contract must resolve to the called contract.\n  - The pending array of the parent contract must not be full.\n @param parentId ID of the parent token to receive the new child token\n @param childId ID of the new proposed child token\n @param data Additional data with no specified format"
									},
									"functionSelector": "635490cc",
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addChild",
									"nameLocation": "46983:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "47009:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "47001:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "47035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "47027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "47065:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "47052:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47052:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46991:84:6"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47091:0:6"
									},
									"scope": 3069,
									"src": "46974:858:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										644
									],
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "48775:74:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2417,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "48798:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2418,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "48808:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2419,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "48820:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2420,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "48834:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2416,
														"name": "_acceptChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2515,
														"src": "48785:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48785:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "48785:57:6"
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "47838:751:6",
										"text": " @notice @notice Used to accept a pending child token for a given parent token.\n @dev This moves the child token from parent token's pending child tokens array into the active child tokens\n  array.\n @param parentId ID of the parent token for which the child token is being accepted\n @param childIndex Index of a child tokem in the given parent's pending children array\n @param childAddress Address of the collection smart contract of the child token expected to be located at the\n  specified index of the given parent token's pending children array\n @param childId ID of the child token expected to be located at the specified index of the given parent token's\n  pending children array"
									},
									"functionSelector": "e97ceaa8",
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2413,
													"name": "parentId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2404,
													"src": "48765:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2414,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2412,
												"name": "onlyApprovedOrOwner",
												"nameLocations": [
													"48745:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "48745:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "48745:29:6"
										}
									],
									"name": "acceptChild",
									"nameLocation": "48603:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "48632:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48624:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "48658:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48650:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48650:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "48686:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48678:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48678:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "48716:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48708:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48614:115:6"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48775:0:6"
									},
									"scope": 3069,
									"src": "48594:255:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2514,
										"nodeType": "Block",
										"src": "49886:815:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2437,
																	"name": "parentId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "49918:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2436,
																"name": "pendingChildrenOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2812,
																"src": "49900:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) view returns (struct IERC6059.Child memory[] memory)"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49900:27:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC6059.Child memory[] memory"
															}
														},
														"id": 2439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "49928:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "49900:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2440,
														"name": "childIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2429,
														"src": "49938:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49900:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2445,
												"nodeType": "IfStatement",
												"src": "49896:102:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2442,
															"name": "PendingChildIndexOutOfRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "49969:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49969:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2444,
													"nodeType": "RevertStatement",
													"src": "49962:36:6"
												}
											},
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "child",
														"nameLocation": "50022:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2514,
														"src": "50009:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
															"typeString": "struct IERC6059.Child"
														},
														"typeName": {
															"id": 2447,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2446,
																"name": "Child",
																"nameLocations": [
																	"50009:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 592,
																"src": "50009:5:6"
															},
															"referencedDeclaration": 592,
															"src": "50009:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																"typeString": "struct IERC6059.Child"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2453,
												"initialValue": {
													"arguments": [
														{
															"id": 2450,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "50045:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2451,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "50055:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2449,
														"name": "pendingChildOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2878,
														"src": "50030:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_struct$_Child_$592_memory_ptr_$",
															"typeString": "function (uint256,uint256) view returns (struct IERC6059.Child memory)"
														}
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50030:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
														"typeString": "struct IERC6059.Child memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50009:57:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2455,
															"name": "child",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "50096:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																"typeString": "struct IERC6059.Child memory"
															}
														},
														{
															"id": 2456,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "50103:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2457,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "50117:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																"typeString": "struct IERC6059.Child memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2454,
														"name": "_checkExpectedChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "50076:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Child_$592_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (struct IERC6059.Child memory,address,uint256) pure"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50076:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2459,
												"nodeType": "ExpressionStatement",
												"src": "50076:49:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2460,
																"name": "_childIsInActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "50139:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2462,
															"indexExpression": {
																"id": 2461,
																"name": "childAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "50156:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "50139:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2464,
														"indexExpression": {
															"id": 2463,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "50170:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "50139:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50182:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "50139:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2470,
												"nodeType": "IfStatement",
												"src": "50135:89:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2467,
															"name": "ChildAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "50204:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50204:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2469,
													"nodeType": "RevertStatement",
													"src": "50197:27:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2472,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "50254:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2473,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "50264:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2474,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "50276:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2475,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "50290:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2471,
														"name": "_beforeAcceptChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2984,
														"src": "50235:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50235:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "50235:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2479,
																"name": "_pendingChildren",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "50361:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
																}
															},
															"id": 2481,
															"indexExpression": {
																"id": 2480,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "50378:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "50361:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																"typeString": "struct IERC6059.Child storage ref[] storage ref"
															}
														},
														{
															"id": 2482,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "50389:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																"typeString": "struct IERC6059.Child storage ref[] storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2478,
														"name": "_removeChildByIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "50341:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct IERC6059.Child storage ref[] storage pointer,uint256)"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50341:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "50341:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2489,
															"name": "child",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "50468:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																"typeString": "struct IERC6059.Child memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																"typeString": "struct IERC6059.Child memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2485,
																"name": "_activeChildren",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "50437:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
																}
															},
															"id": 2487,
															"indexExpression": {
																"id": 2486,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "50453:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "50437:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																"typeString": "struct IERC6059.Child storage ref[] storage ref"
															}
														},
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "50463:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "50437:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$_t_struct$_Child_$592_storage_$returns$__$attached_to$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct IERC6059.Child storage ref[] storage pointer,struct IERC6059.Child storage ref)"
														}
													},
													"id": 2490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50437:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2491,
												"nodeType": "ExpressionStatement",
												"src": "50437:37:6"
											},
											{
												"expression": {
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2492,
																"name": "_childIsInActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "50484:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2495,
															"indexExpression": {
																"id": 2493,
																"name": "childAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "50501:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "50484:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2496,
														"indexExpression": {
															"id": 2494,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "50515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50484:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50526:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "50484:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2499,
												"nodeType": "ExpressionStatement",
												"src": "50484:43:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2501,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "50577:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2502,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "50587:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2503,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "50599:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2504,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "50613:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2500,
														"name": "ChildAccepted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "50563:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50563:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2506,
												"nodeType": "EmitStatement",
												"src": "50558:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2508,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "50650:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2509,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "50660:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2510,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "50672:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2511,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "50686:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2507,
														"name": "_afterAcceptChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "50632:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50632:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2513,
												"nodeType": "ExpressionStatement",
												"src": "50632:62:6"
											}
										]
									},
									"documentation": {
										"id": 2425,
										"nodeType": "StructuredDocumentation",
										"src": "48855:872:6",
										"text": " @notice Used to accept a pending child token for a given parent token.\n @dev This moves the child token from parent token's pending child tokens array into the active child tokens\n  array.\n @dev Requirements:\n  - `tokenId` must exist\n  - `index` must be in range of the pending children array\n @param parentId ID of the parent token for which the child token is being accepted\n @param childIndex Index of a child tokem in the given parent's pending children array\n @param childAddress Address of the collection smart contract of the child token expected to be located at the\n  specified index of the given parent token's pending children array\n @param childId ID of the child token expected to be located at the specified index of the given parent token's\n  pending children array"
									},
									"id": 2515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_acceptChild",
									"nameLocation": "49741:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "49771:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "49763:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49763:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "49797:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "49789:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49789:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "49825:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "49817:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49817:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "49855:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "49847:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49847:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49753:115:6"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49886:0:6"
									},
									"scope": 3069,
									"src": "49732:969:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										652
									],
									"body": {
										"id": 2531,
										"nodeType": "Block",
										"src": "51229:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2527,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2518,
															"src": "51258:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2528,
															"name": "maxRejections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "51267:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2526,
														"name": "_rejectAllChildren",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2568,
														"src": "51239:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51239:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2530,
												"nodeType": "ExpressionStatement",
												"src": "51239:42:6"
											}
										]
									},
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "50707:406:6",
										"text": " @notice Used to reject all pending children of a given parent token.\n @dev Removes the children from the pending array mapping.\n @dev This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the\n  rootOwner of the previous parent.\n @param tokenId ID of the parent token for which to reject all of the pending tokens"
									},
									"functionSelector": "97961336",
									"id": 2532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2523,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2518,
													"src": "51220:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2522,
												"name": "onlyApprovedOrOwner",
												"nameLocations": [
													"51200:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "51200:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "51200:28:6"
										}
									],
									"name": "rejectAllChildren",
									"nameLocation": "51127:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51153:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "51145:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51145:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "maxRejections",
												"nameLocation": "51170:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "51162:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51162:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51144:40:6"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51229:0:6"
									},
									"scope": 3069,
									"src": "51118:170:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "52039:289:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2540,
																"name": "_pendingChildren",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "52053:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
																}
															},
															"id": 2542,
															"indexExpression": {
																"id": 2541,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "52070:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "52053:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																"typeString": "struct IERC6059.Child storage ref[] storage ref"
															}
														},
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52079:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52053:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2544,
														"name": "maxRejections",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2537,
														"src": "52088:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52053:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2549,
												"nodeType": "IfStatement",
												"src": "52049:101:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2546,
															"name": "UnexpectedNumberOfChildren",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "52122:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52122:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2548,
													"nodeType": "RevertStatement",
													"src": "52115:35:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2551,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "52186:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2550,
														"name": "_beforeRejectAllChildren",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3034,
														"src": "52161:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52161:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2553,
												"nodeType": "ExpressionStatement",
												"src": "52161:33:6"
											},
											{
												"expression": {
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "52204:32:6",
													"subExpression": {
														"baseExpression": {
															"id": 2554,
															"name": "_pendingChildren",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "52211:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
															}
														},
														"id": 2556,
														"indexExpression": {
															"id": 2555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "52228:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52211:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
															"typeString": "struct IERC6059.Child storage ref[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2558,
												"nodeType": "ExpressionStatement",
												"src": "52204:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2560,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "52271:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2559,
														"name": "AllChildrenRejected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "52251:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52251:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2562,
												"nodeType": "EmitStatement",
												"src": "52246:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2564,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "52313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2563,
														"name": "_afterRejectAllChildren",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3041,
														"src": "52289:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52289:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2566,
												"nodeType": "ExpressionStatement",
												"src": "52289:32:6"
											}
										]
									},
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "51294:635:6",
										"text": " @notice Used to reject all pending children of a given parent token.\n @dev Removes the children from the pending array mapping.\n @dev This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the\n  rootOwner of the previous parent.\n @dev Requirements:\n  - `tokenId` must exist\n @param tokenId ID of the parent token for which to reject all of the pending tokens.\n @param maxRejections Maximum number of expected children to reject, used to prevent from\n  rejecting children which arrive just before this operation."
									},
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_rejectAllChildren",
									"nameLocation": "51943:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51970:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "51962:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51962:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "maxRejections",
												"nameLocation": "51987:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "51979:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51979:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51961:40:6"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52039:0:6"
									},
									"scope": 3069,
									"src": "51934:394:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										672
									],
									"body": {
										"id": 2602,
										"nodeType": "Block",
										"src": "53555:217:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "53593:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2593,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "53614:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2594,
															"name": "destinationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "53630:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2595,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "53657:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2596,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "53681:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2597,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "53707:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2598,
															"name": "isPending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2583,
															"src": "53728:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2599,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2585,
															"src": "53751:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2591,
														"name": "_transferChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "53565:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,address,uint256,bool,bytes memory)"
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53565:200:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2601,
												"nodeType": "ExpressionStatement",
												"src": "53565:200:6"
											}
										]
									},
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "52334:933:6",
										"text": " @notice Used to transfer a child token from a given parent token.\n @param tokenId ID of the parent token from which the child token is being transferred\n @param to Address to which to transfer the token to\n @param destinationId ID of the token to receive this child token (MUST be 0 if the destination is not a token)\n @param childIndex Index of a token we are transferring, in the array it belongs to (can be either active array or\n  pending array)\n @param childAddress Address of the child token's collection smart contract.\n @param childId ID of the child token in its own collection smart contract.\n @param isPending A boolean value indicating whether the child token being transferred is in the pending array of the\n  parent token (`true`) or in the active array (`false`)\n @param data Additional data with no specified format, sent in call to `_to`"
									},
									"functionSelector": "defa80c3",
									"id": 2603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2588,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2571,
													"src": "53546:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2589,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2587,
												"name": "onlyApprovedOrOwner",
												"nameLocations": [
													"53526:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "53526:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "53526:28:6"
										}
									],
									"name": "transferChild",
									"nameLocation": "53281:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53312:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53304:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53304:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53337:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53329:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53329:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "53357:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53349:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "53388:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53380:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53380:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "53416:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53408:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53408:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "53446:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53438:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "isPending",
												"nameLocation": "53468:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53463:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53463:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "53500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "53487:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53487:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53294:216:6"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53555:0:6"
									},
									"scope": 3069,
									"src": "53272:500:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2743,
										"nodeType": "Block",
										"src": "55253:1560:6",
										"statements": [
											{
												"assignments": [
													2625
												],
												"declarations": [
													{
														"constant": false,
														"id": 2625,
														"mutability": "mutable",
														"name": "child",
														"nameLocation": "55276:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2743,
														"src": "55263:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
															"typeString": "struct IERC6059.Child"
														},
														"typeName": {
															"id": 2624,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2623,
																"name": "Child",
																"nameLocations": [
																	"55263:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 592,
																"src": "55263:5:6"
															},
															"referencedDeclaration": 592,
															"src": "55263:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																"typeString": "struct IERC6059.Child"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2626,
												"nodeType": "VariableDeclarationStatement",
												"src": "55263:18:6"
											},
											{
												"condition": {
													"id": 2627,
													"name": "isPending",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2618,
													"src": "55295:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2643,
													"nodeType": "Block",
													"src": "55380:61:6",
													"statements": [
														{
															"expression": {
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2636,
																	"name": "child",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2625,
																	"src": "55394:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																		"typeString": "struct IERC6059.Child memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2638,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2606,
																			"src": "55410:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2639,
																			"name": "childIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "55419:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2637,
																		"name": "childOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2845,
																		"src": "55402:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_struct$_Child_$592_memory_ptr_$",
																			"typeString": "function (uint256,uint256) view returns (struct IERC6059.Child memory)"
																		}
																	},
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55402:28:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																		"typeString": "struct IERC6059.Child memory"
																	}
																},
																"src": "55394:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																	"typeString": "struct IERC6059.Child memory"
																}
															},
															"id": 2642,
															"nodeType": "ExpressionStatement",
															"src": "55394:36:6"
														}
													]
												},
												"id": 2644,
												"nodeType": "IfStatement",
												"src": "55291:150:6",
												"trueBody": {
													"id": 2635,
													"nodeType": "Block",
													"src": "55306:68:6",
													"statements": [
														{
															"expression": {
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2628,
																	"name": "child",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2625,
																	"src": "55320:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																		"typeString": "struct IERC6059.Child memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2630,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2606,
																			"src": "55343:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2631,
																			"name": "childIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "55352:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2629,
																		"name": "pendingChildOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2878,
																		"src": "55328:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_struct$_Child_$592_memory_ptr_$",
																			"typeString": "function (uint256,uint256) view returns (struct IERC6059.Child memory)"
																		}
																	},
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55328:35:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																		"typeString": "struct IERC6059.Child memory"
																	}
																},
																"src": "55320:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																	"typeString": "struct IERC6059.Child memory"
																}
															},
															"id": 2634,
															"nodeType": "ExpressionStatement",
															"src": "55320:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2646,
															"name": "child",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "55470:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																"typeString": "struct IERC6059.Child memory"
															}
														},
														{
															"id": 2647,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "55477:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2648,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "55491:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																"typeString": "struct IERC6059.Child memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2645,
														"name": "_checkExpectedChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "55450:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Child_$592_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (struct IERC6059.Child memory,address,uint256) pure"
														}
													},
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55450:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2650,
												"nodeType": "ExpressionStatement",
												"src": "55450:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2652,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2606,
															"src": "55544:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2653,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "55565:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2654,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "55589:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2655,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "55615:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2656,
															"name": "isPending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "55636:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2651,
														"name": "_beforeTransferChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3012,
														"src": "55510:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256,bool)"
														}
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55510:145:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2658,
												"nodeType": "ExpressionStatement",
												"src": "55510:145:6"
											},
											{
												"condition": {
													"id": 2659,
													"name": "isPending",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2618,
													"src": "55670:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2682,
													"nodeType": "Block",
													"src": "55770:142:6",
													"statements": [
														{
															"expression": {
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "55784:46:6",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2668,
																			"name": "_childIsInActive",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "55791:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2670,
																		"indexExpression": {
																			"id": 2669,
																			"name": "childAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2614,
																			"src": "55808:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "55791:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2672,
																	"indexExpression": {
																		"id": 2671,
																		"name": "childId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2616,
																		"src": "55822:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "55791:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2674,
															"nodeType": "ExpressionStatement",
															"src": "55784:46:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2676,
																			"name": "_activeChildren",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "55864:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
																			}
																		},
																		"id": 2678,
																		"indexExpression": {
																			"id": 2677,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2606,
																			"src": "55880:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "55864:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																			"typeString": "struct IERC6059.Child storage ref[] storage ref"
																		}
																	},
																	{
																		"id": 2679,
																		"name": "childIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "55890:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																			"typeString": "struct IERC6059.Child storage ref[] storage ref"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2675,
																	"name": "_removeChildByIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "55844:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct IERC6059.Child storage ref[] storage pointer,uint256)"
																	}
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55844:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2681,
															"nodeType": "ExpressionStatement",
															"src": "55844:57:6"
														}
													]
												},
												"id": 2683,
												"nodeType": "IfStatement",
												"src": "55666:246:6",
												"trueBody": {
													"id": 2667,
													"nodeType": "Block",
													"src": "55681:83:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2661,
																			"name": "_pendingChildren",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "55715:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
																			}
																		},
																		"id": 2663,
																		"indexExpression": {
																			"id": 2662,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2606,
																			"src": "55732:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "55715:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																			"typeString": "struct IERC6059.Child storage ref[] storage ref"
																		}
																	},
																	{
																		"id": 2664,
																		"name": "childIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "55742:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
																			"typeString": "struct IERC6059.Child storage ref[] storage ref"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2660,
																	"name": "_removeChildByIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "55695:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct IERC6059.Child storage ref[] storage pointer,uint256)"
																	}
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55695:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2666,
															"nodeType": "ExpressionStatement",
															"src": "55695:58:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2684,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2608,
														"src": "55926:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55940:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55932:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2685,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55932:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55932:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55926:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2726,
												"nodeType": "IfStatement",
												"src": "55922:574:6",
												"trueBody": {
													"id": 2725,
													"nodeType": "Block",
													"src": "55944:552:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2690,
																	"name": "destinationId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2610,
																	"src": "55962:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55979:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "55962:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2723,
																"nodeType": "Block",
																"src": "56191:295:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2714,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "56328:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_NestableToken_$3069",
																								"typeString": "contract NestableToken"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_NestableToken_$3069",
																								"typeString": "contract NestableToken"
																							}
																						],
																						"id": 2713,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "56320:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2712,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "56320:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "56320:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2716,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2608,
																					"src": "56355:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 2717,
																						"name": "child",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "56379:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																							"typeString": "struct IERC6059.Child memory"
																						}
																					},
																					"id": 2718,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "56385:7:6",
																					"memberName": "tokenId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 589,
																					"src": "56379:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2719,
																					"name": "destinationId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2610,
																					"src": "56414:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2720,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2620,
																					"src": "56449:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2708,
																								"name": "child",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "56259:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																									"typeString": "struct IERC6059.Child memory"
																								}
																							},
																							"id": 2709,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "56265:15:6",
																							"memberName": "contractAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 591,
																							"src": "56259:21:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2707,
																						"name": "IERC6059",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 729,
																						"src": "56250:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC6059_$729_$",
																							"typeString": "type(contract IERC6059)"
																						}
																					},
																					"id": 2710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "56250:31:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC6059_$729",
																						"typeString": "contract IERC6059"
																					}
																				},
																				"id": 2711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "56282:16:6",
																				"memberName": "nestTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 728,
																				"src": "56250:48:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																				}
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "56250:221:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2722,
																		"nodeType": "ExpressionStatement",
																		"src": "56250:221:6"
																	}
																]
															},
															"id": 2724,
															"nodeType": "IfStatement",
															"src": "55958:528:6",
															"trueBody": {
																"id": 2706,
																"nodeType": "Block",
																"src": "55982:203:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2699,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "56068:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_NestableToken_$3069",
																								"typeString": "contract NestableToken"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_NestableToken_$3069",
																								"typeString": "contract NestableToken"
																							}
																						],
																						"id": 2698,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "56060:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2697,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "56060:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2700,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "56060:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2701,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2608,
																					"src": "56095:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2702,
																					"name": "childId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2616,
																					"src": "56119:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2703,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2620,
																					"src": "56148:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2694,
																							"name": "childAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2614,
																							"src": "56008:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2693,
																						"name": "IERC721",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 115,
																						"src": "56000:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																							"typeString": "type(contract IERC721)"
																						}
																					},
																					"id": 2695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "56000:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$115",
																						"typeString": "contract IERC721"
																					}
																				},
																				"id": 2696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "56022:16:6",
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 60,
																				"src": "56000:38:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,uint256,bytes memory) external"
																				}
																			},
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "56000:170:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2705,
																		"nodeType": "ExpressionStatement",
																		"src": "56000:170:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2606,
															"src": "56541:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2729,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "56562:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2730,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "56586:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2731,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "56612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2732,
															"name": "isPending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "56633:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2727,
														"name": "ChildTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "56511:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256,bool)"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56511:141:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2734,
												"nodeType": "EmitStatement",
												"src": "56506:146:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2736,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2606,
															"src": "56695:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2737,
															"name": "childIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "56716:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2738,
															"name": "childAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "56740:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2739,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "56766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2740,
															"name": "isPending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "56787:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2735,
														"name": "_afterTransferChild",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3027,
														"src": "56662:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256,bool)"
														}
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56662:144:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2742,
												"nodeType": "ExpressionStatement",
												"src": "56662:144:6"
											}
										]
									},
									"documentation": {
										"id": 2604,
										"nodeType": "StructuredDocumentation",
										"src": "53778:1198:6",
										"text": " @notice Used to transfer a child token from a given parent token.\n @dev When transferring a child token, the owner of the token is set to `to`, or is not updated in the event of `to`\n  being the `0x0` address.\n @dev Requirements:\n  - `tokenId` must exist.\n @dev Emits {ChildTransferred} event.\n @param tokenId ID of the parent token from which the child token is being transferred\n @param to Address to which to transfer the token to\n @param destinationId ID of the token to receive this child token (MUST be 0 if the destination is not a token)\n @param childIndex Index of a token we are transferring, in the array it belongs to (can be either active array or\n  pending array)\n @param childAddress Address of the child token's collection smart contract.\n @param childId ID of the child token in its own collection smart contract.\n @param isPending A boolean value indicating whether the child token being transferred is in the pending array of the\n  parent token (`true`) or in the active array (`false`)\n @param data Additional data with no specified format, sent in call to `_to`"
									},
									"id": 2744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferChild",
									"nameLocation": "54990:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55022:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55014:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55014:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55047:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55039:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55039:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "destinationId",
												"nameLocation": "55067:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55059:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55059:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "55113:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55105:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "55141:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55133:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55133:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "55171:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55163:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55163:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "isPending",
												"nameLocation": "55193:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55188:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55188:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55225:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "55212:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55212:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55004:231:6"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55253:0:6"
									},
									"scope": 3069,
									"src": "54981:1832:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2767,
										"nodeType": "Block",
										"src": "56956:154:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2754,
															"name": "expectedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "56983:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 2755,
																"name": "child",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "57002:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																	"typeString": "struct IERC6059.Child memory"
																}
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57008:15:6",
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "57002:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "56983:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2758,
															"name": "expectedId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "57039:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 2759,
																"name": "child",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "57053:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
																	"typeString": "struct IERC6059.Child memory"
																}
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57059:7:6",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 589,
															"src": "57053:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "57039:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "56983:83:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2766,
												"nodeType": "IfStatement",
												"src": "56966:137:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2763,
															"name": "UnexpectedChildId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "57084:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57084:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2765,
													"nodeType": "RevertStatement",
													"src": "57077:26:6"
												}
											}
										]
									},
									"id": 2768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkExpectedChild",
									"nameLocation": "56828:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "child",
												"nameLocation": "56870:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "56857:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
													"typeString": "struct IERC6059.Child"
												},
												"typeName": {
													"id": 2746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2745,
														"name": "Child",
														"nameLocations": [
															"56857:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 592,
														"src": "56857:5:6"
													},
													"referencedDeclaration": 592,
													"src": "56857:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
														"typeString": "struct IERC6059.Child"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "expectedAddress",
												"nameLocation": "56893:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "56885:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56885:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "expectedId",
												"nameLocation": "56926:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "56918:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56918:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56847:95:6"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56956:0:6"
									},
									"scope": 3069,
									"src": "56819:291:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "57833:93:6",
										"statements": [
											{
												"assignments": [
													2782
												],
												"declarations": [
													{
														"constant": false,
														"id": 2782,
														"mutability": "mutable",
														"name": "children",
														"nameLocation": "57858:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 2789,
														"src": "57843:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC6059.Child[]"
														},
														"typeName": {
															"baseType": {
																"id": 2780,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2779,
																	"name": "Child",
																	"nameLocations": [
																		"57843:5:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 592,
																	"src": "57843:5:6"
																},
																"referencedDeclaration": 592,
																"src": "57843:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																	"typeString": "struct IERC6059.Child"
																}
															},
															"id": 2781,
															"nodeType": "ArrayTypeName",
															"src": "57843:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
																"typeString": "struct IERC6059.Child[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2786,
												"initialValue": {
													"baseExpression": {
														"id": 2783,
														"name": "_activeChildren",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "57869:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
														}
													},
													"id": 2785,
													"indexExpression": {
														"id": 2784,
														"name": "parentId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "57885:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "57869:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
														"typeString": "struct IERC6059.Child storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57843:51:6"
											},
											{
												"expression": {
													"id": 2787,
													"name": "children",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2782,
													"src": "57911:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IERC6059.Child memory[] memory"
													}
												},
												"functionReturnParameters": 2777,
												"id": 2788,
												"nodeType": "Return",
												"src": "57904:15:6"
											}
										]
									},
									"documentation": {
										"id": 2769,
										"nodeType": "StructuredDocumentation",
										"src": "57244:486:6",
										"text": " @notice Used to retrieve the active child tokens of a given parent token.\n @dev Returns array of Child structs existing for parent token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which to retrieve the active child tokens\n @return struct[] An array of Child structs containing the parent token's active child tokens"
									},
									"functionSelector": "6f19951c",
									"id": 2790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "childrenOf",
									"nameLocation": "57745:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "57773:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "57765:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57755:32:6"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "57817:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC6059.Child[]"
												},
												"typeName": {
													"baseType": {
														"id": 2774,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2773,
															"name": "Child",
															"nameLocations": [
																"57817:5:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 592,
															"src": "57817:5:6"
														},
														"referencedDeclaration": 592,
														"src": "57817:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
															"typeString": "struct IERC6059.Child"
														}
													},
													"id": 2775,
													"nodeType": "ArrayTypeName",
													"src": "57817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
														"typeString": "struct IERC6059.Child[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57816:16:6"
									},
									"scope": 3069,
									"src": "57736:190:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										692
									],
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "58539:108:6",
										"statements": [
											{
												"assignments": [
													2804
												],
												"declarations": [
													{
														"constant": false,
														"id": 2804,
														"mutability": "mutable",
														"name": "pendingChildren",
														"nameLocation": "58564:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2811,
														"src": "58549:30:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC6059.Child[]"
														},
														"typeName": {
															"baseType": {
																"id": 2802,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2801,
																	"name": "Child",
																	"nameLocations": [
																		"58549:5:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 592,
																	"src": "58549:5:6"
																},
																"referencedDeclaration": 592,
																"src": "58549:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																	"typeString": "struct IERC6059.Child"
																}
															},
															"id": 2803,
															"nodeType": "ArrayTypeName",
															"src": "58549:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
																"typeString": "struct IERC6059.Child[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2808,
												"initialValue": {
													"baseExpression": {
														"id": 2805,
														"name": "_pendingChildren",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "58582:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
														}
													},
													"id": 2807,
													"indexExpression": {
														"id": 2806,
														"name": "parentId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2793,
														"src": "58599:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "58582:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
														"typeString": "struct IERC6059.Child storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58549:59:6"
											},
											{
												"expression": {
													"id": 2809,
													"name": "pendingChildren",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2804,
													"src": "58625:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IERC6059.Child memory[] memory"
													}
												},
												"functionReturnParameters": 2799,
												"id": 2810,
												"nodeType": "Return",
												"src": "58618:22:6"
											}
										]
									},
									"documentation": {
										"id": 2791,
										"nodeType": "StructuredDocumentation",
										"src": "57932:497:6",
										"text": " @notice Used to retrieve the pending child tokens of a given parent token.\n @dev Returns array of pending Child structs existing for given parent.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which to retrieve the pending child tokens\n @return struct[] An array of Child structs containing the parent token's pending child tokens"
									},
									"functionSelector": "44ec9344",
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingChildrenOf",
									"nameLocation": "58444:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "58479:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "58471:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58461:32:6"
									},
									"returnParameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "58523:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC6059.Child[]"
												},
												"typeName": {
													"baseType": {
														"id": 2796,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2795,
															"name": "Child",
															"nameLocations": [
																"58523:5:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 592,
															"src": "58523:5:6"
														},
														"referencedDeclaration": 592,
														"src": "58523:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
															"typeString": "struct IERC6059.Child"
														}
													},
													"id": 2797,
													"nodeType": "ArrayTypeName",
													"src": "58523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
														"typeString": "struct IERC6059.Child[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58522:16:6"
									},
									"scope": 3069,
									"src": "58435:212:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "59368:173:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2824,
																	"name": "parentId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "59393:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2823,
																"name": "childrenOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2790,
																"src": "59382:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) view returns (struct IERC6059.Child memory[] memory)"
																}
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59382:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC6059.Child memory[] memory"
															}
														},
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59403:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59382:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2827,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "59413:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59382:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2832,
												"nodeType": "IfStatement",
												"src": "59378:71:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2829,
															"name": "ChildIndexOutOfRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "59427:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59427:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2831,
													"nodeType": "RevertStatement",
													"src": "59420:29:6"
												}
											},
											{
												"assignments": [
													2835
												],
												"declarations": [
													{
														"constant": false,
														"id": 2835,
														"mutability": "mutable",
														"name": "child",
														"nameLocation": "59472:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2844,
														"src": "59459:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
															"typeString": "struct IERC6059.Child"
														},
														"typeName": {
															"id": 2834,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2833,
																"name": "Child",
																"nameLocations": [
																	"59459:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 592,
																"src": "59459:5:6"
															},
															"referencedDeclaration": 592,
															"src": "59459:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																"typeString": "struct IERC6059.Child"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2841,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2836,
															"name": "_activeChildren",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "59480:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
															}
														},
														"id": 2838,
														"indexExpression": {
															"id": 2837,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2815,
															"src": "59496:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "59480:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
															"typeString": "struct IERC6059.Child storage ref[] storage ref"
														}
													},
													"id": 2840,
													"indexExpression": {
														"id": 2839,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "59506:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59480:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage",
														"typeString": "struct IERC6059.Child storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59459:53:6"
											},
											{
												"expression": {
													"id": 2842,
													"name": "child",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2835,
													"src": "59529:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
														"typeString": "struct IERC6059.Child memory"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2843,
												"nodeType": "Return",
												"src": "59522:12:6"
											}
										]
									},
									"documentation": {
										"id": 2813,
										"nodeType": "StructuredDocumentation",
										"src": "58653:595:6",
										"text": " @notice Used to retrieve a specific active child token for a given parent token.\n @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which the child is being retrieved\n @param index Index of the child token in the parent token's active child tokens array\n @return struct A Child struct containing data about the specified child"
									},
									"functionSelector": "2f32f937",
									"id": 2845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "childOf",
									"nameLocation": "59262:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "59287:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "59279:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "59313:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "59305:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59305:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59269:55:6"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "59354:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
													"typeString": "struct IERC6059.Child"
												},
												"typeName": {
													"id": 2820,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2819,
														"name": "Child",
														"nameLocations": [
															"59354:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 592,
														"src": "59354:5:6"
													},
													"referencedDeclaration": 592,
													"src": "59354:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
														"typeString": "struct IERC6059.Child"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59353:14:6"
									},
									"scope": 3069,
									"src": "59253:288:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										714
									],
									"body": {
										"id": 2877,
										"nodeType": "Block",
										"src": "60287:200:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2857,
																	"name": "parentId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2848,
																	"src": "60319:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2856,
																"name": "pendingChildrenOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2812,
																"src": "60301:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) view returns (struct IERC6059.Child memory[] memory)"
																}
															},
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60301:27:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC6059.Child memory[] memory"
															}
														},
														"id": 2859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60329:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "60301:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2860,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2850,
														"src": "60339:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60301:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2865,
												"nodeType": "IfStatement",
												"src": "60297:97:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2862,
															"name": "PendingChildIndexOutOfRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "60365:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60365:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2864,
													"nodeType": "RevertStatement",
													"src": "60358:36:6"
												}
											},
											{
												"assignments": [
													2868
												],
												"declarations": [
													{
														"constant": false,
														"id": 2868,
														"mutability": "mutable",
														"name": "child",
														"nameLocation": "60417:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2877,
														"src": "60404:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
															"typeString": "struct IERC6059.Child"
														},
														"typeName": {
															"id": 2867,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2866,
																"name": "Child",
																"nameLocations": [
																	"60404:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 592,
																"src": "60404:5:6"
															},
															"referencedDeclaration": 592,
															"src": "60404:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
																"typeString": "struct IERC6059.Child"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2874,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2869,
															"name": "_pendingChildren",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "60425:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => struct IERC6059.Child storage ref[] storage ref)"
															}
														},
														"id": 2871,
														"indexExpression": {
															"id": 2870,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2848,
															"src": "60442:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "60425:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage",
															"typeString": "struct IERC6059.Child storage ref[] storage ref"
														}
													},
													"id": 2873,
													"indexExpression": {
														"id": 2872,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2850,
														"src": "60452:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "60425:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage",
														"typeString": "struct IERC6059.Child storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60404:54:6"
											},
											{
												"expression": {
													"id": 2875,
													"name": "child",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2868,
													"src": "60475:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
														"typeString": "struct IERC6059.Child memory"
													}
												},
												"functionReturnParameters": 2855,
												"id": 2876,
												"nodeType": "Return",
												"src": "60468:12:6"
											}
										]
									},
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "59547:613:6",
										"text": " @notice Used to retrieve a specific pending child token from a given parent token.\n @dev Returns a single Child struct locating at `index` of parent token's active child tokens array.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param parentId ID of the parent token for which the pending child token is being retrieved\n @param index Index of the child token in the parent token's pending child tokens array\n @return struct A Child struct containting data about the specified child"
									},
									"functionSelector": "a898e364",
									"id": 2878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingChildOf",
									"nameLocation": "60174:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "60206:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "60198:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60198:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "60232:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "60224:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60224:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60188:55:6"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "60273:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Child_$592_memory_ptr",
													"typeString": "struct IERC6059.Child"
												},
												"typeName": {
													"id": 2853,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2852,
														"name": "Child",
														"nameLocations": [
															"60273:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 592,
														"src": "60273:5:6"
													},
													"referencedDeclaration": 592,
													"src": "60273:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
														"typeString": "struct IERC6059.Child"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60272:14:6"
									},
									"scope": 3069,
									"src": "60165:322:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "61036:68:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2888,
																"name": "_childIsInActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "61053:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2890,
															"indexExpression": {
																"id": 2889,
																"name": "childAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2881,
																"src": "61070:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "61053:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2892,
														"indexExpression": {
															"id": 2891,
															"name": "childId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2883,
															"src": "61084:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "61053:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "61096:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "61053:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2887,
												"id": 2895,
												"nodeType": "Return",
												"src": "61046:51:6"
											}
										]
									},
									"documentation": {
										"id": 2879,
										"nodeType": "StructuredDocumentation",
										"src": "60493:417:6",
										"text": " @notice Used to verify that the given child tokwn is included in an active array of a token.\n @param childAddress Address of the given token's collection smart contract\n @param childId ID of the child token being checked\n @return bool A boolean value signifying whether the given child token is included in an active child tokens array\n  of a token (`true`) or not (`false`)"
									},
									"functionSelector": "4182e4a3",
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "childIsInActive",
									"nameLocation": "60924:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "60957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "60949:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60949:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "60987:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "60979:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60979:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60939:61:6"
									},
									"returnParameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "61030:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "61030:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61029:6:6"
									},
									"scope": 3069,
									"src": "60915:189:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "61987:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2898,
										"nodeType": "StructuredDocumentation",
										"src": "61124:738:6",
										"text": " @notice Hook that is called before any token transfer. This includes minting and burning.\n @dev Calling conditions:\n  - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be transferred to `to`.\n  - When `from` is zero, `tokenId` will be minted to `to`.\n  - When `to` is zero, ``from``'s `tokenId` will be burned.\n  - `from` and `to` are never zero at the same time.\n  To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param from Address from which the token is being transferred\n @param to Address to which the token is being transferred\n @param tokenId ID of the token being transferred"
									},
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "61876:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "61914:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "61906:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61906:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "61936:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "61928:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61928:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "61956:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "61948:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61948:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61896:73:6"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61987:0:6"
									},
									"scope": 3069,
									"src": "61867:122:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2918,
										"nodeType": "Block",
										"src": "62687:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "61995:568:6",
										"text": " @notice Hook that is called after any transfer of tokens. This includes minting and burning.\n @dev Calling conditions:\n  - When `from` and `to` are both non-zero.\n  - `from` and `to` are never zero at the same time.\n  To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param from Address from which the token has been transferred\n @param to Address to which the token has been transferred\n @param tokenId ID of the token that has been transferred"
									},
									"id": 2919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "62577:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "62614:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "62606:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62606:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "62636:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "62628:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62628:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "62656:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "62648:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62648:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62596:73:6"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62687:0:6"
									},
									"scope": 3069,
									"src": "62568:121:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2933,
										"nodeType": "Block",
										"src": "63432:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2920,
										"nodeType": "StructuredDocumentation",
										"src": "62695:550:6",
										"text": " @notice Hook that is called before nested token transfer.\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param from Address from which the token is being transferred\n @param to Address to which the token is being transferred\n @param fromTokenId ID of the token from which the given token is being transferred\n @param toTokenId ID of the token to which the given token is being transferred\n @param tokenId ID of the token being transferred"
									},
									"id": 2934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeNestedTokenTransfer",
									"nameLocation": "63259:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "63303:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "63295:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63295:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63325:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "63317:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63317:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "63345:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "63337:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63337:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "63374:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "63366:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "63401:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "63393:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63393:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63285:129:6"
									},
									"returnParameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63432:0:6"
									},
									"scope": 3069,
									"src": "63250:184:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2948,
										"nodeType": "Block",
										"src": "64158:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2935,
										"nodeType": "StructuredDocumentation",
										"src": "63440:532:6",
										"text": " @notice Hook that is called after nested token transfer.\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param from Address from which the token was transferred\n @param to Address to which the token was transferred\n @param fromTokenId ID of the token from which the given token was transferred\n @param toTokenId ID of the token to which the given token was transferred\n @param tokenId ID of the token that was transferred"
									},
									"id": 2949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterNestedTokenTransfer",
									"nameLocation": "63986:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "64029:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "64021:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64021:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "64051:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "64043:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "64071:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "64063:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "64100:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "64092:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64092:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "64127:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "64119:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64119:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64011:129:6"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64158:0:6"
									},
									"scope": 3069,
									"src": "63977:183:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "65078:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2950,
										"nodeType": "StructuredDocumentation",
										"src": "64166:779:6",
										"text": " @notice Hook that is called before a child is added to the pending tokens array of a given token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param tokenId ID of the token that will receive a new pending child token\n @param childAddress Address of the collection smart contract of the child token expected to be located at the\n  specified index of the given parent token's pending children array\n @param childId ID of the child token expected to be located at the specified index of the given parent token's\n  pending children array"
									},
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeAddChild",
									"nameLocation": "64959:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "64992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "64984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "65017:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "65009:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "65047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "65039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64974:86:6"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65078:0:6"
									},
									"scope": 3069,
									"src": "64950:130:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2970,
										"nodeType": "Block",
										"src": "65996:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2961,
										"nodeType": "StructuredDocumentation",
										"src": "65086:778:6",
										"text": " @notice Hook that is called after a child is added to the pending tokens array of a given token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param tokenId ID of the token that has received a new pending child token\n @param childAddress Address of the collection smart contract of the child token expected to be located at the\n  specified index of the given parent token's pending children array\n @param childId ID of the child token expected to be located at the specified index of the given parent token's\n  pending children array"
									},
									"id": 2971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterAddChild",
									"nameLocation": "65878:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "65910:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "65902:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65902:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "65935:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "65927:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65927:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "65965:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "65957:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65957:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65892:86:6"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65996:0:6"
									},
									"scope": 3069,
									"src": "65869:129:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2983,
										"nodeType": "Block",
										"src": "67057:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2972,
										"nodeType": "StructuredDocumentation",
										"src": "66004:888:6",
										"text": " @notice Hook that is called before a child is accepted to the active tokens array of a given token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param parentId ID of the token that will accept a pending child token\n @param childIndex Index of the child token to accept in the given parent token's pending children array\n @param childAddress Address of the collection smart contract of the child token expected to be located at the\n  specified index of the given parent token's pending children array\n @param childId ID of the child token expected to be located at the specified index of the given parent token's\n  pending children array"
									},
									"id": 2984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeAcceptChild",
									"nameLocation": "66906:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "66942:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "66934:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66934:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "66968:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "66960:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "66996:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "66988:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "67026:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "67018:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66924:115:6"
									},
									"returnParameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67057:0:6"
									},
									"scope": 3069,
									"src": "66897:162:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "68143:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2985,
										"nodeType": "StructuredDocumentation",
										"src": "67065:914:6",
										"text": " @notice Hook that is called after a child is accepted to the active tokens array of a given token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param parentId ID of the token that has accepted a pending child token\n @param childIndex Index of the child token that was accpeted in the given parent token's pending children array\n @param childAddress Address of the collection smart contract of the child token that was expected to be located\n  at the specified index of the given parent token's pending children array\n @param childId ID of the child token that was expected to be located at the specified index of the given parent\n  token's pending children array"
									},
									"id": 2997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterAcceptChild",
									"nameLocation": "67993:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "68028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "68020:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68020:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "68054:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "68046:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "68082:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "68074:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68074:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "68112:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "68104:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68104:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68010:115:6"
									},
									"returnParameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68143:0:6"
									},
									"scope": 3069,
									"src": "67984:161:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3011,
										"nodeType": "Block",
										"src": "69435:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2998,
										"nodeType": "StructuredDocumentation",
										"src": "68151:1094:6",
										"text": " @notice Hook that is called before a child is transferred from a given child token array of a given token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param tokenId ID of the token that will transfer a child token\n @param childIndex Index of the child token that will be transferred from the given parent token's children array\n @param childAddress Address of the collection smart contract of the child token that is expected to be located\n  at the specified index of the given parent token's children array\n @param childId ID of the child token that is expected to be located at the specified index of the given parent\n  token's children array\n @param isPending A boolean value signifying whether the child token is being transferred from the pending child\n  tokens array (`true`) or from the active child tokens array (`false`)"
									},
									"id": 3012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTransferChild",
									"nameLocation": "69259:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "69297:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "69289:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "69322:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "69314:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "69350:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "69342:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69342:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "69380:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "69372:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69372:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "isPending",
												"nameLocation": "69402:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "69397:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3007,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "69397:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69279:138:6"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69435:0:6"
									},
									"scope": 3069,
									"src": "69250:187:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3026,
										"nodeType": "Block",
										"src": "70720:2:6",
										"statements": []
									},
									"documentation": {
										"id": 3013,
										"nodeType": "StructuredDocumentation",
										"src": "69443:1088:6",
										"text": " @notice Hook that is called after a child is transferred from a given child token array of a given token.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param tokenId ID of the token that has transferred a child token\n @param childIndex Index of the child token that was transferred from the given parent token's children array\n @param childAddress Address of the collection smart contract of the child token that was expected to be located\n  at the specified index of the given parent token's children array\n @param childId ID of the child token that was expected to be located at the specified index of the given parent\n  token's children array\n @param isPending A boolean value signifying whether the child token was transferred from the pending child tokens\n  array (`true`) or from the active child tokens array (`false`)"
									},
									"id": 3027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTransferChild",
									"nameLocation": "70545:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "70582:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "70574:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "childIndex",
												"nameLocation": "70607:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "70599:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70599:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "childAddress",
												"nameLocation": "70635:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "70627:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "childId",
												"nameLocation": "70665:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "70657:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "isPending",
												"nameLocation": "70687:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "70682:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70682:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70564:138:6"
									},
									"returnParameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70720:0:6"
									},
									"scope": 3069,
									"src": "70536:186:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3033,
										"nodeType": "Block",
										"src": "71107:2:6",
										"statements": []
									},
									"documentation": {
										"id": 3028,
										"nodeType": "StructuredDocumentation",
										"src": "70728:306:6",
										"text": " @notice Hook that is called before a pending child tokens array of a given token is cleared.\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param tokenId ID of the token that will reject all of the pending child tokens"
									},
									"id": 3034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeRejectAllChildren",
									"nameLocation": "71048:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "71081:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "71073:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71073:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71072:17:6"
									},
									"returnParameters": {
										"id": 3032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71107:0:6"
									},
									"scope": 3069,
									"src": "71039:70:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3040,
										"nodeType": "Block",
										"src": "71493:2:6",
										"statements": []
									},
									"documentation": {
										"id": 3035,
										"nodeType": "StructuredDocumentation",
										"src": "71115:306:6",
										"text": " @notice Hook that is called after a pending child tokens array of a given token is cleared.\n @dev To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n @param tokenId ID of the token that has rejected all of the pending child tokens"
									},
									"id": 3041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterRejectAllChildren",
									"nameLocation": "71435:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "71467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "71459:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71458:17:6"
									},
									"returnParameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71493:0:6"
									},
									"scope": 3069,
									"src": "71426:69:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3067,
										"nodeType": "Block",
										"src": "72144:76:6",
										"statements": [
											{
												"expression": {
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3051,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3046,
															"src": "72154:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
																"typeString": "struct IERC6059.Child storage ref[] storage pointer"
															}
														},
														"id": 3053,
														"indexExpression": {
															"id": 3052,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3048,
															"src": "72160:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "72154:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_storage",
															"typeString": "struct IERC6059.Child storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 3054,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3046,
															"src": "72169:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
																"typeString": "struct IERC6059.Child storage ref[] storage pointer"
															}
														},
														"id": 3059,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3055,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3046,
																	"src": "72175:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
																		"typeString": "struct IERC6059.Child storage ref[] storage pointer"
																	}
																},
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "72181:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "72175:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 3057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72190:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "72175:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "72169:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_storage",
															"typeString": "struct IERC6059.Child storage ref"
														}
													},
													"src": "72154:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Child_$592_storage",
														"typeString": "struct IERC6059.Child storage ref"
													}
												},
												"id": 3061,
												"nodeType": "ExpressionStatement",
												"src": "72154:38:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3062,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3046,
															"src": "72202:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
																"typeString": "struct IERC6059.Child storage ref[] storage pointer"
															}
														},
														"id": 3064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72208:3:6",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "72202:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct IERC6059.Child storage ref[] storage pointer)"
														}
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72202:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3066,
												"nodeType": "ExpressionStatement",
												"src": "72202:11:6"
											}
										]
									},
									"documentation": {
										"id": 3042,
										"nodeType": "StructuredDocumentation",
										"src": "71517:547:6",
										"text": " @notice Used to remove a specified child token form an array using its index within said array.\n @dev The caller must ensure that the length of the array is valid compared to the index passed.\n @dev The Child struct consists of the following values:\n  [\n      tokenId,\n      contractAddress\n  ]\n @param array An array od Child struct containing info about the child tokens in a given child tokens array\n @param index An index of the child token to remove in the accompanying array"
									},
									"id": 3068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeChildByIndex",
									"nameLocation": "72078:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "72114:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "72098:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
													"typeString": "struct IERC6059.Child[]"
												},
												"typeName": {
													"baseType": {
														"id": 3044,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3043,
															"name": "Child",
															"nameLocations": [
																"72098:5:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 592,
															"src": "72098:5:6"
														},
														"referencedDeclaration": 592,
														"src": "72098:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Child_$592_storage_ptr",
															"typeString": "struct IERC6059.Child"
														}
													},
													"id": 3045,
													"nodeType": "ArrayTypeName",
													"src": "72098:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Child_$592_storage_$dyn_storage_ptr",
														"typeString": "struct IERC6059.Child[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "72129:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "72121:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72097:38:6"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72144:0:6"
									},
									"scope": 3069,
									"src": "72069:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3070,
							"src": "15661:56561:6",
							"usedErrors": [
								737,
								739,
								741,
								743,
								745,
								747,
								749,
								751,
								753,
								755,
								757,
								759,
								761,
								763,
								765,
								767,
								773,
								775,
								777,
								779,
								781,
								783,
								785,
								787,
								789,
								791
							],
							"usedEvents": [
								14,
								23,
								32,
								546,
								557,
								568,
								573,
								586
							]
						}
					],
					"src": "95:72127:6"
				},
				"id": 6
			}
		}
	}
}